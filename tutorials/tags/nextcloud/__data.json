{"type":"data","nodes":[null,{"type":"data","data":[{"collection":1},{"en":2,"ru":55},[3,8,13],{"slug":4,"title":5,"description":6,"tutorials":7},"databases","Databases","A database is an ordered data set that is stored and accessed electronically. It helps to store and manage large amounts of structured and unstructured information. There are various database management systems (DBMS) that provide a user and programming interface for working. SQL, a structured query language, is used to work with databases. There are different types of DBMS: relational, document-oriented, graph and others. The most famous MySQL, PostgreSQL, Oracle are relational DBMSs.\n",[],{"slug":9,"title":10,"description":11,"tutorials":12},"installing-the-server-software","Installing the server software","In this section we consider installing various software on the server.",[],{"slug":14,"title":15,"description":16,"tutorials":17},"linux-basics","Linux Basics","Linux is a free and open source operating system based on the Linux kernel.",[18],{"slug":19,"tags":20,"title":32,"content":33,"updatedAt":34,"markdown":35,"description":36,"cover":37,"tableOfContents":38},"ssh-key-generation",[21,22,23,24,25,26,27,28,29,30,31],"linux","ubuntu","debian","windows","ssh","ssh-keygen","openssh","puttygen","ed25519","rsa","ecdsa","SSH keys generation","# SSH keys generation\n\n##  Benefits of using SSH keys\nSSH (Secure Shell) is a network protocol used for secure communication and remote control of hosts. The protocol is used in various areas, from server administration and working with cloud hosting to interacting with databases and corporate systems. One of the key features of SSH is the authentication mechanism that uses a private and public key pair. In this article, we will look at how key generation works, explaining in detail the process of creating and configuring additional key parameters on different operating systems.\n\nUsing SSH keys is significantly more secure than using a password. This is primarily because passwords can be guessed through brute force attacks, whereas a private key is a long and random sequence of data that is almost impossible to guess. In addition, unlike a password, the private key is not transmitted over the network — only the fact that it is used is verified by the server. \nAnother important advantage is the ability to configure additional security settings, such as the use of passphrases to protect private keys.\n\n## Key encryption algorithms\n\nSSH provides support for a variety of encryption algorithms to ensure secure communication and authentication. The most common are RSA, Ed25519, ECDSA, and DSA.  \nToday, it is preferable to use the modern Ed25519 algorithm, designed for high performance, small key sizes, and strong security. It is based on the Curve25519 elliptic curve and uses deterministic key generation to eliminate randomness vulnerabilities.\n\nThe RSA algorithm is an example of a strong encryption algorithm, and its security is based on the computational complexity of factoring large integers, specifically the product of two large primes. RSA with a 2048-bit key is considered secure against current threats, while 4096-bit keys provide protection against predicted future advances in computing. It is the most common key today. \n\nECDSA is a variant of the elliptic curve digital signature algorithm (DSA). It provides strong security due to its smaller key sizes compared to RSA, making it effective for systems with limited bandwidth or storage. It is faster than RSA, but provides less reliable protection than Ed25519 due to certain problems in the implementation of the algorithm. \n\nThe DSA algorithm is not recommended for use in modern systems due to the low level of security.  \n\nThe table shows a comparison of algorithms:  \n\n| Algorithm | Key size | Performance | Security | Example of use |\n|-----:|---------------|---------------|---------------|---------------|\n|Ed25519 | 256 bit | High | Reliable  | Modern systems, systems with limited resources |\n|RSA | 2048 – 4096 bits | Average | Reliable (when using a 2048-bit key) | General Purpose Systems |\n|ECDSA | 256 – 521 bits | Average | Reliable | Modern systems, systems with limited resources |\n|DSA | 1024 bit | Low | Unreliable | Legacy systems |\n\nWe will consider examples of generating Ed25519 and RSA keys, the size of which we will choose 2048 bits.\n\n## Generation of public and private keys\n\nThe OpenSSH client is already included in the core software in Windows 10/11, Ubuntu, Debian. Let's consider generating keys on a client machine using it.  \nFor Windows, press Win+R, type cmd. For Ubuntu/Debian, start the terminal with the keyboard shortcut Ctrl+Alt+T.  \nThe key generation command looks like this:\n```\nssh-keygen [options]\n```\nAs options, you can use:  \n**–t**  [ dsa | ecdsa | ed25519 | rsa ]  \nSpecifies the type of cryptographic algorithm for the key.\n**-b** [key_size]  \nSpecifies the length of the key in bits.  \n**-C** [commentary]  \nAdds a comment to the key, helping to identify the key.  Does not affect key security.  \n**-f** [file_path]  \nSpecifies the path and file name to save the generated keys.  \n**-N** [key_password]  \nSets a password to protect the private key.  \n**-q**  \nDisables the display of messages about the key generation process. Useful in automated scenarios.  \n**-v**  Enables verbose output mode. Useful for debugging if you want to follow every step of a command.  \n**-P** [old_password]  \nChanges the password of the private key. In combination with the **-f** option, sets a new password for the existing private key. \n\nAs an example, let's create an RSA key on Windows with the following parameters:  \n• key length 2048 bits  \n• Comment \"Win-Ubuntu\"  \n• Private key password: ssh  \n• Key Name: id_rsa2048  \n• Key location: C:\\Users\\jetcry\\ssh_keys\\  \n\n> The \"ssh_keys\" folder must be pre-created. \n\nCommand to create a key with the specified parameters: \n```\nssh-keygen –t rsa –b 2048 –C Win-Ubuntu –N ssh –f C:\\Users\\jetcry\\ssh_keys\\id_rsa2048\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"ssh keygen \" src=/topics/linux-basics/ssh-key-generation/static/en_image_01.png  width=1024>\u003C/p>\n\nLet's take a look at the process of creating the ed25519 key without specifying parameters:\n```\nssh-keygen –t ed25519\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"ssh keygen ed25519\" src=/topics/linux-basics/ssh-key-generation/static/en_image_02.png width=1024>\u003C/p>\nHere we have specified the key name, password (passphrase).\nThe key that was created was saved in the user's root folder.\nFor Ububntu/Debian, the command syntax is similar. Let's create a key for Ubuntu. Let's check that it appeared in the .ssh home directory. \n\u003Cp align=\"center\">\u003Cimg alt=\"ssh-keygen ubuntu\" src=/topics/linux-basics/ssh-key-generation/static/en_image_03.png width=1024>\u003C/p>\nThe key pairs are generated and are located in the .ssh directory of the current Ubuntu user.\n\n## Key Generation with PuttyGen\n\nIn case you do not have OpenSSH installed, for example, on Windows 7 it is not included in the basic software set, an alternative way to create a key is to use the PuttyGen application, available for download from the official website [Putty](https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html).\n\nSelect the key type and start generating it. In our case, we chose the key type – RSA, the key length is 2048 bits.\n\u003Cp align=\"center\">\u003Cimg alt=\"Puttygen\" src=/topics/linux-basics/ssh-key-generation/static/en_image_04.png width=600>\u003C/p>\nDuring generation, you need to randomly move the mouse across the screen, this will create a unique key. \n\u003Cp align=\"center\">\u003Cimg alt=\"Puttygen_move_mouse\" src=/topics/linux-basics/ssh-key-generation/static/en_image_05.png width=600>\u003C/p>\nOnce the key has been created, it can be protected with a passphrase. After that, you need to save the public and private keys, preferably create a .ssh folder for the current user beforehand, e.g. C:\\Users\\jetcry\\.ssh\n\u003Cp align=\"center\">\u003Cimg alt=\"Puttygen_save key\" src=/topics/linux-basics/ssh-key-generation/static/en_image_06.png width=600>\u003C/p>\nHere's how Windows displays the keys you've created:\n\u003Cp align=\"center\">\u003Cimg alt=\"Puttygen_end\" src=/topics/linux-basics/ssh-key-generation/static/en_image_07.png width=600>\u003C/p>\nThe key generation is complete. \n\n## Conclusion\n\n1. The use of SSH keys is now a standard for ensuring information security requirements.\n2. Most commonly, OpenSSH is utilized to generate keys. The command is \"ssh-keygen\".\n3. The ssh-keygen options allow you to extensively control the parameters of the keys that are generated.\n4. An alternative option is PuttyGen.\n5. It is preferable to use ED25519 or RSA keys with a key length of at least 2048 bits.\n",["Date","2025-08-02T11:12:48.374Z"],"\n\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"benefits-of-using-ssh-keys\"\n>Benefits of using SSH keys\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>SSH (Secure Shell) is a network protocol used for secure communication and remote control of hosts. The protocol is used in various areas, from server administration and working with cloud hosting to interacting with databases and corporate systems. One of the key features of SSH is the authentication mechanism that uses a private and public key pair. In this article, we will look at how key generation works, explaining in detail the process of creating and configuring additional key parameters on different operating systems.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Using SSH keys is significantly more secure than using a password. This is primarily because passwords can be guessed through brute force attacks, whereas a private key is a long and random sequence of data that is almost impossible to guess. In addition, unlike a password, the private key is not transmitted over the network — only the fact that it is used is verified by the server.\nAnother important advantage is the ability to configure additional security settings, such as the use of passphrases to protect private keys.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"key-encryption-algorithms\"\n>Key encryption algorithms\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>SSH provides support for a variety of encryption algorithms to ensure secure communication and authentication. The most common are RSA, Ed25519, ECDSA, and DSA.\u003Cbr>\nToday, it is preferable to use the modern Ed25519 algorithm, designed for high performance, small key sizes, and strong security. It is based on the Curve25519 elliptic curve and uses deterministic key generation to eliminate randomness vulnerabilities.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>The RSA algorithm is an example of a strong encryption algorithm, and its security is based on the computational complexity of factoring large integers, specifically the product of two large primes. RSA with a 2048-bit key is considered secure against current threats, while 4096-bit keys provide protection against predicted future advances in computing. It is the most common key today. \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>ECDSA is a variant of the elliptic curve digital signature algorithm (DSA). It provides strong security due to its smaller key sizes compared to RSA, making it effective for systems with limited bandwidth or storage. It is faster than RSA, but provides less reliable protection than Ed25519 due to certain problems in the implementation of the algorithm. \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>The DSA algorithm is not recommended for use in modern systems due to the low level of security.  \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">The table shows a comparison of algorithms:  \u003C/p>\n\u003Ctable class=\"my-5\">\n\u003Cthead>\n\u003Ctr>\n\u003Cth align=\"right\" class=\"text-md\">Algorithm\u003C/th>\n\u003Cth class=\"text-md\">Key size\u003C/th>\n\u003Cth class=\"text-md\">Performance\u003C/th>\n\u003Cth class=\"text-md\">Security\u003C/th>\n\u003Cth class=\"text-md\">Example of use\u003C/th>\n\u003C/tr>\n\u003C/thead>\n\u003Ctbody>\n\u003Ctr>\n\u003Ctd align=\"right\" class=\"text-sm\">Ed25519\u003C/td>\n\u003Ctd class=\"text-sm\">256 bit\u003C/td>\n\u003Ctd class=\"text-sm\">High\u003C/td>\n\u003Ctd class=\"text-sm\">Reliable\u003C/td>\n\u003Ctd class=\"text-sm\">Modern systems, systems with limited resources\u003C/td>\n\u003C/tr>\n\u003Ctr>\n\u003Ctd align=\"right\" class=\"text-sm\">RSA\u003C/td>\n\u003Ctd class=\"text-sm\">2048 – 4096 bits\u003C/td>\n\u003Ctd class=\"text-sm\">Average\u003C/td>\n\u003Ctd class=\"text-sm\">Reliable (when using a 2048-bit key)\u003C/td>\n\u003Ctd class=\"text-sm\">General Purpose Systems\u003C/td>\n\u003C/tr>\n\u003Ctr>\n\u003Ctd align=\"right\" class=\"text-sm\">ECDSA\u003C/td>\n\u003Ctd class=\"text-sm\">256 – 521 bits\u003C/td>\n\u003Ctd class=\"text-sm\">Average\u003C/td>\n\u003Ctd class=\"text-sm\">Reliable\u003C/td>\n\u003Ctd class=\"text-sm\">Modern systems, systems with limited resources\u003C/td>\n\u003C/tr>\n\u003Ctr>\n\u003Ctd align=\"right\" class=\"text-sm\">DSA\u003C/td>\n\u003Ctd class=\"text-sm\">1024 bit\u003C/td>\n\u003Ctd class=\"text-sm\">Low\u003C/td>\n\u003Ctd class=\"text-sm\">Unreliable\u003C/td>\n\u003Ctd class=\"text-sm\">Legacy systems\u003C/td>\n\u003C/tr>\n\u003C/tbody>\n\u003C/table>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>We will consider examples of generating Ed25519 and RSA keys, the size of which we will choose 2048 bits.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"generation-of-public-and-private-keys\"\n>Generation of public and private keys\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>The OpenSSH client is already included in the core software in Windows 10/11, Ubuntu, Debian. Let’s consider generating keys on a client machine using it.\u003Cbr>\nFor Windows, press Win+R, type cmd. For Ubuntu/Debian, start the terminal with the keyboard shortcut Ctrl+Alt+T.\u003Cbr>\nThe key generation command looks like this:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">ssh\u003C/span>-keygen\u003Cspan class=\"hljs-meta\"> [options]\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">As options, you can use:\u003Cbr>\n\u003Cstrong>–t\u003C/strong>  [ dsa | ecdsa | ed25519 | rsa ]\u003Cbr>\nSpecifies the type of cryptographic algorithm for the key.\n\u003Cstrong>-b\u003C/strong> [key_size]\u003Cbr>\nSpecifies the length of the key in bits.\u003Cbr>\n\u003Cstrong>-C\u003C/strong> [commentary]\u003Cbr>\nAdds a comment to the key, helping to identify the key.  Does not affect key security.\u003Cbr>\n\u003Cstrong>-f\u003C/strong> [file_path]\u003Cbr>\nSpecifies the path and file name to save the generated keys.\u003Cbr>\n\u003Cstrong>-N\u003C/strong> [key_password]\u003Cbr>\nSets a password to protect the private key.\u003Cbr>\n\u003Cstrong>-q\u003C/strong>\u003Cbr>\nDisables the display of messages about the key generation process. Useful in automated scenarios.\u003Cbr>\n\u003Cstrong>-v\u003C/strong>  Enables verbose output mode. Useful for debugging if you want to follow every step of a command.\u003Cbr>\n\u003Cstrong>-P\u003C/strong> [old_password]\u003Cbr>\nChanges the password of the private key. In combination with the \u003Cstrong>-f\u003C/strong> option, sets a new password for the existing private key. \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>As an example, let’s create an RSA key on Windows with the following parameters:\u003Cbr>\n• key length 2048 bits\u003Cbr>\n• Comment “Win-Ubuntu”\u003Cbr>\n• Private key password: ssh\u003Cbr>\n• Key Name: id_rsa2048\u003Cbr>\n• Key location: C:\\Users\\jetcry\\ssh_keys\\  \u003C/p>\n\u003Cblockquote>\n\u003Cp class=\"mt-2 mb-2 text-md\">The “ssh_keys” folder must be pre-created. \u003C/p>\n\u003C/blockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Command to create a key with the specified parameters: \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-variable\">ssh\u003C/span>\u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-variable\">keygen\u003C/span> \u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-variable\">t\u003C/span> \u003Cspan class=\"hljs-variable\">rsa\u003C/span> \u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-variable\">b\u003C/span> \u003Cspan class=\"hljs-number\">2048\u003C/span> \u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-built_in\">C\u003C/span> \u003Cspan class=\"hljs-variable\">Win\u003C/span>\u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-variable\">Ubuntu\u003C/span> \u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-built_in\">N\u003C/span> \u003Cspan class=\"hljs-variable\">ssh\u003C/span> \u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-variable\">f\u003C/span> \u003Cspan class=\"hljs-built_in\">C\u003C/span>\u003Cspan class=\"hljs-operator\">:\u003C/span>\\\u003Cspan class=\"hljs-variable\">Users\u003C/span>\\\u003Cspan class=\"hljs-variable\">jetcry\u003C/span>\\\u003Cspan class=\"hljs-type\">ssh_keys\u003C/span>\\\u003Cspan class=\"hljs-type\">id_rsa2048\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/en_image_01.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"ssh keygen \"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/en_image_01.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Let’s take a look at the process of creating the ed25519 key without specifying parameters:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>ssh-keygen -\u003Cspan class=\"hljs-built_in\">t\u003C/span> \u003Cspan class=\"hljs-symbol\">ed25519\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/en_image_02.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"ssh keygen ed25519\"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/en_image_02.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nHere we have specified the key name, password (passphrase).\nThe key that was created was saved in the user's root folder.\nFor Ububntu/Debian, the command syntax is similar. Let's create a key for Ubuntu. Let's check that it appeared in the .ssh home directory. \n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/en_image_03.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"ssh-keygen ubuntu\"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/en_image_03.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nThe key pairs are generated and are located in the .ssh directory of the current Ubuntu user.\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"key-generation-with-puttygen\"\n>Key Generation with PuttyGen\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>In case you do not have OpenSSH installed, for example, on Windows 7 it is not included in the basic software set, an alternative way to create a key is to use the PuttyGen application, available for download from the official website \u003Ca   href=\"https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>Putty\u003C/a>.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Select the key type and start generating it. In our case, we chose the key type – RSA, the key length is 2048 bits.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/en_image_04.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Puttygen\"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/en_image_04.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nDuring generation, you need to randomly move the mouse across the screen, this will create a unique key. \n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/en_image_05.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Puttygen_move_mouse\"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/en_image_05.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nOnce the key has been created, it can be protected with a passphrase. After that, you need to save the public and private keys, preferably create a .ssh folder for the current user beforehand, e.g. C:\\Users\\jetcry\\.ssh\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/en_image_06.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Puttygen_save key\"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/en_image_06.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nHere's how Windows displays the keys you've created:\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/en_image_07.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Puttygen_end\"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/en_image_07.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nThe key generation is complete.\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"conclusion\"\n>Conclusion\u003C/h2>\n\u003Col>\n\u003Cli>The use of SSH keys is now a standard for ensuring information security requirements.\u003C/li>\n\u003Cli>Most commonly, OpenSSH is utilized to generate keys. The command is “ssh-keygen”.\u003C/li>\n\u003Cli>The ssh-keygen options allow you to extensively control the parameters of the keys that are generated.\u003C/li>\n\u003Cli>An alternative option is PuttyGen.\u003C/li>\n\u003Cli>It is preferable to use ED25519 or RSA keys with a key length of at least 2048 bits.\u003C/li>\n\u003C/ol>\n","In this article we will consider key encryption algorithms. We will generate public and private keys using ssh-keygen and PuttyGen.","/topics/linux-basics/ssh-key-generation/static/ru_image_00.webp",[39,43,46,49,52],{"title":40,"level":41,"id":42},"Benefits of using SSH keys",2,"benefits-of-using-ssh-keys",{"title":44,"level":41,"id":45},"Key encryption algorithms","key-encryption-algorithms",{"title":47,"level":41,"id":48},"Generation of public and private keys","generation-of-public-and-private-keys",{"title":50,"level":41,"id":51},"Key Generation with PuttyGen","key-generation-with-puttygen",{"title":53,"level":41,"id":54},"Conclusion","conclusion",[56,123,323],{"slug":4,"title":57,"description":58,"tutorials":59},"Базы данных","База данных — это упорядоченный набор данных, который хранится и доступен в электронном виде. Она помогает хранить и управлять большим количеством структурированной и неструктурированной информации. Существуют различные системы управления базами данных (СУБД), которые обеспечивают пользовательский и программный интерфейс для работы. Для работы с базами данных применяется SQL (Structured Query Language) —язык структурированных запросов. Существуют различные виды СУБД: реляционные, документоориентированные, графовые и другие. Наиболее известные MySQL, PostgreSQL, Oracle относятся к реляционным СУБД.\n",[60,94],{"slug":61,"tags":62,"title":66,"content":67,"updatedAt":68,"markdown":69,"description":70,"cover":71,"tableOfContents":72},"how-to-install-postgresql-on-ubuntu-server",[63,64,22,65],"postgresql","pgadmin","ubuntu-24.04","Как установить PostgreSQL 17 на Ubuntu 24.04","# Как установить PostgreSQL 17 на Ubuntu 24.04\n\nСистема управления базами данных (СУБД) PostgreSQL 17 является бесплатной объектно-реляционной системой управления базами данных с открытым исходным кодом. Она поддерживает большой набор различных типов данных и многопользовательскую работу. СУБД является кроссплатформенной и может быть установлена на все популярные операционные системы. PostgreSQL соответствует требованиям ACID (atomicity, consistency, isolation, durability или атомарность, согласованность, изоляция, устойчивость) для проведения транзакций и обеспечения сохранности данных.  \nВ статье мы рассмотрим установку, первоначальную настройку и выполнение удаленного подключения к серверу с помощью pgAdmin. \n\n## Подготовка системы к установке\n\nПеред началом установки обновим список пакетов и установим последние версии обновлений командой: \n\n```\nsudo apt update && sudo apt upgrade -y\n```\n\nУстановим необходимые пакеты:\n\n```\nsudo apt install -y curl ca-certificates\n```\n\nВ этой команде:  \n•\tcurl — кроссплатформенный инструмент командной строки для передачи данных (с помощью протоколов FTP, TFTP, SCP, SFTP и др.) и работы с URL-адресами.  \n•\tca-certificates — пакет, необходимый для безопасной передачи данных и подтверждения подлинности сертификатов.  \nСоздадим директорию для ключей репозитория:\n\n```\nsudo install -d /usr/share/postgresql-common/pgdg\n```\nСкачаем и добавим ключ репозитория:\n\n```\nsudo curl -o /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc --fail https://www.postgresql.org/media/keys/ACCC4CF8.asc\n```\nДобавим репозиторий в список источников APT:\n\n```\necho \"deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt noble-pgdg main\" | sudo tee /etc/apt/sources.list.d/pgdg.list\n```\n\nСнова обновим список пакетов:\n\n```\nsudo apt update && sudo apt upgrade -y\n```\n\nПредварительная подготовка Вашей системы закончена.\n\n## Установка PostgreSQL 17\n\nТеперь установим PostgreSQL 17 и дополнительные модули, необходимые для работы: \n\n```\nsudo apt install -y postgresql-17 postgresql-client-17 postgresql-contrib\n```\n\nВ этой команде:  \n•\tpostgresql-17 — основной сервер базы данных.  \n•\tpostgresql-client-17 — клиентские утилиты для взаимодействия с сервером.  \n•\tpostgresql-contrib — дополнительные расширения и утилиты.  \nПосле установки PostgreSQL должен автоматически запуститься. Проверим, что служба активна:\n```\nsudo systemctl status postgresql\n```\nВы должны увидеть сообщение, указывающее на активное состояние службы:\n\u003Cp align=\"center\">\u003Cimg alt=\"активное состояние службы postgresql\" src=/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_01.png width=1024>\u003C/p>\n\n## Защита базы данных\n\nПо умолчанию PostgreSQL использует одноранговую аутентификацию \"peer\", что означает, что доступ к базе данных осуществляется только от имени системного пользователя. Изначально удаленное подключение не поддерживается.\nНастроим пароль для базового пользователя postgres. Заходим в базу данных: \n\n```\nsudo -u postgres psql\n```\nУкажем новый пароль **new_password** для пользователя по умолчанию postgres (обратите внимание, он в апострофах и строка обязательно завершается знаком ;)\n\n```\nALTER USER postgres WITH ENCRYPTED PASSWORD 'new_password';\n```\n\nСоздадим нового пользователя manager и укажем его пароль **manager_password**:\n\n```\nCREATE USER manager ENCRYPTED PASSWORD 'manager_password';\n```\nТеперь необходимо выйти из базы данных и включить доступ по паролю в конфигурационном файле pg_hba.conf. \nДля выхода из базы данных введите:\n\n```\n\\q\n```\n\nЗатем введите команду в командной строке Ubuntu:\n\n```\nsudo sed -i '/^local/s/peer/scram-sha-256/' /etc/postgresql/17/main/pg_hba.conf\n```\nПерезапустим PostgreSQL:\n\n```\nsudo systemctl restart postgresql\n```\n\nПробуем зайти в базу данных:\n\n```\nsudo -u postgres psql\n```\n\nПри входе теперь требуется ввести пароль.\n\n\u003Cp align=\"center\">\u003Cimg alt=\"необходим ввод пароля\" src=/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_02.png width=1024>\u003C/p>\n\n## Создание новой базы данных\n\nВ качестве примера создадим новую базу данных под именем **salers** и дадим права на ее управление пользователю **manager**\n\n\n```\nsudo -u postgres createdb salers -O manager\n```\n\nОбратите внимание, что пароль Вы вводите для пользователя postgres.\nЗаходим в базу данных уже как пользователь manager\n\n```\nsudo -u postgres psql -U manager -d salers\n```\n\nВ базе данных создадим таблицу менеджеры по продажам:\n\n```\nCREATE TABLE sales_managers (\n           manager_id SERIAL PRIMARY KEY,\n           first_name VARCHAR(50),\n           last_name VARCHAR(50),\n           date_of_employment DATE\n       );\n```\n\nЗаполним данные трех сотрудников для примера:\n\n```\nINSERT INTO sales_managers\n       (first_name, last_name, date_of_employment)\n       VALUES\n       ( 'Иван', 'Касаткин', '2024-11-15'),\n       ( 'Артём', 'Фролов', '2020-10-10'),\n       ( 'Юлия', 'Юсупова', '2019-12-17');\n\nSELECT * FROM sales_managers;\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"тестовая база данных\" src=/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_03.png width=1024>\u003C/p>\n\n## Настройка удаленного доступа к PostgreSQL\n\nФайлы конфигурации для PostgreSQL 17 в Ubuntu 24.04 хранятся в подкаталоге _/etc/postgresql/17/main_.\nНас будут интересовать два файла: postgresql.conf и pg_hba.conf. Файл postgresql.conf является основным файлом конфигурации и определяет порт по умолчанию, который прослушивает сервер базы данных, максимальный объём памяти на операцию, прослушиваемые IP-адреса и другие параметры, необходимые для корректной работы системы управления базами данных.\nНастроим подключение к PostgreSQL с удаленного хоста. Откроем файл с помощью текстового редактора nano:\n\n```\nsudo nano  /etc/postgresql/17/main/postgresql.conf\n```\n\nНайдем раздел **«CONNECTIONS AND AUTHENTICATION»**\n\nРаскомментируем строчку listen_addresses и заменим 'localhost' на '*':\n\n```\nlisten_addresses = '*'\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Раскомментируем строчку listen_addresses\" src=/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_04.png width=1024>\u003C/p>\n\nЗвездочка указывает серверу PostgreSQL прослушивать все сетевые интерфейсы. Если Вы хотите, чтобы сервер базы данных прослушивал только определенные сетевые интерфейсы, укажите их IP-адреса через запятую, например:\n\n```\nlisten_addresses = ‘192.168.0.111, localhost, 10.10.10.150’\n```\n\nДля сохранения файла в редакторе nano: Ctrl+O. Соглашаемся с сохранением, нажимаем Enter. Выход: Ctrl+X.\n\nОтредактируем файл конфигурации **pg_hba.conf**. Он определяет, какие IP-адреса или диапазоны IP-адресов разрешены для подключения к серверу базы данных PostgreSQL. Также в нем указывается, какие учётные записи и механизмы аутентификации должны использоваться для регистрации пользователей.\nОткрываем его с помощью текстового редактора nano:\n\n```\nsudo nano /etc/postgresql/17/main/pg_hba.conf\n```\n\nРасскомментируем строчку host. Укажем,  к каким базам, каким пользователям и с каких IP-адресов возможен доступ. Так же укажем механизм аутентификации scram-sha-256.\nАутентификация SCRAM-SHA-256 описана в [RFC 7677](https://datatracker.ietf.org/doc/html/rfc7677). Она предотвращает перехват паролей в ненадежных соединениях и поддерживает хранение паролей на сервере в хешированной форме. Считается наиболее безопасным сегодня методом аутентификации. \n\n\u003Cp align=\"center\">\u003Cimg alt=\"Расскомментируем строчку host. Укажем,  к каким базам, каким пользователям и с каких IP-адресов возможен доступ\" src=/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_05.png width=1024>\u003C/p>\n\nПерезапускаем базу данных:\n\n```\nsudo systemctl restart postgresql\n```\n\nПроверим, прослушивает ли PostgreSQL порт 5432, который задан в настройках по умолчанию в файле postgresql.conf. Если Вы поменяете порт, то при проверке укажите его номер. Команда:\n\n```\nnetstat -ano | grep 5432\n```\n\n>Примечание: Если у Вас не установлен пакет net-tools, установите его командой:\n>```\n>sudo apt install net-tools\n>```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"net-tools\" src=/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_06.png width=1024>\u003C/p>\n\nНа скриншоте видно, что порт 5432 занят процессом PostgreSQL, все настроено корректно.\n\n## Удаленное подключение к базе с помощью pgAdmin\n\nДля примера выполним подключение к серверу PostgreSQL с помощью pgAdmin. Загрузить и установить pgAdmin можно с [официального сайта](https://www.pgadmin.org/download/).  \nЗапускаем программу.\nВыбираем пункт «Add new server».\n\u003Cp align=\"center\">\u003Cimg alt=\"подключение через pgAdmin\" src=/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_07.png width=1024>\u003C/p>\n\nПереходим на вкладку Connections.\nЗаполняем наши данные. В примере я указываю IP-адрес и порт, который прослушивает сервер, имя базы данных, пользователя и его пароль.\n\n\u003Cp align=\"center\">\u003Cimg alt=\"указываем параметры подключения (IP-адрес и порт, который прослушивает сервер, имя базы данных, пользователя и его пароль)\" src=/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_08.png width=1024>\u003C/p>\n\nПосле того, как Вы сохраните параметры, подключение произойдет автоматически. Если Вы нажмете правой клавишей мыши на базе данных, то можете выбрать PSQL tools:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"подключение выполнено успешно\" src=/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_09.png width=1024>\u003C/p>\n\nПосле этого Вы сможете работать с базой данных через PSQL:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Работа с базой данных через PSQL\" src=/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_10.png width=1024>\u003C/p>\n\n## Заключение\n\nМы установили PostgreSQL 17 на Ubuntu 24.04. Создали тестовую базу данных, пользователя, защитили доступ к базе данных с помощью пароля. Настроили удаленное подключение к PostgreSQL и протестировали корректность работы с помощью pgAdmin.\n",["Date","2025-08-02T11:12:48.145Z"],"\n\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Система управления базами данных (СУБД) PostgreSQL 17 является бесплатной объектно-реляционной системой управления базами данных с открытым исходным кодом. Она поддерживает большой набор различных типов данных и многопользовательскую работу. СУБД является кроссплатформенной и может быть установлена на все популярные операционные системы. PostgreSQL соответствует требованиям ACID (atomicity, consistency, isolation, durability или атомарность, согласованность, изоляция, устойчивость) для проведения транзакций и обеспечения сохранности данных.\u003Cbr>\nВ статье мы рассмотрим установку, первоначальную настройку и выполнение удаленного подключения к серверу с помощью pgAdmin. \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"подготовка-системы-к-установке\"\n>Подготовка системы к установке\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Перед началом установки обновим список пакетов и установим последние версии обновлений командой: \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt update &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt upgrade -y\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Установим необходимые пакеты:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install -y curl ca-certificates\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">В этой команде:\u003Cbr>\n•\tcurl — кроссплатформенный инструмент командной строки для передачи данных (с помощью протоколов FTP, TFTP, SCP, SFTP и др.) и работы с URL-адресами.\u003Cbr>\n•\tca-certificates — пакет, необходимый для безопасной передачи данных и подтверждения подлинности сертификатов.\u003Cbr>\nСоздадим директорию для ключей репозитория:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> install -d /usr/share/postgresql-common/pgdg\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Скачаем и добавим ключ репозитория:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> curl -o /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc --fail https://www.postgresql.org/media/keys/ACCC4CF8.asc\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Добавим репозиторий в список источников APT:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt noble-pgdg main&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">tee\u003C/span> /etc/apt/sources.list.d/pgdg.list\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Снова обновим список пакетов:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt update &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt upgrade -y\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Предварительная подготовка Вашей системы закончена.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"установка-postgresql-17\"\n>Установка PostgreSQL 17\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Теперь установим PostgreSQL 17 и дополнительные модули, необходимые для работы: \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install -y postgresql-17 postgresql-client-17 postgresql-contrib\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">В этой команде:\u003Cbr>\n•\tpostgresql-17 — основной сервер базы данных.\u003Cbr>\n•\tpostgresql-client-17 — клиентские утилиты для взаимодействия с сервером.\u003Cbr>\n•\tpostgresql-contrib — дополнительные расширения и утилиты.\u003Cbr>\nПосле установки PostgreSQL должен автоматически запуститься. Проверим, что служба активна:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl status postgresql\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Вы должны увидеть сообщение, указывающее на активное состояние службы:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_01.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"активное состояние службы postgresql\"\n                            src=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_01.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"защита-базы-данных\"\n>Защита базы данных\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>По умолчанию PostgreSQL использует одноранговую аутентификацию “peer”, что означает, что доступ к базе данных осуществляется только от имени системного пользователя. Изначально удаленное подключение не поддерживается.\nНастроим пароль для базового пользователя postgres. Заходим в базу данных: \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> -u postgres psql\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Укажем новый пароль \u003Cstrong>new_password\u003C/strong> для пользователя по умолчанию postgres (обратите внимание, он в апострофах и строка обязательно завершается знаком ;)\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">ALTER\u003C/span> \u003Cspan class=\"hljs-keyword\">USER\u003C/span> postgres \u003Cspan class=\"hljs-keyword\">WITH\u003C/span> \u003Cspan class=\"hljs-keyword\">ENCRYPTED\u003C/span> \u003Cspan class=\"hljs-keyword\">PASSWORD\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;new_password&#x27;\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Создадим нового пользователя manager и укажем его пароль \u003Cstrong>manager_password\u003C/strong>:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">CREATE\u003C/span> \u003Cspan class=\"hljs-keyword\">USER\u003C/span> manager \u003Cspan class=\"hljs-keyword\">ENCRYPTED\u003C/span> \u003Cspan class=\"hljs-keyword\">PASSWORD\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;manager_password&#x27;\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Теперь необходимо выйти из базы данных и включить доступ по паролю в конфигурационном файле pg_hba.conf.\nДля выхода из базы данных введите:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\\\u003Cspan class=\"hljs-selector-tag\">q\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Затем введите команду в командной строке Ubuntu:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> sed -i \u003Cspan class=\"hljs-string\">&#x27;/^local/s/peer/scram-sha-256/&#x27;\u003C/span> /etc/postgresql/17/main/pg_hba.conf\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перезапустим PostgreSQL:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart postgresql\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Пробуем зайти в базу данных:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> -u postgres psql\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">При входе теперь требуется ввести пароль.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_02.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"необходим ввод пароля\"\n                            src=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_02.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"создание-новой-базы-данных\"\n>Создание новой базы данных\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В качестве примера создадим новую базу данных под именем \u003Cstrong>salers\u003C/strong> и дадим права на ее управление пользователю \u003Cstrong>manager\u003C/strong>\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> -u postgres createdb salers -O manager\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Обратите внимание, что пароль Вы вводите для пользователя postgres.\nЗаходим в базу данных уже как пользователь manager\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> -u postgres psql -U manager -d salers\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В базе данных создадим таблицу менеджеры по продажам:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">CREATE\u003C/span> \u003Cspan class=\"hljs-keyword\">TABLE\u003C/span> sales_managers (\n           manager_id \u003Cspan class=\"hljs-type\">SERIAL\u003C/span> \u003Cspan class=\"hljs-keyword\">PRIMARY KEY\u003C/span>,\n           first_name \u003Cspan class=\"hljs-type\">VARCHAR\u003C/span>(\u003Cspan class=\"hljs-number\">50\u003C/span>),\n           last_name \u003Cspan class=\"hljs-type\">VARCHAR\u003C/span>(\u003Cspan class=\"hljs-number\">50\u003C/span>),\n           date_of_employment \u003Cspan class=\"hljs-type\">DATE\u003C/span>\n       );\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Заполним данные трех сотрудников для примера:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">INSERT\u003C/span> \u003Cspan class=\"hljs-keyword\">INTO\u003C/span> sales_managers\n       (first_name, last_name, date_of_employment)\n       \u003Cspan class=\"hljs-keyword\">VALUES\u003C/span>\n       ( \u003Cspan class=\"hljs-string\">&#x27;Иван&#x27;\u003C/span>, \u003Cspan class=\"hljs-string\">&#x27;Касаткин&#x27;\u003C/span>, \u003Cspan class=\"hljs-string\">&#x27;2024-11-15&#x27;\u003C/span>),\n       ( \u003Cspan class=\"hljs-string\">&#x27;Артём&#x27;\u003C/span>, \u003Cspan class=\"hljs-string\">&#x27;Фролов&#x27;\u003C/span>, \u003Cspan class=\"hljs-string\">&#x27;2020-10-10&#x27;\u003C/span>),\n       ( \u003Cspan class=\"hljs-string\">&#x27;Юлия&#x27;\u003C/span>, \u003Cspan class=\"hljs-string\">&#x27;Юсупова&#x27;\u003C/span>, \u003Cspan class=\"hljs-string\">&#x27;2019-12-17&#x27;\u003C/span>);\n\n\u003Cspan class=\"hljs-keyword\">SELECT\u003C/span> * \u003Cspan class=\"hljs-keyword\">FROM\u003C/span> sales_managers;\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_03.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"тестовая база данных\"\n                            src=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_03.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"настройка-удаленного-доступа-к-postgresql\"\n>Настройка удаленного доступа к PostgreSQL\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Файлы конфигурации для PostgreSQL 17 в Ubuntu 24.04 хранятся в подкаталоге \u003Cem>/etc/postgresql/17/main\u003C/em>.\nНас будут интересовать два файла: postgresql.conf и pg_hba.conf. Файл postgresql.conf является основным файлом конфигурации и определяет порт по умолчанию, который прослушивает сервер базы данных, максимальный объём памяти на операцию, прослушиваемые IP-адреса и другие параметры, необходимые для корректной работы системы управления базами данных.\nНастроим подключение к PostgreSQL с удаленного хоста. Откроем файл с помощью текстового редактора nano:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano  /etc/postgresql/17/main/postgresql.conf\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Найдем раздел \u003Cstrong>«CONNECTIONS AND AUTHENTICATION»\u003C/strong>\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Раскомментируем строчку listen_addresses и заменим ‘localhost’ на ’*‘:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attr\">listen_addresses\u003C/span> = \u003Cspan class=\"hljs-string\">&#x27;*&#x27;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_04.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Раскомментируем строчку listen_addresses\"\n                            src=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_04.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Звездочка указывает серверу PostgreSQL прослушивать все сетевые интерфейсы. Если Вы хотите, чтобы сервер базы данных прослушивал только определенные сетевые интерфейсы, укажите их IP-адреса через запятую, например:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">listen_addresses\u003C/span> = ‘\u003Cspan class=\"hljs-number\">192.168.0.111\u003C/span>, localhost, \u003Cspan class=\"hljs-number\">10.10.10.150\u003C/span>’\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для сохранения файла в редакторе nano: Ctrl+O. Соглашаемся с сохранением, нажимаем Enter. Выход: Ctrl+X.\u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Отредактируем файл конфигурации \u003Cstrong>pg_hba.conf\u003C/strong>. Он определяет, какие IP-адреса или диапазоны IP-адресов разрешены для подключения к серверу базы данных PostgreSQL. Также в нем указывается, какие учётные записи и механизмы аутентификации должны использоваться для регистрации пользователей.\nОткрываем его с помощью текстового редактора nano:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/postgresql/17/main/pg_hba.conf\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Расскомментируем строчку host. Укажем,  к каким базам, каким пользователям и с каких IP-адресов возможен доступ. Так же укажем механизм аутентификации scram-sha-256.\nАутентификация SCRAM-SHA-256 описана в \u003Ca   href=\"https://datatracker.ietf.org/doc/html/rfc7677\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>RFC 7677\u003C/a>. Она предотвращает перехват паролей в ненадежных соединениях и поддерживает хранение паролей на сервере в хешированной форме. Считается наиболее безопасным сегодня методом аутентификации. \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_05.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Расскомментируем строчку host. Укажем,  к каким базам, каким пользователям и с каких IP-адресов возможен доступ\"\n                            src=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_05.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перезапускаем базу данных:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart postgresql\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проверим, прослушивает ли PostgreSQL порт 5432, который задан в настройках по умолчанию в файле postgresql.conf. Если Вы поменяете порт, то при проверке укажите его номер. Команда:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>netstat \u003Cspan class=\"hljs-punctuation\">-\u003C/span>ano \u003Cspan class=\"hljs-string\">| grep 5432\u003C/span>\u003C/code>\u003C/pre>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Примечание: Если у Вас не установлен пакет net-tools, установите его командой:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install net-tools\u003C/code>\u003C/pre>\n\u003C/blockquote>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_06.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"net-tools\"\n                            src=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_06.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>На скриншоте видно, что порт 5432 занят процессом PostgreSQL, все настроено корректно.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"удаленное-подключение-к-базе-с-помощью-pgadmin\"\n>Удаленное подключение к базе с помощью pgAdmin\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для примера выполним подключение к серверу PostgreSQL с помощью pgAdmin. Загрузить и установить pgAdmin можно с \u003Ca   href=\"https://www.pgadmin.org/download/\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>официального сайта\u003C/a>.\u003Cbr>\nЗапускаем программу.\nВыбираем пункт «Add new server».\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_07.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"подключение через pgAdmin\"\n                            src=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_07.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Переходим на вкладку Connections.\nЗаполняем наши данные. В примере я указываю IP-адрес и порт, который прослушивает сервер, имя базы данных, пользователя и его пароль.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_08.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"указываем параметры подключения (IP-адрес и порт, который прослушивает сервер, имя базы данных, пользователя и его пароль)\"\n                            src=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_08.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После того, как Вы сохраните параметры, подключение произойдет автоматически. Если Вы нажмете правой клавишей мыши на базе данных, то можете выбрать PSQL tools:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_09.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"подключение выполнено успешно\"\n                            src=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_09.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После этого Вы сможете работать с базой данных через PSQL:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_10.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Работа с базой данных через PSQL\"\n                            src=\"/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_10.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"заключение\"\n>Заключение\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Мы установили PostgreSQL 17 на Ubuntu 24.04. Создали тестовую базу данных, пользователя, защитили доступ к базе данных с помощью пароля. Настроили удаленное подключение к PostgreSQL и протестировали корректность работы с помощью pgAdmin.\u003C/p>\n","В статье рассмотрим как установить PostgreSQL на Ubuntu 24.04. Выполним первоначальные настройки. Создадим безопасное подключение к СУБД с помощью pgAdmin.","/topics/databases/how-to-install-postgresql-on-ubuntu-server/static/ru_image_00.webp",[73,76,79,82,85,88,91],{"title":74,"level":41,"id":75},"Подготовка системы к установке","подготовка-системы-к-установке",{"title":77,"level":41,"id":78},"Установка PostgreSQL 17","установка-postgresql-17",{"title":80,"level":41,"id":81},"Защита базы данных","защита-базы-данных",{"title":83,"level":41,"id":84},"Создание новой базы данных","создание-новой-базы-данных",{"title":86,"level":41,"id":87},"Настройка удаленного доступа к PostgreSQL","настройка-удаленного-доступа-к-postgresql",{"title":89,"level":41,"id":90},"Удаленное подключение к базе с помощью pgAdmin","удаленное-подключение-к-базе-с-помощью-pgadmin",{"title":92,"level":41,"id":93},"Заключение","заключение",{"slug":95,"tags":96,"title":98,"content":99,"updatedAt":100,"markdown":101,"description":102,"cover":103,"tableOfContents":104},"how-to-install-mysql-on-ubuntu-server",[97,22,25],"mysql","Как установить MySQL на Ubuntu 24.04","# Как установить MySQL на Ubuntu 24.04\n\n## Введение \n\nMySQL представляет собой свободно распространяемую реляционную систему управления базами данных с открытым исходным кодом. Чаще всего ее устанавливают в рамках популярного стека LAMP (Linux, Apache, MySQL, PHP/Python/Perl). С помощью языка структурированных запросов SQL система управляет данными, которые находятся в базе.  \nВ статье мы рассмотрим этапы установки и настройки безопасности MySQL на Ubuntu Server 24.04, а также процесс создания пользователей. \nВерсия MySQL 8.0 доступна для релизов Ubuntu Server 20.04 и выше.  \nСледуя приведенным ниже инструкциям, Вы сможете настроить работающую реляционную систему управления базами данных, которая подойдет для разработки веб-сайтов, приложений или хранения различных данных.  \n>Если вы устанавливаете MySQL на виртуальную машину, рекомендуем использовать приложение [Putty](https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html) для подключения. В противном случае Вы можете столкнуться с проблемами кодировки при чтении информации из базы данных. \n> Мы подробно разбирали подключение к удаленному серверу по SSH  в статье \u003Ca href=/linux-basics/connect-to-the-server-using-ssh-keys>Подключение к серверу с помощью SSH-ключей\u003C/a>.\n\u003Cp align=\"center\">\u003Cimg alt=\"кодировка mysql\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_01.png width=1024>\u003C/p>\n\n## Установка MySQL\n\nВ сервере Ubuntu 24.04 для установки MySQL мы воспользуемся репозиторием пакетов **APT**. На данный момент версия MySQL, доступная в репозитории Ubuntu по умолчанию, – это версия 8.0.41.\nДля корректной установки MySQL последней версии обновим список пакетов с помощью указанной утилиты, запущенной от прав суперпользователя:\n\n>Запуск всех команд идет от имени суперпользователя.\n>\n```\nsudo apt update\n```\nПри необходимости проведем обновление старых версий пакетов на новые:\n```\nsudo apt upgrade\n```\nПосле успешного обновления переходим к процедуре установки:\n```\nsudo apt-get install mysql-server\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"запуск установки mysql\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_02.png width=1024>\u003C/p>\n\nПосле завершения установки запуск сервиса MySQL произойдет автоматически. Проверим, \nчто установка прошла успешно и сервис MySQL запущен:\n```\nsudo systemctl start mysql.service\n```\nДополнительно можно проверить статус сервиса MySQL с помощью команды:\n```\nsudo systemctl status mysql\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка статуса службы\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_03.png width=1024>\u003C/p>\n\nЕсли есть необходимость в проверке сетевого статуса сервиса, то его можно провести с помощью команды:\n```\nsudo ss -tap | grep mysql\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка сетевого статуса\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_04.png width=1024>\u003C/p>\n\nТакже дополнительно можно убедиться, что мы установили последнюю версию MySQL:\n```\nmysql --version\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка версии mysql\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_05.png width=1024>\u003C/p>\n\nЕсли по каким-либо причинам сервис не запустился автоматически или статус отображается как неактивный, то необходимо перезапустить его:\n```\nsudo service mysql restart\n```\nДля того чтобы MySQL запускался автоматически при загрузке операционной системы выполним команду:\n```\nsudo systemctl enable mysql\n```\nУбедиться, что MySQL запускается вместе с операционной системой монжо с помощью команды:\n```\nsudo systemctl is-enabled mysql.service\n```\nНа этом установка завершена, переходим к настройкам установленного сервера MyQSL.\n\n## Настройка MySQL\n\nПосле успешной установки сервера MySQL создается основной каталог конфигурации **/etc/mysql/**. В данном каталоге содержится файл конфигурации сервера баз данных MySQL – **my.cnf**. Для того, чтобы провести установку пользовательских параметров отредактируйте файл **.my.cnf** из директории **$HOME/.my.cnf**.  \nВы можете самостоятельно провести дополнительные настройки сервера MySQL, такие как ведение log-файла, номер порта, IP-адрес и другие, путем редактирования файлов **mysql.cnf** и **mysqld.cnf** с помощью текстового редактора nano или vim, находящиеся в директориях **/etc/mysql/conf.d/** и **/etc/mysql/mysql.conf.d/** соответственно. \n\u003Cp align=\"center\">\u003Cimg alt=\"файл mysql.cnf\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_06.png width=1024>\u003C/p>\n\n\u003Cp align=\"center\">\u003Cimg alt=\"файл mysqld.cnf\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_07.png width=1024>\u003C/p>\n\nПосле внесения изменений в конфигурационные файлы, необходимо провести перезапуск сервиса MySQL:\n```\nsudo systemctl restart mysql.service\n```\nУ сервера MySQL есть журнал службы, просмотреть который можно с помощью:\n```\nsudo journalctl -u mysql.service\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"журнал службы\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_08.png width=1024>\u003C/p>\n\nЕсли необходимо посмотреть журнал службы более подробно воспользуйтесь командой:\n```\nsudo journalctl -u mysql.service -xe\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"журнал службы подробно\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_09.png width=1024>\u003C/p>\n\nФайл журнала ошибок MySQL сервера по умолчанию расположен в /var/log/mysql/error.log. Посмотреть последние записи можно с помощью:\n```\nsudo tail -f /var/log/mysql/error.log\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка log-файла\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_10.png width=1024>\u003C/p>\n\nВыход из логов: CTRL+Z.\n\nПосле первой установки MySQL необходимо провести улучшение безопасности. Для этого служит mysql_secure_installation – интерактивный скрипт безопасности, включенный в систему управления базами данных. Данный скрипт проводит изменение некоторых параметров безопасности по умолчанию, например, запрещает удаленный вход в систему с правами суперпользователя и удаляет выборочных пользователей.\n```\nsudo mysql_secure_installation\n```\nПосле запуска скрипта начинается диалог, в процессе которого мы внесем изменения в параметры безопасности установленного MySQL. Первым будет задан вопрос о необходимости настройки плагина проверки паролей, который можно использовать для проверки надежности паролей новых пользователей MySQL, до того, как они будут приняты системой. Если плагин будет включен, то все созданные пользователи будут проходить процедуру аутентификации с помощью пароля, соответствующего выбранной политике.\n\u003Cp align=\"center\">\u003Cimg alt=\"запуск скрипта безопасности\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_11.png width=1024>\u003C/p>\n\nВыберем уровень сложности пароля для работы плагина проверки паролей. Уровня три: 0 Низкий, 1 Средний и 2 Высокий. Какой уровень выбрать решать Вам, а мы выберем максимальный уровень.\n\u003Cp align=\"center\">\u003Cimg alt=\"уровень сложности пароля\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_12.png width=1024>\u003C/p>\nНа текущем этапе настройки должна произойти установка пароля пользователю root, но поскольку по умолчанию используется аутентификация с помощью auth_socket, установка будет пропущена. Если для пользователя root уже была выполнена настройка аутентификации по паролю, то установите пароль в соответствии с уровнем сложности выбранном на предыдущем этапе.\n\u003Cp align=\"center\">\u003Cimg alt=\"пароль для суперпользователя\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_13.png width=1024>\u003C/p>\n\nНа следующем шаге будет предложено удалить анонимных пользователей, которые были созданы самим сервисом автоматически, выбираем согласиться:\n\u003Cp align=\"center\">\u003Cimg alt=\"удаление анонимных пользователей\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_14.png width=1024>\u003C/p>\n\nТеперь запрос на отключение удалённого входа root пользователя, также соглашаемся:\n\u003Cp align=\"center\">\u003Cimg alt=\"отключение удаленного входа\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_15.png width=1024>\u003C/p>\n\nАналогично поступаем с удалением созданных тестовых баз данных:\n\u003Cp align=\"center\">\u003Cimg alt=\"удаление тестовых таблиц\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_16.png width=1024>\u003C/p>\n\nСоглашаемся с перезагрузкой привилегий:\n\u003Cp align=\"center\">\u003Cimg alt=\"перезагрузка привилегий\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_17.png width=1024>\u003C/p>\n\nНастройка завершена, MySQL немедленно учел внесенные изменения и готов к работе. \n\nСледующим шагом проведем настройку аутентификации для учетной записи root.\n\n## Настройка аутентификации для root\n\nВходим в консоль MySQL:\n```\nsudo mysql\n```\nПеред настройкой аутентификации проверим версию, статус и параметры нашего сервера:\n```\nSTATUS;\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка статуса сервера\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_18.png width=1024>\u003C/p>\n\n>Так как все настройки будут проходит путем отправки SQL-запросов к базе данных, каждая команда должна оканчиваться **;**\n\nПо умолчанию в установках Ubuntu учетная запись root не настроена для подключения к службам с использованием пароля. Для того, чтобы установить доступ к службе MySQL по паролю для данной учетной записи, необходимо провести изменение плагина авторизации с auth_socket на caching_sha2_password.  \nДалее нам необходимо выполнить запрос пользователей с типом их авторизации:\n```\nSELECT user,authentication_string,plugin,host FROM mysql.user;\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"таблица пользователей mysql\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_19.png width=1024>\u003C/p>\n\nВ результате запроса в списке пользователей видно, что у пользователя root в значении plugin стоит auth_socket, а значение authentication_string пусто. Проведем обновление плагина авторизации и установим пароль (в качестве примера установлен пароль ~MysqlU24, помните, что создаваемый пароль должен удовлетворять требованиям, установленным Вами в плагине проверки паролей):\n```\nALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY ' ~MysqlU24';\n```\nПрименим проведенные изменения:\n```\nFLUSH PRIVILEGES;\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"установка пароля пользователю root\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_20.png width=1024>\u003C/p>\n\nНе все приложения, которые работают с севером MySQL, поддерживают надежную работу с плагином безопасности **caching_sha2_password**. При необходимости установите плагин **mysql_native_password** для повышения надежности. Настройка аутентификации завершена, выходим с помощью exit.\n\nТеперь для подключения к базе данных потребуется ввести: \n```\nmysql -u root –p\n```\nПри попытке подключения с помощью команды sudo mysql будет выведена ошибка доступа.\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка входа без пароля\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_21.png width=1024>\u003C/p>\n \nЕсли вам требуется вернуться в методу аутентификации по умолчанию и выполнять подключение к MySQL как суперпользователь root с помощью команды sudo mysql необходимо выполнить подключение к MySQL с помощью имени пользователя и пароля. Далее возвращаем настройки аутентификации по умолчанию с помощью команды:\n```\nALTER USER 'root'@'localhost' IDENTIFIED WITH auth_socket;\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"вход root с паролем\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_22.png width=1024>\u003C/p>\n\n## Создание пользователя и предоставление привилегий в MySQL\n\nПосле создания и настройки MySQL сервера может возникнуть необходимость в создании пользователя с набором определенных прав и привилегий. Создадим пользователя sysadmin с помощью команды:\n```\nCREATE USER 'sysadmin'@'localhost' IDENTIFIED BY '~MysqlU241';\n```\nВ примере мы создаем пользователя sysadmin с паролем ~MysqlU241.\n\u003Cp align=\"center\">\u003Cimg alt=\"создание пользователя\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_23.png width=1024>\u003C/p>\n\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка создания пользователя\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_24.png width=1024>\u003C/p>\n\nПредоставим права на работу с базой данных созданному пользователю:\n```\nGRANT CREATE, ALTER, DROP, INSERT, UPDATE, DELETE, SELECT, REFERENCES, RELOAD on *.* TO 'sysadmin'@'localhost' **WITH GRANT** OPTION;\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"предоставление прав пользователю\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_25.png width=1024>\u003C/p>\n\nОбратите свое внимание, что предоставление прав пользователю выполнено с использованием параметра WITH GRANT. Это позволит вашему пользователю MySQL предоставлять любые разрешения, которые у него есть, другим пользователям в системе. \n\nЕсли есть необходимость в предоставлении всех привилегий созданному пользователю, то стоит воспользоваться командой:\n```\nGRANT ALL PRIVILEGES ON *.* TO 'sysadmin'@'localhost' WITH GRANT OPTION;\n```\n\n>Будьте внимательны при предоставлении привилегий пользователю. Параметр **ALL PRIVILEGES** предоставит пользователю широкие привилегии, как у суперпользователя. Такие широкие привилегии позволят ему иметь полный контроль над каждой базой данных на сервере. Для просмотра назначенных прав и привилегий пользователю используем команду:\n```\nSHOW GRANTS FOR 'sysadmin'@'localhost';\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"просмотр прав и привилегий пользователя\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_26.png width=1024>\u003C/p>\n\nДля того, чтобы изменения вступили в силу, рекомендуется выполнить команду по обновлению привилегий и прав пользователей:\n```\nFLUSH PRIVILEGES;\n```\nЕсли возникнет необходимость отозвать предоставленные пользователю права и привилегии, воспользуйтесь командой:\n```\nREVOKE ALL PRIVILEGES ON *.* FROM 'sysadmin'@'localhost';\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"удаление привилегий пользователя\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_27.png width=1024>\u003C/p>\n\nСоздание и настройка пользователя на этом завершена. Можно проверить его работу и подключиться с использованием его имени и пароля.\n\nЕсли в процессе работы потребуется удаление созданного пользователя, то воспользуйтесь командой:\n```\nDROP USER 'sysadmin'@'localhost';\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"удаление созданного пользователя\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_28.png width=1024>\u003C/p>\n\nПользователь удален, теперь не отображается в таблице пользователей MySQL.\n\nВозможно потребуется удаление установленного сервера MySQL. \nЧтобы удаление произошло корректно и не было выполнения службы, выполним:\n```\nsudo systemctl stop mysql\n```\nДля того чтобы провести удаление сервера также необходимо воспользоваться репозиторием APT. При выполнении команды будет произведено удаление всех баз данных и самого сервера:\n```\nsudo apt-get remove mysql-server\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"удаление сервера mysql\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_29.png width=1024>\u003C/p>\n\nБыли удалены основные пакеты MySQL, но не конфигурационные файлы, логи и каталоги.\n\u003Cp align=\"center\">\u003Cimg alt=\"удаление каталогов сервера\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_30.png width=1024>\u003C/p> \n\nУдалим конфигурационные каталоги с файлами и логами:\n```\nrm -rf /etc/mysql /var/lib/mysql /var/log/mysql\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка удаления каталогов\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_31.png width=1024>\u003C/p>\n\nПроведем удаление всех пакетов, установленных как зависимости MySQL:\n```\napt autoremove\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка удаления пакетов\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_32.png width=1024>\u003C/p>\n\nЕсли у вас были создан специальный пользователь для MySQL, нужно удалить \nи его, выполнив последовательно команды:\n```\ndeluser mysql\nrm -rf /home/mysql\n```\nПроведем проверку полного удаления сервера MySQL с использованием команды проверки процесса:\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка статуса службы\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_33.png width=1024>\u003C/p>\n\nЕсли были выведены данные о неполной остановке демона MySQL, выполните:\n```\nsudo systemctl daemon-reload\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"остановка службы\" src=/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_34.png width=1024>\u003C/p>\n\nСервер MySQL со всеми пакетами был успешно удален из системы.\n\n## Краткие итоги\n\n1. На сегодняшний день MySQL сервер является распространенной системой управления базами данных, используемой в операционных системах Linux.\n2. Для установки MySQL в ручном режиме предпочтительней пользоваться репозиторием APT.\n3. После установки сервера необходимо в обязательном порядке провести улучшение безопасности. \n4. Суперпользователю root доступно подключение к серверу как в парольном, так и беспарольном варианте.\n",["Date","2025-08-02T11:12:48.065Z"],"\n\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"введение\"\n>Введение\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>MySQL представляет собой свободно распространяемую реляционную систему управления базами данных с открытым исходным кодом. Чаще всего ее устанавливают в рамках популярного стека LAMP (Linux, Apache, MySQL, PHP/Python/Perl). С помощью языка структурированных запросов SQL система управляет данными, которые находятся в базе.\u003Cbr>\nВ статье мы рассмотрим этапы установки и настройки безопасности MySQL на Ubuntu Server 24.04, а также процесс создания пользователей.\nВерсия MySQL 8.0 доступна для релизов Ubuntu Server 20.04 и выше.\u003Cbr>\nСледуя приведенным ниже инструкциям, Вы сможете настроить работающую реляционную систему управления базами данных, которая подойдет для разработки веб-сайтов, приложений или хранения различных данных.  \u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если вы устанавливаете MySQL на виртуальную машину, рекомендуем использовать приложение \u003Ca   href=\"https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>Putty\u003C/a> для подключения. В противном случае Вы можете столкнуться с проблемами кодировки при чтении информации из базы данных.\nМы подробно разбирали подключение к удаленному серверу по SSH  в статье \u003Ca href=https://github.com/HostVDS-com/tutorials/blob/main/topics/linux-basics/connect-to-the-server-using-ssh-keys/ru.md>Подключение к серверу с помощью SSH-ключей\u003C/a>.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_01.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"кодировка mysql\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_01.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003C/blockquote>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"установка-mysql\"\n>Установка MySQL\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В сервере Ubuntu 24.04 для установки MySQL мы воспользуемся репозиторием пакетов \u003Cstrong>APT\u003C/strong>. На данный момент версия MySQL, доступная в репозитории Ubuntu по умолчанию, – это версия 8.0.41.\nДля корректной установки MySQL последней версии обновим список пакетов с помощью указанной утилиты, запущенной от прав суперпользователя:\u003C/p>\n\u003Cblockquote>\n\u003Cp class=\"mt-2 mb-2 text-md\">Запуск всех команд идет от имени суперпользователя.\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt update\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>При необходимости проведем обновление старых версий пакетов на новые:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt upgrade\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После успешного обновления переходим к процедуре установки:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt-get install mysql-server\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_02.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"запуск установки mysql\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_02.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003C/blockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После завершения установки запуск сервиса MySQL произойдет автоматически. Проверим,\nчто установка прошла успешно и сервис MySQL запущен:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl start mysql.service\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Дополнительно можно проверить статус сервиса MySQL с помощью команды:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl status mysql\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_03.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка статуса службы\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_03.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если есть необходимость в проверке сетевого статуса сервиса, то его можно провести с помощью команды:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ss -tap | grep mysql\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_04.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка сетевого статуса\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_04.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Также дополнительно можно убедиться, что мы установили последнюю версию MySQL:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>mysql \u003Cspan class=\"hljs-comment\">--version\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_05.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка версии mysql\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_05.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если по каким-либо причинам сервис не запустился автоматически или статус отображается как неактивный, то необходимо перезапустить его:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> service mysql restart\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для того чтобы MySQL запускался автоматически при загрузке операционной системы выполним команду:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl \u003Cspan class=\"hljs-built_in\">enable\u003C/span> mysql\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Убедиться, что MySQL запускается вместе с операционной системой монжо с помощью команды:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl is-enabled mysql.service\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>На этом установка завершена, переходим к настройкам установленного сервера MyQSL.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"настройка-mysql\"\n>Настройка MySQL\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После успешной установки сервера MySQL создается основной каталог конфигурации \u003Cstrong>/etc/mysql/\u003C/strong>. В данном каталоге содержится файл конфигурации сервера баз данных MySQL – \u003Cstrong>my.cnf\u003C/strong>. Для того, чтобы провести установку пользовательских параметров отредактируйте файл \u003Cstrong>.my.cnf\u003C/strong> из директории \u003Cstrong>$HOME/.my.cnf\u003C/strong>.\u003Cbr>\nВы можете самостоятельно провести дополнительные настройки сервера MySQL, такие как ведение log-файла, номер порта, IP-адрес и другие, путем редактирования файлов \u003Cstrong>mysql.cnf\u003C/strong> и \u003Cstrong>mysqld.cnf\u003C/strong> с помощью текстового редактора nano или vim, находящиеся в директориях \u003Cstrong>/etc/mysql/conf.d/\u003C/strong> и \u003Cstrong>/etc/mysql/mysql.conf.d/\u003C/strong> соответственно. \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_06.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"файл mysql.cnf\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_06.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_07.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"файл mysqld.cnf\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_07.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После внесения изменений в конфигурационные файлы, необходимо провести перезапуск сервиса MySQL:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart mysql.service\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>У сервера MySQL есть журнал службы, просмотреть который можно с помощью:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> journalctl -u mysql.service\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_08.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"журнал службы\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_08.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если необходимо посмотреть журнал службы более подробно воспользуйтесь командой:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> journalctl -u mysql.service -xe\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_09.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"журнал службы подробно\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_09.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Файл журнала ошибок MySQL сервера по умолчанию расположен в /var/log/mysql/error.log. Посмотреть последние записи можно с помощью:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">tail\u003C/span> -f /var/log/mysql/error.log\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_10.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка log-файла\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_10.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Выход из логов: CTRL+Z.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После первой установки MySQL необходимо провести улучшение безопасности. Для этого служит mysql_secure_installation – интерактивный скрипт безопасности, включенный в систему управления базами данных. Данный скрипт проводит изменение некоторых параметров безопасности по умолчанию, например, запрещает удаленный вход в систему с правами суперпользователя и удаляет выборочных пользователей.\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> mysql_secure_installation\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После запуска скрипта начинается диалог, в процессе которого мы внесем изменения в параметры безопасности установленного MySQL. Первым будет задан вопрос о необходимости настройки плагина проверки паролей, который можно использовать для проверки надежности паролей новых пользователей MySQL, до того, как они будут приняты системой. Если плагин будет включен, то все созданные пользователи будут проходить процедуру аутентификации с помощью пароля, соответствующего выбранной политике.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_11.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"запуск скрипта безопасности\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_11.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Выберем уровень сложности пароля для работы плагина проверки паролей. Уровня три: 0 Низкий, 1 Средний и 2 Высокий. Какой уровень выбрать решать Вам, а мы выберем максимальный уровень.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_12.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"уровень сложности пароля\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_12.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nНа текущем этапе настройки должна произойти установка пароля пользователю root, но поскольку по умолчанию используется аутентификация с помощью auth_socket, установка будет пропущена. Если для пользователя root уже была выполнена настройка аутентификации по паролю, то установите пароль в соответствии с уровнем сложности выбранном на предыдущем этапе.\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_13.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"пароль для суперпользователя\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_13.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>На следующем шаге будет предложено удалить анонимных пользователей, которые были созданы самим сервисом автоматически, выбираем согласиться:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_14.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"удаление анонимных пользователей\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_14.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Теперь запрос на отключение удалённого входа root пользователя, также соглашаемся:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_15.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"отключение удаленного входа\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_15.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Аналогично поступаем с удалением созданных тестовых баз данных:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_16.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"удаление тестовых таблиц\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_16.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Соглашаемся с перезагрузкой привилегий:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_17.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"перезагрузка привилегий\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_17.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Настройка завершена, MySQL немедленно учел внесенные изменения и готов к работе. \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Следующим шагом проведем настройку аутентификации для учетной записи root.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"настройка-аутентификации-для-root\"\n>Настройка аутентификации для root\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Входим в консоль MySQL:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> mysql\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Перед настройкой аутентификации проверим версию, статус и параметры нашего сервера:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>STATUS\u003Cspan class=\"hljs-comment\">;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_18.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка статуса сервера\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_18.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Так как все настройки будут проходит путем отправки SQL-запросов к базе данных, каждая команда должна оканчиваться \u003Cstrong>;\u003C/strong>\u003C/p>\n\u003C/blockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>По умолчанию в установках Ubuntu учетная запись root не настроена для подключения к службам с использованием пароля. Для того, чтобы установить доступ к службе MySQL по паролю для данной учетной записи, необходимо провести изменение плагина авторизации с auth_socket на caching_sha2_password.\u003Cbr>\nДалее нам необходимо выполнить запрос пользователей с типом их авторизации:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">SELECT\u003C/span> \u003Cspan class=\"hljs-keyword\">user\u003C/span>,authentication_string,plugin,host \u003Cspan class=\"hljs-keyword\">FROM\u003C/span> mysql.\u003Cspan class=\"hljs-keyword\">user\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_19.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"таблица пользователей mysql\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_19.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В результате запроса в списке пользователей видно, что у пользователя root в значении plugin стоит auth_socket, а значение authentication_string пусто. Проведем обновление плагина авторизации и установим пароль (в качестве примера установлен пароль ~MysqlU24, помните, что создаваемый пароль должен удовлетворять требованиям, установленным Вами в плагине проверки паролей):\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">ALTER\u003C/span> \u003Cspan class=\"hljs-keyword\">USER\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;root&#x27;\u003C/span>@\u003Cspan class=\"hljs-string\">&#x27;localhost&#x27;\u003C/span> IDENTIFIED \u003Cspan class=\"hljs-keyword\">WITH\u003C/span> caching_sha2_password \u003Cspan class=\"hljs-keyword\">BY\u003C/span> \u003Cspan class=\"hljs-string\">&#x27; ~MysqlU24&#x27;\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Применим проведенные изменения:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>FLUSH PRIVILEGES\u003Cspan class=\"hljs-comment\">;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_20.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"установка пароля пользователю root\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_20.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Не все приложения, которые работают с севером MySQL, поддерживают надежную работу с плагином безопасности \u003Cstrong>caching_sha2_password\u003C/strong>. При необходимости установите плагин \u003Cstrong>mysql_native_password\u003C/strong> для повышения надежности. Настройка аутентификации завершена, выходим с помощью exit.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Теперь для подключения к базе данных потребуется ввести: \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>mysql -u root -\u003Cspan class=\"hljs-selector-tag\">p\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>При попытке подключения с помощью команды sudo mysql будет выведена ошибка доступа.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_21.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка входа без пароля\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_21.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n \nЕсли вам требуется вернуться в методу аутентификации по умолчанию и выполнять подключение к MySQL как суперпользователь root с помощью команды sudo mysql необходимо выполнить подключение к MySQL с помощью имени пользователя и пароля. Далее возвращаем настройки аутентификации по умолчанию с помощью команды:\n```\nALTER USER 'root'@'localhost' IDENTIFIED WITH auth_socket;\n```\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_22.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"вход root с паролем\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_22.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"создание-пользователя-и-предоставление-привилегий-в-mysql\"\n>Создание пользователя и предоставление привилегий в MySQL\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После создания и настройки MySQL сервера может возникнуть необходимость в создании пользователя с набором определенных прав и привилегий. Создадим пользователя sysadmin с помощью команды:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">CREATE\u003C/span> \u003Cspan class=\"hljs-keyword\">USER\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;sysadmin&#x27;\u003C/span>@\u003Cspan class=\"hljs-string\">&#x27;localhost&#x27;\u003C/span> IDENTIFIED \u003Cspan class=\"hljs-keyword\">BY\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;~MysqlU241&#x27;\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В примере мы создаем пользователя sysadmin с паролем ~MysqlU241.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_23.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"создание пользователя\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_23.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_24.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка создания пользователя\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_24.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Предоставим права на работу с базой данных созданному пользователю:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">GRANT\u003C/span> \u003Cspan class=\"hljs-keyword\">CREATE\u003C/span>, \u003Cspan class=\"hljs-keyword\">ALTER\u003C/span>, \u003Cspan class=\"hljs-keyword\">DROP\u003C/span>, \u003Cspan class=\"hljs-keyword\">INSERT\u003C/span>, \u003Cspan class=\"hljs-keyword\">UPDATE\u003C/span>, \u003Cspan class=\"hljs-keyword\">DELETE\u003C/span>, \u003Cspan class=\"hljs-keyword\">SELECT\u003C/span>, \u003Cspan class=\"hljs-keyword\">REFERENCES\u003C/span>, RELOAD \u003Cspan class=\"hljs-keyword\">on\u003C/span> *.* \u003Cspan class=\"hljs-keyword\">TO\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;sysadmin&#x27;\u003C/span>@\u003Cspan class=\"hljs-string\">&#x27;localhost&#x27;\u003C/span> **\u003Cspan class=\"hljs-keyword\">WITH\u003C/span> \u003Cspan class=\"hljs-keyword\">GRANT\u003C/span>** \u003Cspan class=\"hljs-keyword\">OPTION\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_25.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"предоставление прав пользователю\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_25.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Обратите свое внимание, что предоставление прав пользователю выполнено с использованием параметра WITH GRANT. Это позволит вашему пользователю MySQL предоставлять любые разрешения, которые у него есть, другим пользователям в системе. \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если есть необходимость в предоставлении всех привилегий созданному пользователю, то стоит воспользоваться командой:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">GRANT\u003C/span> \u003Cspan class=\"hljs-keyword\">ALL\u003C/span> \u003Cspan class=\"hljs-keyword\">PRIVILEGES\u003C/span> \u003Cspan class=\"hljs-keyword\">ON\u003C/span> *.* \u003Cspan class=\"hljs-keyword\">TO\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;sysadmin&#x27;\u003C/span>@\u003Cspan class=\"hljs-string\">&#x27;localhost&#x27;\u003C/span> \u003Cspan class=\"hljs-keyword\">WITH\u003C/span> \u003Cspan class=\"hljs-keyword\">GRANT\u003C/span> \u003Cspan class=\"hljs-keyword\">OPTION\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Будьте внимательны при предоставлении привилегий пользователю. Параметр \u003Cstrong>ALL PRIVILEGES\u003C/strong> предоставит пользователю широкие привилегии, как у суперпользователя. Такие широкие привилегии позволят ему иметь полный контроль над каждой базой данных на сервере. Для просмотра назначенных прав и привилегий пользователю используем команду:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">SHOW\u003C/span> GRANTS FOR \u003Cspan class=\"hljs-string\">&#x27;sysadmin&#x27;\u003C/span>@\u003Cspan class=\"hljs-string\">&#x27;localhost&#x27;\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_26.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"просмотр прав и привилегий пользователя\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_26.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003C/blockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для того, чтобы изменения вступили в силу, рекомендуется выполнить команду по обновлению привилегий и прав пользователей:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>FLUSH PRIVILEGES\u003Cspan class=\"hljs-comment\">;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если возникнет необходимость отозвать предоставленные пользователю права и привилегии, воспользуйтесь командой:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">REVOKE\u003C/span> \u003Cspan class=\"hljs-keyword\">ALL\u003C/span> \u003Cspan class=\"hljs-keyword\">PRIVILEGES\u003C/span> \u003Cspan class=\"hljs-keyword\">ON\u003C/span> *.* \u003Cspan class=\"hljs-keyword\">FROM\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;sysadmin&#x27;\u003C/span>@\u003Cspan class=\"hljs-string\">&#x27;localhost&#x27;\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_27.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"удаление привилегий пользователя\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_27.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Создание и настройка пользователя на этом завершена. Можно проверить его работу и подключиться с использованием его имени и пароля.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если в процессе работы потребуется удаление созданного пользователя, то воспользуйтесь командой:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">DROP\u003C/span> \u003Cspan class=\"hljs-keyword\">USER\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;sysadmin&#x27;\u003C/span>@\u003Cspan class=\"hljs-string\">&#x27;localhost&#x27;\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_28.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"удаление созданного пользователя\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_28.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Пользователь удален, теперь не отображается в таблице пользователей MySQL.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Возможно потребуется удаление установленного сервера MySQL.\nЧтобы удаление произошло корректно и не было выполнения службы, выполним:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl stop mysql\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для того чтобы провести удаление сервера также необходимо воспользоваться репозиторием APT. При выполнении команды будет произведено удаление всех баз данных и самого сервера:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt-get remove mysql-server\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_29.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"удаление сервера mysql\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_29.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Были удалены основные пакеты MySQL, но не конфигурационные файлы, логи и каталоги.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_30.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"удаление каталогов сервера\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_30.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Удалим конфигурационные каталоги с файлами и логами:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>rm -rf \u003Cspan class=\"hljs-regexp\">/etc/\u003C/span>mysql \u003Cspan class=\"hljs-regexp\">/var/\u003C/span>lib\u003Cspan class=\"hljs-regexp\">/mysql /\u003C/span>\u003Cspan class=\"hljs-keyword\">var\u003C/span>\u003Cspan class=\"hljs-regexp\">/log/\u003C/span>mysql\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_31.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка удаления каталогов\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_31.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проведем удаление всех пакетов, установленных как зависимости MySQL:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>apt \u003Cspan class=\"hljs-built_in\">auto\u003C/span>remove\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_32.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка удаления пакетов\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_32.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если у вас были создан специальный пользователь для MySQL, нужно удалить\nи его, выполнив последовательно команды:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>deluser mysql\n\u003Cspan class=\"hljs-built_in\">rm\u003C/span> -rf /home/mysql\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проведем проверку полного удаления сервера MySQL с использованием команды проверки процесса:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_33.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка статуса службы\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_33.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если были выведены данные о неполной остановке демона MySQL, выполните:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl daemon-reload\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_34.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"остановка службы\"\n                            src=\"/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_34.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Сервер MySQL со всеми пакетами был успешно удален из системы.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"краткие-итоги\"\n>Краткие итоги\u003C/h2>\n\u003Col>\n\u003Cli>На сегодняшний день MySQL сервер является распространенной системой управления базами данных, используемой в операционных системах Linux.\u003C/li>\n\u003Cli>Для установки MySQL в ручном режиме предпочтительней пользоваться репозиторием APT.\u003C/li>\n\u003Cli>После установки сервера необходимо в обязательном порядке провести улучшение безопасности. \u003C/li>\n\u003Cli>Суперпользователю root доступно подключение к серверу как в парольном, так и беспарольном варианте.\u003C/li>\n\u003C/ol>\n","В статье рассмотрим как установить MySQL на Ubuntu Server 24.04 LTS. Настроим аутентификацию для пользователя root. Создадим пользователя и назначим ему права и привилегии для доступа к СУБД.","/topics/databases/how-to-install-mysql-on-ubuntu-server/static/ru_image_00.webp",[105,108,111,114,117,120],{"title":106,"level":41,"id":107},"Введение","введение",{"title":109,"level":41,"id":110},"Установка MySQL","установка-mysql",{"title":112,"level":41,"id":113},"Настройка MySQL","настройка-mysql",{"title":115,"level":41,"id":116},"Настройка аутентификации для root","настройка-аутентификации-для-root",{"title":118,"level":41,"id":119},"Создание пользователя и предоставление привилегий в MySQL","создание-пользователя-и-предоставление-привилегий-в-mysql",{"title":121,"level":41,"id":122},"Краткие итоги","краткие-итоги",{"slug":9,"title":124,"description":125,"tutorials":126},"Установка ПО на сервер","В разделе рассматриваем установку различного программного обеспечения на сервер.",[127,158,193,222,252,297],{"slug":128,"tags":129,"title":133,"content":134,"updatedAt":135,"markdown":136,"description":137,"cover":138,"tableOfContents":139},"osticket",[128,22,65,130,131,132,25],"apache","mariadb","php","Как установить osTicket на Ubuntu 22.04","# Как установить osTicket на Ubuntu 22.04\n\nСистема osTicket предлагает централизованную платформу, на которой запросы в службу поддержки преобразуются в тикеты (заявки), с которыми можно работать. Платформа построена на базе открытого кода. \n\n## Подготовка к установке дистрибутива\nПереходим в режим выполнения команд от суперпользователя:\n```\nsudo -s\n```\nПеред установкой обновим систему:\n```\napt update && apt upgrade -y\n```\nИзначально текстовый редактор nano и утилита wget для скачивания файлов из интернета уже присутствуют в системе, если они не установлены, то выполним команду:\n```\napt install nano wget -y\n```\nЕсли у Вас есть доменное имя, то проверьте, что имя сервера ему соответствует, в противном случае установите имя сервера (в примере osticket.test.ru):\n```\nhostnamectl set-hostname osticket.test.ru\n```\nВ нашей статье у нас сервер «из коробки», на нем не настроен DNS, поэтому мы будем показывать вариант работы с доменным именем и с IP-адресом. Мы выбрали вариант работы с IP-адресом, потому что он чуть сложнее, с доменным именем будет проще.  \nУстановим временную зону: \n```\ntimedatectl set-timezone Europe/Moscow\n```\nУстановим службу синхронизации времени:\n```\napt install chrony -y\n```\nДобавим службу в автозагрузку при запуске системы:\n```\nsystemctl enable chrony\n```\nДля корректной работы перезагрузим сервер:\n```\nreboot now\n```\nДля правильной работы нам потребуются следующие компоненты стека LAMP: Apache, MariaDB, PHP.  \nПереходим в режим выполнения команд от суперпользователя:\n```\nsudo -s\n```\nУстановим их в нужной конфигурации с помощью следующей команды:\n```\napt install apache2 mariadb-server php libapache2-mod-php php-mysql php-cgi php-fpm php-cli php-curl php-gd php-imap php-mbstring php-pear php-intl php-apcu php-common php-bcmath -y\n```\nПроверим, что порт 80 свободен, он потребуется для apache:\n```\nnetstat -ltnp | grep -w ':80'\n```\nВ моем случае он занят:\n\u003Cp align=\"center\">\u003Cimg alt=\"ошибка при запуске apache\" src=/topics/installing-the-server-software/osticket/static/ru_image_01.png width=1024>\u003C/p>\nЕсли он будет занят, то при выполнении запуска  apache2 Вы увидите ошибку:\n\u003Cp align=\"center\">\u003Cimg alt=\"ошибка при запуске apache\" src=/topics/installing-the-server-software/osticket/static/ru_image_02.png width=1024>\u003C/p>\nПроверим статус системы:\n\u003Cp align=\"center\">\u003Cimg alt=\"статус системы\" src=/topics/installing-the-server-software/osticket/static/ru_image_03.png width=1024>\u003C/p>\nВ моем случае порт 80 был занят nginx. Удалим процесс nginx, его PID 973:\n\n```\nkill 973\n```\nПроверяем результат и запускаем apache2:\n```\nsystemctl start apache2\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"запуск apache2\" src=/topics/installing-the-server-software/osticket/static/ru_image_04.png width=1024>\u003C/p>\n\nДалее запустим службу mariadb:\n\n```\nsystemctl start mariadb\n```\nТеперь необходимо добавить в автозагрузку службы Apache и MariaDB:\n```\nsystemctl enable apache2\n```\n\n```\nsystemctl enable mariadb\n```\nДля безопасности включим защиту базы данных:\n```\nmysql_secure_installation\n```\nСистема будет задавать Вам следующие вопросы, на первый вопрос необходимо нажать просто Enter, на остальные необходимо ответить символом “Y”. Также надо будет задать пароль для root.  \nПосле этого входим в оболочку MariaDB:\n```\nmysql -u root -p\n```\nРабота с базой данных аналогична работе с базой данных MySQL, про которую мы подробно писали в \u003Ca href=/databases/how-to-install-mysql-on-ubuntu-server>этой статье\u003C/a>, рекомендуем ознакомиться с ней.  \nСоздаем базу данных для osTicket:\n```\nCREATE DATABASE osticket;\n```\nОбратите внимание, что все команды при работе с базой данных заканчиваются знаком **;**  \nСоздаем пользователя **osticket** для базы данных **osticket** и указываем для него пароль **osTicket**:\n```\nCREATE USER 'osticket'@'localhost' IDENTIFIED BY 'osTicket';\n```\nДаем полные права на базу данных **osticket** нашему пользователю **osticket**:\n```\nGRANT ALL PRIVILEGES ON osticket.* TO osticket@localhost IDENTIFIED BY \"osTicket\";\n```\nОбновляем данные о привилегиях:\n```\nFLUSH PRIVILEGES;\n```\nВыходим из настройки базы данных:\n```\nEXIT;\n```\n\n## Скачивание дистрибутива osTicket\n\nПоследняя версия osTicket v1.18.2 доступна на Гитхабе:\n```\nhttps://github.com/osTicket/osTicket/releases/tag/v1.18.2\n```\nСкачаем дистрибутив:\n```\nwget https://github.com/osTicket/osTicket/archive/refs/tags/v1.18.2.tar.gz\n```\nСоздаем папку в директории для нашего сервера:\n```\nmkdir /var/www/html/osticket\n```\nВсе команды выполняются под root.\nИзвлекаем архив в созданную папку:\n```\ntar -xf v1.18.2.tar.gz  -C /var/www/html/osticket\n```\nДаем права web-серверу на созданную папку:\n```\nchown -R www-data:www-data /var/www/html/osticket\n```\n\n```\nchmod -R 755 /var/www/html/osticket\n```\nПереименовываем конфигурационный файл ost-sampleconfig.php в  ost-config.php:\n```\nmv /var/www/html/osticket/osTicket-1.18.2/include/ost-sampleconfig.php /var/www/html/osticket/osTicket-1.18.2/include/ost-config.php\n```\n\n## Создание виртуального хоста Apache\n\nСоздаём файл конфигурации osTicket для виртуального хоста Apache с помощью текстового редактора nano:\n```\nnano /etc/apache2/sites-available/osticket.conf\n```\nДобавляем следующие строки:\n```\n\u003CVirtualHost *:80>\nServerName osticket.test.ru\nServerAdmin admin@osticket.test.ru\nDocumentRoot /var/www/html/osticket/osTicket-1.18.2/include/>\n\u003CDirectory /var/www/html/osticket/osTicket-1.18.2/include/>\nRequire all granted\nOptions FollowSymlinks\nAllowOverride All\n\u003C/Directory>\nErrorLog ${APACHE_LOG_DIR}/osticket.error.log\nCustomLog ${APACHE_LOG_DIR}/osticket.access.log combined\n\u003C/VirtualHost>\n```\nОбратите внимание, что в качестве ServerName надо указать имя Вашего сервера!  \nСохраняем файл CTRL+O, выходим из файла CTRL+X.  \nАктивируем виртуальный хост osTicket:\n```\na2ensite osticket.conf\n```\nВключим модуль перезаписи Apache:\n```\na2enmod rewrite\n```\nПерезапустим Apache:\n```\nsystemctl restart apache2\n```\nПроверим состояние web-сервера:\n```\nsystemctl status apache2\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"состояние web-сервера\" src=/topics/installing-the-server-software/osticket/static/ru_image_05.png width=1024>\u003C/p>\n\nСлужба работает, переходим непосредственно к установке osTicket.\n\n## Установка и запуск  osTicket\n\nЕсли у Вас работает служба DNS, то введите в браузере:\n\n```\nhttp://osticket.test.ru\n```\nгде вместо _osticket.test.ru_ введите имя Вашего сервера.\n\nЛибо введите:\n```\nhttp://192.168.1.59/osticket/osTicket-1.18.2/setup/install.php\n```\nгде вместо _192.168.1.59_ укажите IP-адрес Вашего сервера.\nВы увидите следующее приглашение на установку:\n\u003Cp align=\"center\">\u003Cimg alt=\"приглашение на установку\" src=/topics/installing-the-server-software/osticket/static/ru_image_06.png width=1024>\u003C/p>\n\nНажимаем кнопку **Continue**.  \nЗаполняем данные администратора osTicket, указываем две электронные почты, которые не должны совпадать. Затем вводим параметры доступа к базе данных.\n\u003Cp align=\"center\">\u003Cimg alt=\"данные администратора osTicket\" src=/topics/installing-the-server-software/osticket/static/ru_image_07.png width=1024>\u003C/p>\n\u003Cp align=\"center\">\u003Cimg alt=\"данные администратора osTicket\" src=/topics/installing-the-server-software/osticket/static/ru_image_08.png width=1024>\u003C/p>\n\u003Cp align=\"center\">\u003Cimg alt=\"данные администратора osTicket\" src=/topics/installing-the-server-software/osticket/static/ru_image_09.png width=1024>\u003C/p>\nПосле этого производим саму установку.\n\n\u003Cp align=\"center\">\u003Cimg alt=\"установка\" src=/topics/installing-the-server-software/osticket/static/ru_image_10.png width=1024>\u003C/p>\nПосле установки увидим уведомление, что все прошло успешно. \n\u003Cp align=\"center\">\u003Cimg alt=\"уведомление\" src=/topics/installing-the-server-software/osticket/static/ru_image_11.png width=1024>\u003C/p>\n\nТеперь необходимо изменить разрешения на доступ к файлу **ost-config.php**:\n```\nchmod 0644 /var/www/html/osticket/osTicket-1.18.2/include/ost-config.php\n```\nТак же указано, как попасть в панель управления osTicket:\n```\nhttp://192.168.1.59/osticket/osTicket-1.18.2/scp\n```\nПереходим по указанному адресу и вводим данные администратора.\n\u003Cp align=\"center\">\u003Cimg alt=\"вводим данные администратора\" src=/topics/installing-the-server-software/osticket/static/ru_image_12.png width=1024>\u003C/p>\nВидим первый тикет, показывающий, что osTicket установлен. \n\u003Cp align=\"center\">\u003Cimg alt=\"вводим данные администратора\" src=/topics/installing-the-server-software/osticket/static/ru_image_13.png width=1024>\u003C/p>\n\nВсе данные представлены на английском языке. Выполним русификацию.\n\n## Русификация osTicket\n\nВсе действия выполняем через \n```\nsudo -s\n```\nПереходим в домашний каталог:\n```\ncd\n```\nСоздадим каталог для загрузки языкового пакета:\n```\nmkdir ru_language\n```\nПереходим в каталог:\n```\ncd ru_language\n```\nСкачиваем языковой пакет:\n```\nwget https://s3.amazonaws.com/downloads.osticket.com/lang/1.14.x/ru.phar\n```\nСоздаем php файл:\n```\nnano extract.php\n```\nВставляем блок кода:\n```\n\u003C?php\ntry {\n$phar = new Phar('ru.phar');\n$phar->extractTo('./',null,true); // extract all files\n} catch (Exception $e) {\necho \"there was an error\u003Cbr>\";\nprint_r($e);\n}\n?>\n```\nСохраняем файл (**CTRL+O**) и выходим из файла (**CTRL+X**):\nЗапускаем скрипт и распаковываем файлы:\n```\nphp extract.php\n```\nСоздаём папку для языкового пакета:\n```\nmkdir -p /var/www/html/osticket/osTicket-1.18.2/include/ i18n/ru_RU\n```\nСинхронизируем распакованные файлы с созданной папкой, за исключением _extract.php_ и _ru.phar_\n```\nrsync -r --exclude=ru.phar --exclude=extract.php /root/ru_language/ /var/www/html/osticket/osTicket-1.18.2/include/i18n/ru_RU/\n```\nОбратите внимание, если Вы сделали директорию не под root, то команда будет выглядеть примерно вот так:\n```\nrsync -r --exclude=ru.phar --exclude=extract.php /home/jetcry/ru_language /var/www/html/osticket/osTicket-1.18.2/include/i18n/ru_RU/\n```\nДалее изменим разрешения на директорию с движком для web-сервера:\n```\nchown -R www-data:www-data /var/www/html/osticket/\n```\nМеняем разрешения на папку с движком osTicket:\n```\nchmod -R 755 /var/www/html/osticket/\n```\nМеняем разрешения на конфигурационный файл osTicket:\n```\nchmod 644 /var/www/html/osticket/osTicket-1.18.2/include/ost-config.php\n```\nПерезапускаем web-сервер:\n```\nsystemctl restart apache2\n```\n\nПереходим в _Admin Panel_ в браузере.\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Admin Panel\" src=/topics/installing-the-server-software/osticket/static/ru_image_14.png width=1024>\u003C/p>\nВыбираем _Primary_ _Language_ «русский». Сохраняем изменения.\n\u003Cp align=\"center\">\u003Cimg alt=\"Primary_ _Language\" src=/topics/installing-the-server-software/osticket/static/ru_image_15.png width=1024>\u003C/p>\nВидим, что изменения применились. \n\u003Cp align=\"center\">\u003Cimg alt=\"английский язык\" src=/topics/installing-the-server-software/osticket/static/ru_image_16.png width=1024>\u003C/p>\nПерезагружаем страницу.\n\u003Cp align=\"center\">\u003Cimg alt=\"русский язык\" src=/topics/installing-the-server-software/osticket/static/ru_image_17.png width=1024>\u003C/p>\n\nСистема osTicket русифицирована.  \nНа этом моменте osTicket предложил для обеспечения безопасности удалить папку **setup**  с сервера. Выполним это действие командой:\n```\nrm -r /var/www/html/osticket/osTicket-1.18.2/setup\n```\nДалее переходим в панель персонала и можно приступать непосредственно к работе в osTicket.  \nНа этом установка и русификация osTicket завершены. \n\n## Немного о безопасности\nВы можете дополнительно использовать SSL сертификаты для обеспечения безопасности подключения. В этом случае рекомендуем Вам воспользоваться бесплатными SSL сертификатами Let's Encrypt, для регистрации и получения которых в центре сертификации нужно установить пакет certbot и плагин под Apache:\n```\napt install certbot python3-certbot-apache -y\n```\nЗапрос на получение сертификата:\n ```\ncertbot --apache\n```\nВводим необходимые данные и перезапускаем сервер:\n```\nsystemctl restart apache2\n```\nДобавьте автоматическое обновление сертификатов:\n```\nsystemctl enable certbot.timer\n```\n\nЕсли Вы по каким-то причинам не хотите использовать сертификаты, то можно создать SSH-туннель для подключения к osTicket.  \nВ этом случае не потребуется использование доменного имени и сертификата.  \nКоманда на клиентском хосте:\n```\nssh -L 80:localhost:80 jetcry@192.168.1.59\n```\nПосле этого подключение выполняйте на IP-адрес 127.0.0.1:\n```\nhttp://127.0.0.1/osticket/osTicket-1.18.2/scp/login.php\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"русский язык\" src=/topics/installing-the-server-software/osticket/static/ru_image_18.png width=1024>\u003C/p>\n\nНа этом установка osTicket завершена. Можно приступать к работе с платформой.\n",["Date","2025-08-02T11:12:48.326Z"],"\n\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Система osTicket предлагает централизованную платформу, на которой запросы в службу поддержки преобразуются в тикеты (заявки), с которыми можно работать. Платформа построена на базе открытого кода. \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"подготовка-к-установке-дистрибутива\"\n>Подготовка к установке дистрибутива\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Переходим в режим выполнения команд от суперпользователя:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> -s\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перед установкой обновим систему:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>apt \u003Cspan class=\"hljs-keyword\">update\u003C/span> \u003Cspan class=\"hljs-variable\">&amp;&amp;\u003C/span> apt upgrade -y\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Изначально текстовый редактор nano и утилита wget для скачивания файлов из интернета уже присутствуют в системе, если они не установлены, то выполним команду:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>apt \u003Cspan class=\"hljs-keyword\">install\u003C/span> nano wget -y\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если у Вас есть доменное имя, то проверьте, что имя сервера ему соответствует, в противном случае установите имя сервера (в примере osticket.test.ru):\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-string\">hostnamectl\u003C/span> \u003Cspan class=\"hljs-built_in\">set-hostname\u003C/span> \u003Cspan class=\"hljs-string\">osticket\u003C/span>.\u003Cspan class=\"hljs-string\">test\u003C/span>.\u003Cspan class=\"hljs-string\">ru\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В нашей статье у нас сервер «из коробки», на нем не настроен DNS, поэтому мы будем показывать вариант работы с доменным именем и с IP-адресом. Мы выбрали вариант работы с IP-адресом, потому что он чуть сложнее, с доменным именем будет проще.\u003Cbr>\nУстановим временную зону: \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-string\">timedatectl\u003C/span> \u003Cspan class=\"hljs-built_in\">set-timezone\u003C/span> \u003Cspan class=\"hljs-string\">Europe\u003C/span>/\u003Cspan class=\"hljs-string\">Moscow\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Установим службу синхронизации времени:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>apt \u003Cspan class=\"hljs-keyword\">install\u003C/span> chrony -y\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Добавим службу в автозагрузку при запуске системы:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>systemctl \u003Cspan class=\"hljs-built_in\">enable\u003C/span> chrony\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Для корректной работы перезагрузим сервер:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>reboot \u003Cspan class=\"hljs-built_in\">now\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для правильной работы нам потребуются следующие компоненты стека LAMP: Apache, MariaDB, PHP.\u003Cbr>\nПереходим в режим выполнения команд от суперпользователя:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> -s\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Установим их в нужной конфигурации с помощью следующей команды:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>apt install apache2 mariadb-\u003Cspan class=\"hljs-keyword\">server\u003C/span> php libapache2-\u003Cspan class=\"hljs-keyword\">mod\u003C/span>-php php-mysql php-cgi php-fpm php-cli php-curl php-gd php-imap php-mbstring php-pear php-intl php-apcu php-\u003Cspan class=\"hljs-keyword\">common\u003C/span> php-bcmath -y\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проверим, что порт 80 свободен, он потребуется для apache:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>netstat -ltnp | \u003Cspan class=\"hljs-keyword\">grep\u003C/span> -w \u003Cspan class=\"hljs-string\">&#x27;:80&#x27;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">В моем случае он занят:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_01.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"ошибка при запуске apache\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_01.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nЕсли он будет занят, то при выполнении запуска  apache2 Вы увидите ошибку:\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_02.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"ошибка при запуске apache\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_02.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nПроверим статус системы:\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_03.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"статус системы\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_03.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nВ моем случае порт 80 был занят nginx. Удалим процесс nginx, его PID 973:\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">kill\u003C/span> \u003Cspan class=\"hljs-number\">973\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверяем результат и запускаем apache2:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>systemctl \u003Cspan class=\"hljs-literal\">start\u003C/span> apache2\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_04.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"запуск apache2\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_04.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Далее запустим службу mariadb:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>systemctl \u003Cspan class=\"hljs-literal\">start\u003C/span> mariadb\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Теперь необходимо добавить в автозагрузку службы Apache и MariaDB:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>systemctl \u003Cspan class=\"hljs-built_in\">enable\u003C/span> apache2\u003C/code>\u003C/pre>\n\u003Cpre class=\"hljs\">\u003Ccode>systemctl \u003Cspan class=\"hljs-built_in\">enable\u003C/span> mariadb\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Для безопасности включим защиту базы данных:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">mysql_secure_installation\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Система будет задавать Вам следующие вопросы, на первый вопрос необходимо нажать просто Enter, на остальные необходимо ответить символом “Y”. Также надо будет задать пароль для root.\u003Cbr>\nПосле этого входим в оболочку MariaDB:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>mysql -u root -\u003Cspan class=\"hljs-selector-tag\">p\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Работа с базой данных аналогична работе с базой данных MySQL, про которую мы подробно писали в \u003Ca href=https://github.com/HostVDS-com/tutorials/blob/main/topics/databases/how-to-install-mysql-on-ubuntu-server/ru.md>этой статье\u003C/a>, рекомендуем ознакомиться с ней.\u003Cbr>\nСоздаем базу данных для osTicket:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">CREATE\u003C/span> \u003Cspan class=\"hljs-keyword\">DATABASE\u003C/span> osticket;\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Обратите внимание, что все команды при работе с базой данных заканчиваются знаком \u003Cstrong>;\u003C/strong>\u003Cbr>\nСоздаем пользователя \u003Cstrong>osticket\u003C/strong> для базы данных \u003Cstrong>osticket\u003C/strong> и указываем для него пароль \u003Cstrong>osTicket\u003C/strong>:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">CREATE\u003C/span> \u003Cspan class=\"hljs-keyword\">USER\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;osticket&#x27;\u003C/span>@\u003Cspan class=\"hljs-string\">&#x27;localhost&#x27;\u003C/span> IDENTIFIED \u003Cspan class=\"hljs-keyword\">BY\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;osTicket&#x27;\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Даем полные права на базу данных \u003Cstrong>osticket\u003C/strong> нашему пользователю \u003Cstrong>osticket\u003C/strong>:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">GRANT\u003C/span> \u003Cspan class=\"hljs-keyword\">ALL\u003C/span> \u003Cspan class=\"hljs-keyword\">PRIVILEGES\u003C/span> \u003Cspan class=\"hljs-keyword\">ON\u003C/span> osticket.* \u003Cspan class=\"hljs-keyword\">TO\u003C/span> osticket@localhost IDENTIFIED \u003Cspan class=\"hljs-keyword\">BY\u003C/span> &quot;osTicket&quot;;\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Обновляем данные о привилегиях:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>FLUSH PRIVILEGES\u003Cspan class=\"hljs-comment\">;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Выходим из настройки базы данных:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>EXIT\u003Cspan class=\"hljs-comment\">;\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"скачивание-дистрибутива-osticket\"\n>Скачивание дистрибутива osTicket\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Последняя версия osTicket v1.18.2 доступна на Гитхабе:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>https:\u003Cspan class=\"hljs-regexp\">//gi\u003C/span>thub.com\u003Cspan class=\"hljs-regexp\">/osTicket/\u003C/span>osTicket\u003Cspan class=\"hljs-regexp\">/releases/\u003C/span>tag/v1.\u003Cspan class=\"hljs-number\">18.2\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Скачаем дистрибутив:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>wget https:\u003Cspan class=\"hljs-regexp\">//gi\u003C/span>thub.com\u003Cspan class=\"hljs-regexp\">/osTicket/\u003C/span>osTicket\u003Cspan class=\"hljs-regexp\">/archive/\u003C/span>refs\u003Cspan class=\"hljs-regexp\">/tags/\u003C/span>v1.\u003Cspan class=\"hljs-number\">18.2\u003C/span>.tar.gz\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создаем папку в директории для нашего сервера:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>mkdir \u003Cspan class=\"hljs-regexp\">/var/\u003C/span>www\u003Cspan class=\"hljs-regexp\">/html/\u003C/span>osticket\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Все команды выполняются под root.\nИзвлекаем архив в созданную папку:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">tar\u003C/span> -xf v1.\u003Cspan class=\"hljs-number\">18\u003C/span>.\u003Cspan class=\"hljs-number\">2\u003C/span>.tar.gz  -C /var/www/html/osticket\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Даем права web-серверу на созданную папку:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-title\">chown\u003C/span> -\u003Cspan class=\"hljs-type\">R\u003C/span> www-\u003Cspan class=\"hljs-class\">\u003Cspan class=\"hljs-keyword\">data\u003C/span>:www-\u003Cspan class=\"hljs-keyword\">data\u003C/span> /var/www/html/osticket\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"hljs\">\u003Ccode>chmod -\u003Cspan class=\"hljs-attribute\">R\u003C/span> \u003Cspan class=\"hljs-number\">755\u003C/span> /\u003Cspan class=\"hljs-selector-tag\">var\u003C/span>/www/\u003Cspan class=\"hljs-selector-tag\">html\u003C/span>/osticket\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Переименовываем конфигурационный файл ost-sampleconfig.php в  ost-config.php:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>mv \u003Cspan class=\"hljs-regexp\">/var/\u003C/span>www\u003Cspan class=\"hljs-regexp\">/html/\u003C/span>osticket\u003Cspan class=\"hljs-regexp\">/osTicket-1.18.2/\u003C/span>include\u003Cspan class=\"hljs-regexp\">/ost-sampleconfig.php /\u003C/span>\u003Cspan class=\"hljs-keyword\">var\u003C/span>\u003Cspan class=\"hljs-regexp\">/www/\u003C/span>html\u003Cspan class=\"hljs-regexp\">/osticket/\u003C/span>osTicket\u003Cspan class=\"hljs-number\">-1.18\u003C/span>\u003Cspan class=\"hljs-number\">.2\u003C/span>\u003Cspan class=\"hljs-regexp\">/include/\u003C/span>ost-config.php\u003C/code>\u003C/pre>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"создание-виртуального-хоста-apache\"\n>Создание виртуального хоста Apache\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Создаём файл конфигурации osTicket для виртуального хоста Apache с помощью текстового редактора nano:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>nano \u003Cspan class=\"hljs-regexp\">/etc/\u003C/span>apache2\u003Cspan class=\"hljs-regexp\">/sites-available/\u003C/span>osticket.conf\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Добавляем следующие строки:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-section\">&lt;VirtualHost *\u003Cspan class=\"hljs-number\">:80\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-attribute\">ServerName\u003C/span> osticket.test.ru\n\u003Cspan class=\"hljs-attribute\">ServerAdmin\u003C/span> admin@osticket.test.ru\n\u003Cspan class=\"hljs-attribute\">DocumentRoot\u003C/span> /var/www/html/osticket/osTicket-\u003Cspan class=\"hljs-number\">1\u003C/span>.\u003Cspan class=\"hljs-number\">18\u003C/span>.\u003Cspan class=\"hljs-number\">2\u003C/span>/include/&gt;\n\u003Cspan class=\"hljs-section\">&lt;Directory /var/www/html/osticket/osTicket-1.18.2/include/&gt;\u003C/span>\n\u003Cspan class=\"hljs-attribute\">Require\u003C/span> \u003Cspan class=\"hljs-literal\">all\u003C/span> granted\n\u003Cspan class=\"hljs-attribute\">Options\u003C/span> FollowSymlinks\n\u003Cspan class=\"hljs-attribute\">AllowOverride\u003C/span> \u003Cspan class=\"hljs-literal\">All\u003C/span>\n\u003Cspan class=\"hljs-section\">&lt;/Directory&gt;\u003C/span>\n\u003Cspan class=\"hljs-attribute\">ErrorLog\u003C/span> \u003Cspan class=\"hljs-variable\">${APACHE_LOG_DIR}\u003C/span>/osticket.error.log\n\u003Cspan class=\"hljs-attribute\">CustomLog\u003C/span> \u003Cspan class=\"hljs-variable\">${APACHE_LOG_DIR}\u003C/span>/osticket.access.log combined\n\u003Cspan class=\"hljs-section\">&lt;/VirtualHost&gt;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Обратите внимание, что в качестве ServerName надо указать имя Вашего сервера!\u003Cbr>\nСохраняем файл CTRL+O, выходим из файла CTRL+X.\u003Cbr>\nАктивируем виртуальный хост osTicket:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">a2ensite\u003C/span> osticket.conf\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Включим модуль перезаписи Apache:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>a2enmod \u003Cspan class=\"hljs-built_in\">rewrite\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перезапустим Apache:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>systemctl \u003Cspan class=\"hljs-built_in\">restart\u003C/span> apache2\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверим состояние web-сервера:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>systemctl \u003Cspan class=\"hljs-keyword\">status\u003C/span> apache2\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_05.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"состояние web-сервера\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_05.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Служба работает, переходим непосредственно к установке osTicket.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"установка-и-запуск--osticket\"\n>Установка и запуск  osTicket\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если у Вас работает служба DNS, то введите в браузере:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-symbol\">http:\u003C/span>\u003Cspan class=\"hljs-comment\">//osticket.test.ru\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">где вместо \u003Cem>osticket.test.ru\u003C/em> введите имя Вашего сервера.\u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Либо введите:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">http\u003C/span>://\u003Cspan class=\"hljs-number\">192.168.1.59\u003C/span>/osticket/osTicket-\u003Cspan class=\"hljs-number\">1\u003C/span>.\u003Cspan class=\"hljs-number\">18\u003C/span>.\u003Cspan class=\"hljs-number\">2\u003C/span>/setup/install.php\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">где вместо \u003Cem>192.168.1.59\u003C/em> укажите IP-адрес Вашего сервера.\nВы увидите следующее приглашение на установку:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_06.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"приглашение на установку\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_06.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Нажимаем кнопку \u003Cstrong>Continue\u003C/strong>.\u003Cbr>\nЗаполняем данные администратора osTicket, указываем две электронные почты, которые не должны совпадать. Затем вводим параметры доступа к базе данных.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_07.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"данные администратора osTicket\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_07.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_08.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"данные администратора osTicket\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_08.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_09.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"данные администратора osTicket\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_09.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nПосле этого производим саму установку.\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_10.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"установка\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_10.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nПосле установки увидим уведомление, что все прошло успешно. \n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_11.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"уведомление\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_11.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Теперь необходимо изменить разрешения на доступ к файлу \u003Cstrong>ost-config.php\u003C/strong>:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">chmod\u003C/span> \u003Cspan class=\"hljs-number\">0644\u003C/span> /var/www/html/osticket/osTicket-\u003Cspan class=\"hljs-number\">1\u003C/span>.\u003Cspan class=\"hljs-number\">18\u003C/span>.\u003Cspan class=\"hljs-number\">2\u003C/span>/include/ost-config.php\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Так же указано, как попасть в панель управления osTicket:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">http\u003C/span>://\u003Cspan class=\"hljs-number\">192.168.1.59\u003C/span>/osticket/osTicket-\u003Cspan class=\"hljs-number\">1\u003C/span>.\u003Cspan class=\"hljs-number\">18\u003C/span>.\u003Cspan class=\"hljs-number\">2\u003C/span>/scp\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Переходим по указанному адресу и вводим данные администратора.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_12.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"вводим данные администратора\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_12.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nВидим первый тикет, показывающий, что osTicket установлен. \n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_13.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"вводим данные администратора\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_13.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Все данные представлены на английском языке. Выполним русификацию.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"русификация-osticket\"\n>Русификация osTicket\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Все действия выполняем через \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> -s\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Переходим в домашний каталог:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">cd\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создадим каталог для загрузки языкового пакета:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>mkdir ru_language\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Переходим в каталог:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">cd\u003C/span> ru_language\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Скачиваем языковой пакет:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>wget https:\u003Cspan class=\"hljs-regexp\">//\u003C/span>s3.amazonaws.com\u003Cspan class=\"hljs-regexp\">/downloads.osticket.com/\u003C/span>lang\u003Cspan class=\"hljs-regexp\">/1.14.x/\u003C/span>ru.phar\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создаем php файл:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">nano\u003C/span> extract.php\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Вставляем блок кода:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-meta\">&lt;?php\u003C/span>\n\u003Cspan class=\"hljs-keyword\">try\u003C/span> {\n\u003Cspan class=\"hljs-variable\">$phar\u003C/span> = \u003Cspan class=\"hljs-keyword\">new\u003C/span> \u003Cspan class=\"hljs-title class_\">Phar\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;ru.phar&#x27;\u003C/span>);\n\u003Cspan class=\"hljs-variable\">$phar\u003C/span>-&gt;\u003Cspan class=\"hljs-title function_ invoke__\">extractTo\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;./&#x27;\u003C/span>,\u003Cspan class=\"hljs-literal\">null\u003C/span>,\u003Cspan class=\"hljs-literal\">true\u003C/span>); \u003Cspan class=\"hljs-comment\">// extract all files\u003C/span>\n} \u003Cspan class=\"hljs-keyword\">catch\u003C/span> (\u003Cspan class=\"hljs-built_in\">Exception\u003C/span> \u003Cspan class=\"hljs-variable\">$e\u003C/span>) {\n\u003Cspan class=\"hljs-keyword\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;there was an error&lt;br&gt;&quot;\u003C/span>;\n\u003Cspan class=\"hljs-title function_ invoke__\">print_r\u003C/span>(\u003Cspan class=\"hljs-variable\">$e\u003C/span>);\n}\n\u003Cspan class=\"hljs-meta\">?&gt;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Сохраняем файл (\u003Cstrong>CTRL+O\u003C/strong>) и выходим из файла (\u003Cstrong>CTRL+X\u003C/strong>):\nЗапускаем скрипт и распаковываем файлы:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">php\u003C/span> extract.php\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создаём папку для языкового пакета:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>mkdir -p \u003Cspan class=\"hljs-regexp\">/var/\u003C/span>www\u003Cspan class=\"hljs-regexp\">/html/\u003C/span>osticket\u003Cspan class=\"hljs-regexp\">/osTicket-1.18.2/i\u003C/span>nclude\u003Cspan class=\"hljs-regexp\">/ i18n/\u003C/span>ru_RU\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Синхронизируем распакованные файлы с созданной папкой, за исключением \u003Cem>extract.php\u003C/em> и \u003Cem>ru.phar\u003C/em>\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>rsync -r --\u003Cspan class=\"hljs-keyword\">exclude\u003C/span>=ru.phar --\u003Cspan class=\"hljs-keyword\">exclude\u003C/span>=extract.php \u003Cspan class=\"hljs-regexp\">/root/\u003C/span>ru_language\u003Cspan class=\"hljs-regexp\">/ /\u003C/span>var\u003Cspan class=\"hljs-regexp\">/www/\u003C/span>html\u003Cspan class=\"hljs-regexp\">/osticket/\u003C/span>osTicket-\u003Cspan class=\"hljs-number\">1.18\u003C/span>.\u003Cspan class=\"hljs-number\">2\u003C/span>\u003Cspan class=\"hljs-regexp\">/include/i\u003C/span>18n\u003Cspan class=\"hljs-regexp\">/ru_RU/\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Обратите внимание, если Вы сделали директорию не под root, то команда будет выглядеть примерно вот так:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>rsync -r --\u003Cspan class=\"hljs-keyword\">exclude\u003C/span>=ru.phar --\u003Cspan class=\"hljs-keyword\">exclude\u003C/span>=extract.php \u003Cspan class=\"hljs-regexp\">/home/\u003C/span>jetcry\u003Cspan class=\"hljs-regexp\">/ru_language /\u003C/span>var\u003Cspan class=\"hljs-regexp\">/www/\u003C/span>html\u003Cspan class=\"hljs-regexp\">/osticket/\u003C/span>osTicket-\u003Cspan class=\"hljs-number\">1.18\u003C/span>.\u003Cspan class=\"hljs-number\">2\u003C/span>\u003Cspan class=\"hljs-regexp\">/include/i\u003C/span>18n\u003Cspan class=\"hljs-regexp\">/ru_RU/\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Далее изменим разрешения на директорию с движком для web-сервера:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-title\">chown\u003C/span> -\u003Cspan class=\"hljs-type\">R\u003C/span> www-\u003Cspan class=\"hljs-class\">\u003Cspan class=\"hljs-keyword\">data\u003C/span>:www-\u003Cspan class=\"hljs-keyword\">data\u003C/span> /var/www/html/osticket/\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Меняем разрешения на папку с движком osTicket:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>chmod -\u003Cspan class=\"hljs-attribute\">R\u003C/span> \u003Cspan class=\"hljs-number\">755\u003C/span> /\u003Cspan class=\"hljs-selector-tag\">var\u003C/span>/www/\u003Cspan class=\"hljs-selector-tag\">html\u003C/span>/osticket/\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Меняем разрешения на конфигурационный файл osTicket:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">chmod\u003C/span> \u003Cspan class=\"hljs-number\">644\u003C/span> /var/www/html/osticket/osTicket-\u003Cspan class=\"hljs-number\">1\u003C/span>.\u003Cspan class=\"hljs-number\">18\u003C/span>.\u003Cspan class=\"hljs-number\">2\u003C/span>/include/ost-config.php\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перезапускаем web-сервер:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>systemctl \u003Cspan class=\"hljs-built_in\">restart\u003C/span> apache2\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Переходим в \u003Cem>Admin Panel\u003C/em> в браузере.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_14.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Admin Panel\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_14.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nВыбираем _Primary_ _Language_ «русский». Сохраняем изменения.\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_15.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Primary_ _Language\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_15.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nВидим, что изменения применились. \n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_16.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"английский язык\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_16.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nПерезагружаем страницу.\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_17.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"русский язык\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_17.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Система osTicket русифицирована.\u003Cbr>\nНа этом моменте osTicket предложил для обеспечения безопасности удалить папку \u003Cstrong>setup\u003C/strong>  с сервера. Выполним это действие командой:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">rm\u003C/span> -r /var/www/html/osticket/osTicket-\u003Cspan class=\"hljs-number\">1\u003C/span>.\u003Cspan class=\"hljs-number\">18\u003C/span>.\u003Cspan class=\"hljs-number\">2\u003C/span>/setup\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Далее переходим в панель персонала и можно приступать непосредственно к работе в osTicket.\u003Cbr>\nНа этом установка и русификация osTicket завершены. \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"немного-о-безопасности\"\n>Немного о безопасности\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Вы можете дополнительно использовать SSL сертификаты для обеспечения безопасности подключения. В этом случае рекомендуем Вам воспользоваться бесплатными SSL сертификатами Let’s Encrypt, для регистрации и получения которых в центре сертификации нужно установить пакет certbot и плагин под Apache:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>apt \u003Cspan class=\"hljs-keyword\">install\u003C/span> certbot python3-certbot-apache -y\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Запрос на получение сертификата:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>certbot \u003Cspan class=\"hljs-comment\">--apache\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Вводим необходимые данные и перезапускаем сервер:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>systemctl \u003Cspan class=\"hljs-built_in\">restart\u003C/span> apache2\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Добавьте автоматическое обновление сертификатов:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>systemctl \u003Cspan class=\"hljs-built_in\">enable\u003C/span> certbot.timer\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если Вы по каким-то причинам не хотите использовать сертификаты, то можно создать SSH-туннель для подключения к osTicket.\u003Cbr>\nВ этом случае не потребуется использование доменного имени и сертификата.\u003Cbr>\nКоманда на клиентском хосте:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">ssh\u003C/span> -L \u003Cspan class=\"hljs-number\">80\u003C/span>:localhost:\u003Cspan class=\"hljs-number\">80\u003C/span> jetcry@\u003Cspan class=\"hljs-number\">192.168.1.59\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После этого подключение выполняйте на IP-адрес 127.0.0.1:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">http\u003C/span>://\u003Cspan class=\"hljs-number\">127.0.0.1\u003C/span>/osticket/osTicket-\u003Cspan class=\"hljs-number\">1\u003C/span>.\u003Cspan class=\"hljs-number\">18\u003C/span>.\u003Cspan class=\"hljs-number\">2\u003C/span>/scp/login.php\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/osticket/static/ru_image_18.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"русский язык\"\n                            src=\"/topics/installing-the-server-software/osticket/static/ru_image_18.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>На этом установка osTicket завершена. Можно приступать к работе с платформой.\u003C/p>\n","В статье рассмотрим установку osTicket на Ubuntu 24.04. Создадим виртуальный хост Apache. Выполним первоначальную настройку и русификацию osTicket.","/topics/installing-the-server-software/osticket/static/ru_image_00.webp",[140,143,146,149,152,155],{"title":141,"level":41,"id":142},"Подготовка к установке дистрибутива","подготовка-к-установке-дистрибутива",{"title":144,"level":41,"id":145},"Скачивание дистрибутива osTicket","скачивание-дистрибутива-osticket",{"title":147,"level":41,"id":148},"Создание виртуального хоста Apache","создание-виртуального-хоста-apache",{"title":150,"level":41,"id":151},"Установка и запуск  osTicket","установка-и-запуск--osticket",{"title":153,"level":41,"id":154},"Русификация osTicket","русификация-osticket",{"title":156,"level":41,"id":157},"Немного о безопасности","немного-о-безопасности",{"slug":159,"tags":160,"title":166,"content":167,"updatedAt":168,"markdown":169,"description":170,"cover":171,"tableOfContents":172},"how-to-install-vnc-server",[161,22,65,162,163,164,165],"vnc","gnome","xfce","ufw","tigervnc","Настройка удаленного рабочего стола через VNC на Ubuntu 24.04","# Настройка удаленного рабочего стола через VNC на Ubuntu 24.04 \n\n## Введение\nVNC (Virtual Network Computing) в Ubuntu – это графическая система совместного использования рабочего стола, которая использует протокол Remote Frame Buffer для удаленного управления другим компьютером. Она функционирует по модели клиент-сервер, передает события клавиатуры и мыши с одного компьютера на другой, одновременно ретранслируя графические обновления экрана в обратном направлении по сетевому соединению. С помощью VNC можно администрировать и отлаживать системы без физического присутствия. \n\n## Подготовка системы\n\n> Вам потребуются привилегии sudo для установки пакетов и настройки параметров системы.\n\nПеред установкой проведем обновление системы, чтобы убедиться, что установлены последние версии пакетов и исправлений безопасности:\n```\nsudo apt-get update && sudo apt-get upgrade\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"обновление пакетов\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_01.png width=1024>\u003C/p>\n\nЕсли Вы используете Ubuntu Server без графического интерфейса, Вам потребуется установить среду рабочего стола. Ubuntu 24.04 предлагает несколько вариантов:  \n• GNOME: среда рабочего стола Ubuntu по умолчанию, многофункциональная, но ресурсоемкая.  \n• XFCE: облегченная среда рабочего стола, идеально подходящая для сценариев удаленного доступа.  \n• KDE Plasma: настраиваемое окружение рабочего стола с современными функциями и красивым дизайном.  \n• MATE: легкая традиционная компоновка окружения рабочего стола.  \n• LXQt: очень легкая и быстрая среда рабочего стола для старых систем.  \nДля установки VNC-сервера мы будем использовать систему XFCE, как самую легковесную и быструю. Установим её:\n```\nsudo apt install xfce4 xfce4-goodies\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"установка рабочего стола\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_02.png width=1024>\u003C/p>\n\nЕсли Вы предпочитаете GNOME (рабочий стол Ubuntu по умолчанию), то его можно установить с помощью команды::\n\n```\nsudo apt install ubuntu-gnome-desktop\n```\n\n\n## Установка VNC сервера\n\nПосле успешной подготовки системы, установим VNC-сервер. Для Ubuntu 24.04 доступно несколько реализаций VNC-серверов:  \n• TigerVNC: высокопроизводительный, надежный VNC-сервер с активным сообществом разработчиков.  \n• x11vnc: пакет присутствует в стандартных репозиториях большинства дистрибутивов Linux. Полезен для совместного использования существующих сеансов рабочего стола.  \n• TightVNC: эффективный VNC-сервер, ориентированный на оптимизацию пропускной способности.  \n• RealVNC Server:  коммерческое решение для удалённого доступа к серверу для различных дистрибутивов Linux.  \nВ данной статье мы будем использоавть TigerVNC, который предлагает оптимальный баланс функционала и производительности.  \n\nУстановим сервер TigerVNC:\n```\nsudo apt install tigervnc-standalone-server tigervnc-common\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"установка сервера\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_03.png width=1024>\u003C/p>\n\nУбедимся, что TigerVNC был установлен правильно, проверив его версию:\n```\nvncserver --version\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка версии\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_04.png width=1024>\u003C/p>\n\n## Настройка VNC сервера\n\nУстановим пароль для доступа к VNC:\n```\nvncpasswd\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"установка пароля\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_05.png width=1024>\u003C/p>\n\nНам предложено ввести и подтвердить пароль. Этот пароль потребуется при подключении к VNC-серверу. В целях безопасности обязательно задавайте надежный пароль.  \n\nПри необходимости Вы можете установить пароль для режима view-only. Режим «только просмотр» разрешает пользователю видеть удаленный рабочий стол, но запрещает ему изменять какие-либо данные на нем.  \n\nЗапустим VNC-сервер один раз для генерации исходных конфигурационных файлов:\n```\nvncserver\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"запуск сервера\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_06.png width=1024>\u003C/p>\n\nПри этом в домашней папке будет создан каталог .vnc и он будет заполнен файлами конфигурации по умолчанию.  \nОстановим сервер для изменения этих файлов:\n```\nvncserver -kill :1\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"остановка сервера\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_07.png width=1024>\u003C/p>\n\nФайл xstartup определяет, какая среда рабочего стола запускается при подключении к VNC.  \nОтредактируем этот файл:\n```\nnano ~/.vnc/xstartup\n```\nДля XFCE заменим содержимое на:\n```\n#!/bin/bash\nxrdb $HOME/.Xresources\nstartxfce4 &\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"редактирование файла\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_08.png width=1024>\u003C/p>\n\nДля среды рабочего стола GNOME:\n```\n#!/bin/bash\nxrdb $HOME/.Xresources\nexport XKL_XMODMAP_DISABLE=1\n/etc/X11/Xsession\ngnome-session &\n```\nДля среды рабочего стола KDE Plasma:\n```\n#!/bin/bash\nxrdb $HOME/.Xresources\nexport XKL_XMODMAP_DISABLE=1\n/etc/X11/Xsession\nstartplasma-x11 &\n```\nСохраним файл (Ctrl+O, затем Enter) и выйдем (Ctrl+X).\\\nСделаем файл исполняемым:\n```\nchmod +x ~/.vnc/xstartup\n```\nНа этом настройка завершена, переходим к запуску и управлению сервером VNC.\n\n## Запуск и управление VNC сервером\n\nЗапустим свой VNC-сервер:\n```\nvncserver -localhost no\n```\n\nОпция позволяет подключаться с внешних компьютеров. Без этой опции были бы разрешены только подключения с локальной машины.\n\n\u003Cp align=\"center\">\u003Cimg alt=\"запуск сервера\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_09.png width=1024>\u003C/p>\n\n\nПри успешном выполнении команды увидим «New 'X' desktop is your_hostname:1», это означает, что сервер VNC работает на дисплее :1 (обычно порт 5901). Серверы VNC используют номера отображения, соответствующие определенным сетевым портам:  \n• Дисплей :1 соответствует порту 5901  \n• Дисплей :2 соответствует порту 5902 и так далее.  \nНомер порта рассчитывается как 5900 + номер дисплея.  \nTigerVNC предлагает множество опций командной строки для настройки сервера:  \n• geometry WIDTHxHEIGHT: Установка разрешения экрана  \n• depth DEPTH: Устанавливает глубину цвета (16, 24 и т.д.)  \n• localhost yes/no: Определяет, разрешены ли удаленные подключения  \n• name NAME: Устанавливает имя для сеанса рабочего стола  \nДля примера запустим сервер VNC с разрешением Full HD, 24-битной глубиной цвета, пользовательским именем и позволим удаленное подключение:  \n```\nvncserver -geometry 1920x1080 -depth 24 -name \"Ubuntu Remote Desktop\" -localhost no :1\n```\n\nОбеспечим запуск VNC-сервера автоматически при загрузке, создав службу в операционной системе:\n```\nsudo nano /etc/systemd/system/vncserver@.service\n```\nДобавим следующие данные:\n```\n[Unit]\nDescription=Start TigerVNC server at startup\nAfter=syslog.target network.target\n\n[Service]\nType=forking\nUser=your_username\nGroup=your_username\nWorkingDirectory=/home/your_username\n\nPIDFile=/home/your_username/.vnc/%H:%i.pid\nExecStartPre=-/usr/bin/vncserver -kill :%i > /dev/null 2>&1\nExecStart=/usr/bin/vncserver -depth 24 -geometry 1920x1080 -localhost no :%i\nExecStop=/usr/bin/vncserver -kill :%i\n\n[Install]\nWantedBy=multi-user.target\n```\n\nЗамените your_username своим фактическим именем пользователя.\n\n\u003Cp align=\"center\">\u003Cimg alt=\"автозапуск сервера\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_10.png width=1024>\u003C/p>\n\nПроведем включение и запуск службы:\n\n```\nsudo systemctl daemon-reload\nsudo systemctl enable vncserver@.service\nsudo systemctl start vncserver@.service\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"перезапуск служб\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_11.png width=1024>\u003C/p>\n\nМы создали службу, которая запускает сервер VNC на дисплее :1 при загрузке системы.\n\n## Настройка брандмауэра\n\nПри использовании UFW (Uncomplicated Firewall), необходимо разрешить трафик VNC:\n```\nsudo ufw allow 5901/tcp\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"настройка брандмауэра\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_12.png width=1024>\u003C/p>\n\nПри работе с несколькими дисплеями, потребуется разрешить дополнительные порты:\n```\nsudo ufw allow 5901:5905/tcp\n```\nПри использовании IPTables напрямую, потребуется разрешить трафик VNC:\n```\nsudo iptables -A INPUT -p tcp --dport 5901 -j ACCEPT \nsudo iptables-save\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"настройка iptables\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_13.png width=1024>\u003C/p>\n\nТакже необходимо провести сохранение этих правил:\n```\nsudo apt install iptables-persistent\nsudo netfilter-persistent save\n```\nПроверим на стройку брандмауэра и IPTables:\n```\nsudo ufw status\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"статус ufw\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_14.png width=1024>\u003C/p>\n\n```\nsudo iptables -L\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"статус iptables\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_15.png width=1024>\u003C/p>\n\nЭти команды отображают текущие правила брандмауэра, позволяя проверить, правильно ли разрешены порты VNC.\n\n## Подключение к VNC серверу\n\nПосле того как сервер VNC запущен и брандмауэр настроен, подключимся с клиентского устройства.  \nДля разных платформ доступны различные VNC-клиенты:  \n• Linux: TigerVNC Viewer, Remmina  \n• Windows: TightVNC Viewer, RealVNC Viewer  \n• macOS: RealVNC  \n• Android и iOS: VNC Viewer   \n\nДля подключения к VNC-серверу потребуется ввести: \n```\nyour_server_ip:1\n```\nВ некоторых случаях может потребоваться указать полный формат с номером порта:\n```\nyour_server_ip:5901\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"удаленное подключение\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_16.png width=1024>\u003C/p>\n\nРабочийстол будет выглядеть следующим образом:\n\u003Cp align=\"center\">\u003Cimg alt=\"удаленный рабочий стол\" src=/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_17.png width=1024>\u003C/p>\nVNC не был разработан с учетом высоких требований к безопасности, поэтому для защиты удаленного рабочего стола мы рекомендуем применить туннелирование через SSH. \n\nТакой подход обеспечит шифрование VNC-соединений.\n\nДля направления трафика VNC через зашифрованный туннель SSH запустим сервер с использованием параметра:\n```\nvncserver -localhost yes\n```\n\nПараметр гарантирует, что VNC-сервер принимает соединения теперь только с localhost. \n\nВыполним подключение через туннель SSH с клиентского компьютера:\n```\nssh -L 5901:localhost:5901 username@your_server_ip\n```\n\nДополнительно можно создать отдельного пользователя для доступа к VNC-серверу:\n```\nsudo adduser vncuser\nsudo usermod -aG sudo vncuser\n```\n\nВключим общий доступ к буферу обмена, чтобы копировать текст между локальными и удаленными компьютерами:\n```\nvncserver -AllowClipboardTransfer=yes :1\n```\nТакже данный сервер поддерживает передачу файлов. Включить данную возможность можно с помощью команды:\n```\nvncserver -AllowFileDrag=true :1\n```\n\nЕсли возникла необходимость удалить VNC-сервер и конфигурацию, воспользуйтесь командой:\n```\nsudo apt purge tigervnc-standalone-server tigervnc-common\nrm -rf ~/.vnc\n```\n\n## Заключение\n\nМы рассмотрели этапы установки и настройки VNC-сервера для создания удаленного рабочего стола. Уделите особое внимание безопасности при создании таких подключений. Используйте надежные пароли и ограничьте доступ к VNC  с помощью брандмауэра.  \nОбязательно создавайте SSH-туннели для защиты Ваших данных.\n",["Date","2025-08-02T11:12:48.321Z"],"\n\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"введение\"\n>Введение\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>VNC (Virtual Network Computing) в Ubuntu – это графическая система совместного использования рабочего стола, которая использует протокол Remote Frame Buffer для удаленного управления другим компьютером. Она функционирует по модели клиент-сервер, передает события клавиатуры и мыши с одного компьютера на другой, одновременно ретранслируя графические обновления экрана в обратном направлении по сетевому соединению. С помощью VNC можно администрировать и отлаживать системы без физического присутствия. \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"подготовка-системы\"\n>Подготовка системы\u003C/h2>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Вам потребуются привилегии sudo для установки пакетов и настройки параметров системы.\u003C/p>\n\u003C/blockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Перед установкой проведем обновление системы, чтобы убедиться, что установлены последние версии пакетов и исправлений безопасности:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt-get update &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt-get upgrade\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_01.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"обновление пакетов\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_01.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если Вы используете Ubuntu Server без графического интерфейса, Вам потребуется установить среду рабочего стола. Ubuntu 24.04 предлагает несколько вариантов:\u003Cbr>\n• GNOME: среда рабочего стола Ubuntu по умолчанию, многофункциональная, но ресурсоемкая.\u003Cbr>\n• XFCE: облегченная среда рабочего стола, идеально подходящая для сценариев удаленного доступа.\u003Cbr>\n• KDE Plasma: настраиваемое окружение рабочего стола с современными функциями и красивым дизайном.\u003Cbr>\n• MATE: легкая традиционная компоновка окружения рабочего стола.\u003Cbr>\n• LXQt: очень легкая и быстрая среда рабочего стола для старых систем.\u003Cbr>\nДля установки VNC-сервера мы будем использовать систему XFCE, как самую легковесную и быструю. Установим её:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install xfce4 xfce4-goodies\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_02.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"установка рабочего стола\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_02.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если Вы предпочитаете GNOME (рабочий стол Ubuntu по умолчанию), то его можно установить с помощью команды::\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install ubuntu-gnome-desktop\u003C/code>\u003C/pre>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"установка-vnc-сервера\"\n>Установка VNC сервера\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После успешной подготовки системы, установим VNC-сервер. Для Ubuntu 24.04 доступно несколько реализаций VNC-серверов:\u003Cbr>\n• TigerVNC: высокопроизводительный, надежный VNC-сервер с активным сообществом разработчиков.\u003Cbr>\n• x11vnc: пакет присутствует в стандартных репозиториях большинства дистрибутивов Linux. Полезен для совместного использования существующих сеансов рабочего стола.\u003Cbr>\n• TightVNC: эффективный VNC-сервер, ориентированный на оптимизацию пропускной способности.\u003Cbr>\n• RealVNC Server:  коммерческое решение для удалённого доступа к серверу для различных дистрибутивов Linux.\u003Cbr>\nВ данной статье мы будем использоавть TigerVNC, который предлагает оптимальный баланс функционала и производительности.  \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Установим сервер TigerVNC:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install tigervnc-standalone-server tigervnc-common\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_03.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"установка сервера\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_03.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Убедимся, что TigerVNC был установлен правильно, проверив его версию:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>vncserver \u003Cspan class=\"hljs-comment\">--version\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_04.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка версии\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_04.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"настройка-vnc-сервера\"\n>Настройка VNC сервера\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Установим пароль для доступа к VNC:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">vncpasswd\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_05.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"установка пароля\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_05.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Нам предложено ввести и подтвердить пароль. Этот пароль потребуется при подключении к VNC-серверу. В целях безопасности обязательно задавайте надежный пароль.  \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>При необходимости Вы можете установить пароль для режима view-only. Режим «только просмотр» разрешает пользователю видеть удаленный рабочий стол, но запрещает ему изменять какие-либо данные на нем.  \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Запустим VNC-сервер один раз для генерации исходных конфигурационных файлов:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">vncserver\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_06.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"запуск сервера\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_06.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>При этом в домашней папке будет создан каталог .vnc и он будет заполнен файлами конфигурации по умолчанию.\u003Cbr>\nОстановим сервер для изменения этих файлов:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">vncserver\u003C/span> -kill :\u003Cspan class=\"hljs-number\">1\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_07.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"остановка сервера\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_07.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Файл xstartup определяет, какая среда рабочего стола запускается при подключении к VNC.\u003Cbr>\nОтредактируем этот файл:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>nano ~\u003Cspan class=\"hljs-regexp\">/.vnc/\u003C/span>xstartup\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Для XFCE заменим содержимое на:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-meta\">#!/bin/bash\u003C/span>\nxrdb \u003Cspan class=\"hljs-variable\">$HOME\u003C/span>/.Xresources\nstartxfce4 &amp;\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_08.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"редактирование файла\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_08.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Для среды рабочего стола GNOME:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-meta\">#!/bin/bash\u003C/span>\nxrdb \u003Cspan class=\"hljs-variable\">$HOME\u003C/span>/.Xresources\n\u003Cspan class=\"hljs-built_in\">export\u003C/span> XKL_XMODMAP_DISABLE=1\n/etc/X11/Xsession\ngnome-session &amp;\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Для среды рабочего стола KDE Plasma:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-meta\">#!/bin/bash\u003C/span>\nxrdb \u003Cspan class=\"hljs-variable\">$HOME\u003C/span>/.Xresources\n\u003Cspan class=\"hljs-built_in\">export\u003C/span> XKL_XMODMAP_DISABLE=1\n/etc/X11/Xsession\nstartplasma-x11 &amp;\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Сохраним файл (Ctrl+O, затем Enter) и выйдем (Ctrl+X).\\\nСделаем файл исполняемым:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">chmod\u003C/span> +x ~/.vnc/xstartup\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>На этом настройка завершена, переходим к запуску и управлению сервером VNC.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"запуск-и-управление-vnc-сервером\"\n>Запуск и управление VNC сервером\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Запустим свой VNC-сервер:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">vncserver\u003C/span> -localhost \u003Cspan class=\"hljs-literal\">no\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Опция позволяет подключаться с внешних компьютеров. Без этой опции были бы разрешены только подключения с локальной машины.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_09.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"запуск сервера\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_09.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>При успешном выполнении команды увидим «New ‘X’ desktop is your_hostname:1», это означает, что сервер VNC работает на дисплее :1 (обычно порт 5901). Серверы VNC используют номера отображения, соответствующие определенным сетевым портам:\u003Cbr>\n• Дисплей :1 соответствует порту 5901\u003Cbr>\n• Дисплей :2 соответствует порту 5902 и так далее.\u003Cbr>\nНомер порта рассчитывается как 5900 + номер дисплея.\u003Cbr>\nTigerVNC предлагает множество опций командной строки для настройки сервера:\u003Cbr>\n• geometry WIDTHxHEIGHT: Установка разрешения экрана\u003Cbr>\n• depth DEPTH: Устанавливает глубину цвета (16, 24 и т.д.)\u003Cbr>\n• localhost yes/no: Определяет, разрешены ли удаленные подключения\u003Cbr>\n• name NAME: Устанавливает имя для сеанса рабочего стола\u003Cbr>\nДля примера запустим сервер VNC с разрешением Full HD, 24-битной глубиной цвета, пользовательским именем и позволим удаленное подключение:  \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">vncserver\u003C/span> -geometry \u003Cspan class=\"hljs-number\">1920\u003C/span>x1080 -depth \u003Cspan class=\"hljs-number\">24\u003C/span> -name \u003Cspan class=\"hljs-string\">&quot;Ubuntu Remote Desktop&quot;\u003C/span> -localhost no :\u003Cspan class=\"hljs-number\">1\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Обеспечим запуск VNC-сервера автоматически при загрузке, создав службу в операционной системе:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/systemd/system/vncserver@.service\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Добавим следующие данные:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-section\">[Unit]\u003C/span>\n\u003Cspan class=\"hljs-attr\">Description\u003C/span>=Start TigerVNC server at startup\n\u003Cspan class=\"hljs-attr\">After\u003C/span>=syslog.target network.target\n\n\u003Cspan class=\"hljs-section\">[Service]\u003C/span>\n\u003Cspan class=\"hljs-attr\">Type\u003C/span>=forking\n\u003Cspan class=\"hljs-attr\">User\u003C/span>=your_username\n\u003Cspan class=\"hljs-attr\">Group\u003C/span>=your_username\n\u003Cspan class=\"hljs-attr\">WorkingDirectory\u003C/span>=/home/your_username\n\n\u003Cspan class=\"hljs-attr\">PIDFile\u003C/span>=/home/your_username/.vnc/%H:%i.pid\n\u003Cspan class=\"hljs-attr\">ExecStartPre\u003C/span>=-/usr/bin/vncserver -kill :%i &gt; /dev/null \u003Cspan class=\"hljs-number\">2\u003C/span>&gt;&amp;\u003Cspan class=\"hljs-number\">1\u003C/span>\n\u003Cspan class=\"hljs-attr\">ExecStart\u003C/span>=/usr/bin/vncserver -depth \u003Cspan class=\"hljs-number\">24\u003C/span> -geometry \u003Cspan class=\"hljs-number\">1920\u003C/span>x1080 -localhost \u003Cspan class=\"hljs-literal\">no\u003C/span> :%i\n\u003Cspan class=\"hljs-attr\">ExecStop\u003C/span>=/usr/bin/vncserver -kill :%i\n\n\u003Cspan class=\"hljs-section\">[Install]\u003C/span>\n\u003Cspan class=\"hljs-attr\">WantedBy\u003C/span>=multi-user.target\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Замените your_username своим фактическим именем пользователя.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_10.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"автозапуск сервера\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_10.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проведем включение и запуск службы:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl daemon-reload\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl \u003Cspan class=\"hljs-built_in\">enable\u003C/span> vncserver@.service\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl start vncserver@.service\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_11.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"перезапуск служб\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_11.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Мы создали службу, которая запускает сервер VNC на дисплее :1 при загрузке системы.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"настройка-брандмауэра\"\n>Настройка брандмауэра\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>При использовании UFW (Uncomplicated Firewall), необходимо разрешить трафик VNC:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw allow 5901/tcp\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_12.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"настройка брандмауэра\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_12.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>При работе с несколькими дисплеями, потребуется разрешить дополнительные порты:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw allow 5901:5905/tcp\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>При использовании IPTables напрямую, потребуется разрешить трафик VNC:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> iptables -A INPUT -p tcp --dport 5901 -j ACCEPT \n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> iptables-save\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_13.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"настройка iptables\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_13.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Также необходимо провести сохранение этих правил:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install iptables-persistent\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> netfilter-persistent save\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверим на стройку брандмауэра и IPTables:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw status\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_14.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"статус ufw\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_14.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> iptables -L\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_15.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"статус iptables\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_15.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Эти команды отображают текущие правила брандмауэра, позволяя проверить, правильно ли разрешены порты VNC.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"подключение-к-vnc-серверу\"\n>Подключение к VNC серверу\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После того как сервер VNC запущен и брандмауэр настроен, подключимся с клиентского устройства.\u003Cbr>\nДля разных платформ доступны различные VNC-клиенты:\u003Cbr>\n• Linux: TigerVNC Viewer, Remmina\u003Cbr>\n• Windows: TightVNC Viewer, RealVNC Viewer\u003Cbr>\n• macOS: RealVNC\u003Cbr>\n• Android и iOS: VNC Viewer   \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Для подключения к VNC-серверу потребуется ввести: \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">your_server_ip\u003C/span>:\u003Cspan class=\"hljs-number\">1\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В некоторых случаях может потребоваться указать полный формат с номером порта:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">your_server_ip\u003C/span>:\u003Cspan class=\"hljs-number\">5901\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_16.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"удаленное подключение\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_16.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Рабочийстол будет выглядеть следующим образом:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_17.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"удаленный рабочий стол\"\n                            src=\"/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_17.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nVNC не был разработан с учетом высоких требований к безопасности, поэтому для защиты удаленного рабочего стола мы рекомендуем применить туннелирование через SSH.\n\u003Cp class=\"mt-2 mb-2 text-md\">Такой подход обеспечит шифрование VNC-соединений.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для направления трафика VNC через зашифрованный туннель SSH запустим сервер с использованием параметра:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">vncserver\u003C/span> -localhost \u003Cspan class=\"hljs-literal\">yes\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Параметр гарантирует, что VNC-сервер принимает соединения теперь только с localhost. \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Выполним подключение через туннель SSH с клиентского компьютера:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">ssh\u003C/span> -L \u003Cspan class=\"hljs-number\">5901\u003C/span>:localhost:\u003Cspan class=\"hljs-number\">5901\u003C/span> username@your_server_ip\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Дополнительно можно создать отдельного пользователя для доступа к VNC-серверу:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> adduser vncuser\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> usermod -aG \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> vncuser\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Включим общий доступ к буферу обмена, чтобы копировать текст между локальными и удаленными компьютерами:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">vncserver\u003C/span> -AllowClipboardTransfer=\u003Cspan class=\"hljs-literal\">yes\u003C/span> :\u003Cspan class=\"hljs-number\">1\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Также данный сервер поддерживает передачу файлов. Включить данную возможность можно с помощью команды:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">vncserver\u003C/span> -AllowFileDrag=\u003Cspan class=\"hljs-literal\">true\u003C/span> :\u003Cspan class=\"hljs-number\">1\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если возникла необходимость удалить VNC-сервер и конфигурацию, воспользуйтесь командой:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt purge tigervnc-standalone-server tigervnc-common\n\u003Cspan class=\"hljs-built_in\">rm\u003C/span> -rf ~/.vnc\u003C/code>\u003C/pre>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"заключение\"\n>Заключение\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Мы рассмотрели этапы установки и настройки VNC-сервера для создания удаленного рабочего стола. Уделите особое внимание безопасности при создании таких подключений. Используйте надежные пароли и ограничьте доступ к VNC  с помощью брандмауэра.\u003Cbr>\nОбязательно создавайте SSH-туннели для защиты Ваших данных.\u003C/p>\n","В статье рассмотрим как установить и настроить удаленный рабочий стол с помощью VNC сервера на Ubuntu 24.04. Создадим подключение к рабочему столу с персональными настройками. Настроим работу сервера для передачи файлов.","/topics/installing-the-server-software/how-to-install-vnc-server/static/ru_image_00.webp",[173,174,177,180,183,186,189,192],{"title":106,"level":41,"id":107},{"title":175,"level":41,"id":176},"Подготовка системы","подготовка-системы",{"title":178,"level":41,"id":179},"Установка VNC сервера","установка-vnc-сервера",{"title":181,"level":41,"id":182},"Настройка VNC сервера","настройка-vnc-сервера",{"title":184,"level":41,"id":185},"Запуск и управление VNC сервером","запуск-и-управление-vnc-сервером",{"title":187,"level":41,"id":188},"Настройка брандмауэра","настройка-брандмауэра",{"title":190,"level":41,"id":191},"Подключение к VNC серверу","подключение-к-vnc-серверу",{"title":92,"level":41,"id":93},{"slug":194,"tags":195,"title":201,"content":202,"updatedAt":203,"markdown":204,"description":205,"cover":206,"tableOfContents":207},"how-to-install-samba-on-ubuntu",[196,197,198,22,65,199,200],"samba","samba-server","smbclient","wireguard","ufc","Как установить Samba на Ubuntu 24.04","# Как установить Samba на Ubuntu 24.04\n\n## Создание сервера\nСоздадим сервер на [HostVDS](https://hostvds.com/control/servers/new). \n> Выбирайте сервер исходя из Ваших требований к системе\n\nВ качестве примера мы остановились на тарифном плане Burstable, 8 Gb, 3 CPU:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Создадим сервер на HostVDS\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_01.png width=1024>\u003C/p>\n\nВыбрали образ Ubuntu 24.04:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Создадим сервер на HostVDS\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_02.png width=1024>\u003C/p>\n\nПосле создания сервера и подключения к нему по SSH приступаем к настройке системы.\n\n## Подготовка системы\n\nОбновим систему до последних версий пакетов:\n\n```\nsudo apt update && sudo apt upgrade -y\n```\n\nУстановим WireGuard (WG) и ufw:\n\n```\nsudo apt install wireguard qrencode ufw -y\t\n```\n\nВключим маршрутизацию для корректной работы WG и Samba.  \nОткрываем файл:\n\n```\nsudo nano /etc/sysctl.conf\n```\n\n\nНайдём строку:\n\n```\n#net.ipv4.ip_forward=1\n```\n\nСнимем комментарий.\nРезультат:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Настройка маршрутизации\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_03.png width=1024>\u003C/p>\n\nСохраняем Ctrl+O, выходим из файла Ctrl+Z. Применим изменения:\n\n```\nsudo sysctl -p\n```\n\nРезультат:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Результат настройки маршрутизации\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_04.png width=1024>\u003C/p>\n\nНастроим ufw. Разрешим порт управления:\n> Замените порт 22 на Ваш реальный порт управления сервером:\n\n```\nsudo ufw allow 22\n```\n\nРазрешим порт WireGuard:\n\n```\nsudo ufw allow 51820/udp\n```\n\nРазрешим форвардинг для VPN-сети\n\n```\nsudo ufw route allow in on wg0 out on eth0 && sudo ufw route allow in on eth0 out on wg0\n```\n\nОткрываем порты для Samba только внутри сети 10.10.10.0:\n\n```\nsudo ufw allow from 10.10.10.0/24 to any port 445 && sudo ufw allow from 10.10.10.0/24 to any port 139\n```\n\nВключаем и проверяем правильность настройки:\n\n```\nsudo systemctl start ufw && sudo ufw enable && sudo ufw status verbose\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Результат настройки ufw\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_05.png width=1024>\u003C/p>\n\n## Настройка Wireguard\n\nПротокол SMB/Samba предназначен только для локальных сетей. Если Вы откроете его порты наружу, сервер станет мишенью для взломщиков. Для защиты подключений мы настроили ufw и дополнительно будем использовать туннели через WireGuard.  \nСоздаем директорию, в которой будем хранить ключи WG:\n\n```\ncd && mkdir wg && cd wg\n```\n\nЗададим маску прав доступа по умолчанию для всех новых файлов и папок, создаваемых в текущей сессии:  \n•\tТолько владелец сможет читать, писать и (для папок) выполнять (rwx------).  \n•\tДля всех остальных — никаких прав.\n\n```\numask 077\n```\n\nГенерируем публичный и приватный ключи для WG:\n\n```\nwg genkey | tee server_private.key | wg pubkey > server_public.key\n```\n\nгде  \n•\tserver_private.key — приватный ключ сервера;  \n•\tserver_public.key — публичный ключ сервера, который будет использоваться клиентами.  \nСоздаем файл конфигурации WireGuard сервера:\n\n```\nsudo nano /etc/wireguard/wg0.conf\n```\n\n```\n[Interface]\nAddress = 10.10.10.1/24\nListenPort = 51820\nPrivateKey = \nSaveConfig = true\n\nPostUp = ufw route allow in on wg0 out on eth0\nPostUp = iptables -A FORWARD -i wg0 -j ACCEPT\nPostUp = iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\nPostDown = ufw route delete allow in on wg0 out on eth0\nPostDown = iptables -D FORWARD -i wg0 -j ACCEPT\nPostDown = iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE\n```\n\nВставляем содержимое server_private.key в конфиг:\n\n```\nsudo sed -i \"s|^PrivateKey *=.*|PrivateKey = $(cat ~/wg/server_private.key)|\" /etc/wireguard/wg0.conf\n```\n\nРезультат на скриншоте:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Результат настройки /etc/wireguard/wg0.conf\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_06.png width=1024>\u003C/p>\n\nСоздадим ключ для сотрудника:\n\n```\nwg genkey | tee client1_private.key | wg pubkey > client1_public.key\n```\n\nДобавим клиента в серверный конфиг. Открываем файл:\n\n```\nsudo nano /etc/wireguard/wg0.conf\n```\n\nВставим в конфиг строчки:\n> Замените \u003CСодержимое client1_public.key> на ключ из client1_public.key\n\n```\n[Peer]\nPublicKey = \u003CСодержимое client1_public.key>\nAllowedIPs = 10.10.10.2/32\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"добавляем peer в /etc/wireguard/wg0.conf\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_07.png width=1024>\u003C/p>\n\nВключаем wireguard и интерфейс wg0:\n\n```\nsudo systemctl start wg-quick@wg0 && sudo systemctl enable wg-quick@wg0 && sudo systemctl status wg-quick@wg0\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"включаем wireguard\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_08.png width=1024>\u003C/p>\n\nСоздадим клиентский конфиг:\n\n```\nnano client1.conf\n```\n\nВставьте в него конфигурацию:\n> Замените \u003CСодержимое client1_private.key> на Ваши данные\n\n> Замените \u003CСодержимое server_public.key> на Ваши данные\n\n> Замените \u003CВнешний_IP_Сервера> на Ваш IP-адрес\n\n> Для каждого следующего клиента изменяйте параметры Address и client1_private.key\n\n```\n[Interface]\nPrivateKey = \u003CСодержимое client1_private.key>\nAddress = 10.10.10.2/32\nDNS = 8.8.8.8\n\n[Peer]\nPublicKey = \u003CСодержимое server_public.key>\nEndpoint = \u003CВнешний_IP_Сервера>:51820\nAllowedIPs = 10.10.10.0/24\nPersistentKeepalive = 25\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"клиентский конфиг wireguard\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_09.png width=1024>\u003C/p>\n\nНа клиентской машине в командной строке вводим команду копирования через scp:\n\n```\nscp \u003Cимя пользователя>@\u003CIP-адрес сервера>:/home/\u003Cимя пользователя> >/wg/client1.conf C:\\Users\\\u003Cимя пользователя>\\Downloads\\\n```\n\nПример:\n\n```\nscp jetcry@46.8.229.3:/home/jetcry/wg/client1.conf C:\\Users\\jetcry\\Downloads\\\n```\n\nНа компьютере клиента устанавливаем  [Wireguard](https://www.wireguard.com/install/).  \nЗапускаем приложение, нажимаем «Добавить туннель». Выбираем сохраненный конфиг, затем – «Подключить».  \nРезультат:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"wireguard на клиенте\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_10.png width=800>\u003C/p>\n\n## Установка и первоначальная настройка Samba\n\nУстановим Samba на сервер:\n\n```\nsudo apt install smbclient samba samba-common-bin acl -y\n```\n\nПроверим версию:\n\n```\nsmbd --version\n```\n\nРезультат:  \n_Version 4.19.5-Ubuntu_  \nПокажем логику настройки сервера на примере создания пользователя admin и группы admins.  \nПеред настройкой создадим backup конфигурации Samba:\n\n```\nsudo cp /etc/samba/smb.conf /etc/samba/smb.conf.backup\n```\n\nСоздадим общую для всех группу common и директорию для нее:\n```\nsudo groupadd common\nsudo mkdir -p /srv/samba/common\nsudo chown -R root:common /srv/samba/common\nsudo chmod 2775 /srv/samba/common\nsudo find /srv/samba/common -type d -exec chmod 2775 {} \\;\nsudo find /srv/samba/common -type f -exec chmod 0664 {} \\;\n```\n\nСоздаем группу администраторов:\n\n```\nsudo groupadd admins\n```\n\nСоздаем пользователя admin без домашней директории:\n\n```\nsudo useradd -M -s /usr/sbin/nologin admin\n```\n\nДобавим пользователя в группу admins:\n\n```\nsudo usermod -aG admins admin\n```\n\nУстановим пароль Samba для пользователя:\n\n```\nsudo smbpasswd -a admin\n```\n\nВключим пользователя в samba:\n\n```\nsudo smbpasswd -e admin # \n```\n\nСоздаем личную папку пользователя на Samba\n\n```\nsudo mkdir -p /srv/samba/personal/admin\nsudo chown admin:admins /srv/samba/personal/admin\nsudo chmod 700 /srv/samba/personal/admin\n```\nздесь 700 — сам пользователь admin имеет полный доступ.  \nСоздадим директорию для группы:\n\n```\nsudo mkdir -p /srv/samba/admins\nsudo chown root:admins /srv/samba/admins\nsudo chmod 2770 /srv/samba/admins\nsudo setfacl -m g:admins:rwx /srv/samba/admins\nsudo setfacl -d -m g:admins:rwx /srv/samba/admins\n```\n\nгде  \n•\tchown root:admins — владелец root, группа-владелец admins;  \n•\tchmod 2770: 2 — новые файлы/папки будут принадлежать группе admins; 770 —  только владелец и группа могут читать/писать/заходить, остальные — нет.  \n•\tsetfacl -m g:admins:rwx — ACL даёт группе admins полный доступ;  \n•\tsetfacl -d ... — то же самое, но по умолчанию для новых файлов/папок внутри.  \nПроверяем: \n```\nid admin\nls -ld /srv/samba/personal/admin\nsudo pdbedit -L | grep admin\n```\nРезультат:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка пользователя admin\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_11.png width=1024>\u003C/p>\n\nОткроем файл с текущей конфигурацией Samba:\n\n```\nsudo nano /etc/samba/smb.conf\n```\n\nДобавляем в раздел **[global]** в начале файла\n\n```\n   # Безопасность\n   hosts allow = 127.0.0.1 10.10.10.0/24\n   hosts deny = ALL\n   smb ports = 445\n   min protocol = SMB2\n   client min protocol = SMB2\n   ntlm auth = no\n```\n\nВ конец файла добавим разделы для групп:  \n•\tобщая (common)  \n•\tс персональными данными (Personal)  \n•\tдля пользователей admins (admins):\n\n```\n[common]\n   path = /srv/samba/common\n   browsable = yes\n   read only = no\n   guest ok = no\n   valid users = @common\n\n[Personal]\n   path = /srv/samba/personal/%U\n   browsable = no\n   read only = no\n   guest ok = no\n   valid users = %U, @admins\n   create mask = 0600\n   directory mask = 0700\n   root preexec = /bin/mkdir -p /srv/samba/personal/%U; /bin/chown %U:%U /srv/samba/personal/%U\n \n[admins]\n   path = /srv/samba/admins\n   browsable = yes\n   read only = no\n   guest ok = no\n   valid users = @admins\n   write list = @admins\n   create mask = 0664\n   directory mask = 2775\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"изменение /etc/samba/smb.conf\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_12.png width=1024>\u003C/p>\n\nПерезапустим Samba:\n\n```\nsudo systemctl restart smbd\n```\n\nПроверим, что пользователь admin настроен корректно:\n\n```\nsmbclient //10.10.10.1/admins -U admin\n```\n\nВывод:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка пользователя admin\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_13.png width=1024>\u003C/p>\n\n## Автоматическое добавление пользователей\n\nТеперь автоматизируем работу с помощью скрипта:\n\n```\ncd ~/wg/\n```\n\n```\nnano add_samba_user.sh\n```\n\nВставляем скрипт:\n\n```\n#!/bin/bash \n\n# Скрипт для добавления Samba-пользователя, группы, папки и раздела в smb.conf\n# В каждый раздел доступ имеют @\u003Cgroup> и @admins. На уровне ФС добавляется ACL для admins\n# Все пользователи автоматически добавляются в группу @common\n# Использование скрипта: ./add_samba_user.sh \u003Cимя_пользователя> \u003Cгруппа>\n\nset -e\n\nif [ \"$#\" -ne 2 ]; then\n  echo \"Использование: $0 \u003Cимя_пользователя> \u003Cгруппа>\"\n  exit 1\nfi\n\nUSERNAME=\"$1\"\nUSERGROUP_RAW=\"$2\"\nUSERGROUP=$(echo \"$USERGROUP_RAW\" | tr -d \"'\\\"\" | tr '[:upper:]' '[:lower:]' | xargs)\n\necho \"DEBUG: USERGROUP=[$USERGROUP]\"\n\nSAMBA_BASE=\"/srv/samba\"\nPERSONAL_BASE=\"$SAMBA_BASE/personal\"\nCOMMON_BASE=\"$SAMBA_BASE/common\"\nSMBCONF=\"/etc/samba/smb.conf\"\n\n# --- Функция добавления секции в smb.conf ---\nadd_group_section_to_smbconf() {\n  local groupname=\"$1\"\n  local path=\"/srv/samba/$groupname\"\n\n  if grep -q \"^\\[$groupname\\]\" \"$SMBCONF\"; then\n    echo \"ℹ️ Раздел [$groupname] уже есть в $SMBCONF\"\n    return\n  fi\n\n  echo \"\" | sudo tee -a \"$SMBCONF\" >/dev/null\n  echo \"[$groupname]\" | sudo tee -a \"$SMBCONF\" >/dev/null\n  echo \"   path = $path\" | sudo tee -a \"$SMBCONF\" >/dev/null\n  echo \"   browsable = yes\" | sudo tee -a \"$SMBCONF\" >/dev/null\n  echo \"   read only = no\" | sudo tee -a \"$SMBCONF\" >/dev/null\n  echo \"   guest ok = no\" | sudo tee -a \"$SMBCONF\" >/dev/null\n  echo \"   valid users = @$groupname, @admins\" | sudo tee -a \"$SMBCONF\" >/dev/null\n  echo \"   write list = @$groupname, @admins\" | sudo tee -a \"$SMBCONF\" >/dev/null\n  echo \"   create mask = 0664\" | sudo tee -a \"$SMBCONF\" >/dev/null\n  echo \"   directory mask = 2775\" | sudo tee -a \"$SMBCONF\" >/dev/null\n  echo \"✅ Раздел [$groupname] добавлен в $SMBCONF\"\n}\n\n# --- Создание папок для common и personal ---\nfunction make_shared_dir() {\n  DIR=\"$1\"\n  OWNER=\"$2\"\n  DIRGRP=\"$3\"\n  MODE=\"$4\"\n  if [ ! -d \"$DIR\" ]; then\n    sudo mkdir -p \"$DIR\"\n    sudo chown \"$OWNER:$DIRGRP\" \"$DIR\"\n    sudo chmod \"$MODE\" \"$DIR\"\n    # Даем группе admins полный доступ через ACL (и наследование на новые файлы)\n    sudo setfacl -m g:admins:rwx \"$DIR\"\n    sudo setfacl -d -m g:admins:rwx \"$DIR\"\n    echo \"✅ Каталог $DIR создан с владельцем $OWNER:$DIRGRP, правами $MODE и доступом для группы admins (ACL)\"\n  else\n    echo \"ℹ️ Каталог $DIR уже существует\"\n    # Обновим права admins на всякий случай\n    sudo setfacl -m g:admins:rwx \"$DIR\"\n    sudo setfacl -d -m g:admins:rwx \"$DIR\"\n  fi\n}\n\nmake_shared_dir \"$COMMON_BASE\" root common 2775\nmake_shared_dir \"$PERSONAL_BASE\" root root 0771\n\n# --- Для любой группы, кроме \"common\", создаём группу, папку, и секцию в smb.conf ---\nif [ -n \"$USERGROUP\" ] && [ \"$USERGROUP\" != \"common\" ]; then\n  if ! getent group \"$USERGROUP\" > /dev/null; then\n    sudo groupadd \"$USERGROUP\"\n    echo \"✅ Группа $USERGROUP создана.\"\n  fi\n  # Создать группу admins, если её нет (один раз)\n  if ! getent group admins > /dev/null; then\n    sudo groupadd admins\n    echo \"✅ Группа admins создана.\"\n  fi\n  GROUP_DIR=\"$SAMBA_BASE/$USERGROUP\"\n  make_shared_dir \"$GROUP_DIR\" root \"$USERGROUP\" 2770\n  add_group_section_to_smbconf \"$USERGROUP\"\nfi\n\n# --- Проверка что группа common существует ---\nif ! getent group common > /dev/null; then\n  sudo groupadd common\n  echo \"✅ Группа common создана.\"\nfi\n\n# --- Создание пользователя ---\nif id \"$USERNAME\" &>/dev/null; then\n  echo \"ℹ️ Пользователь $USERNAME уже существует.\"\nelse\n  sudo useradd -M -U -s /usr/sbin/nologin \"$USERNAME\"\n  sleep 2\n  echo \"✅ Системный пользователь $USERNAME создан с персональной группой.\"\nfi\n\n# --- Добавление пользователя в группы ---\necho \"DEBUG перед usermod: USERGROUP=[$USERGROUP]\"\n\n# Добавляем пользователя в указанную группу (кроме \"common\"), если надо\nif [ -n \"$USERGROUP\" ] && [ \"$USERGROUP\" != \"common\" ]; then\n  sleep 1\n  sudo usermod -aG \"$USERGROUP\" \"$USERNAME\"\n  echo \"✅ Пользователь $USERNAME добавлен в группу $USERGROUP.\"\nelse\n  echo \"ℹ️ Пользователь без отдельной групповой папки (общий доступ).\"\nfi\n\n# --- Всегда добавляем пользователя в группу common ---\nsudo usermod -aG common \"$USERNAME\"\necho \"✅ Пользователь $USERNAME добавлен в группу common (общая папка).\"\n\n# --- Персональная директория пользователя ---\nUSER_DIR=\"$PERSONAL_BASE/$USERNAME\"\nif [ ! -d \"$USER_DIR\" ]; then\n  sudo mkdir -p \"$USER_DIR\"\n  sudo chown \"$USERNAME:$USERNAME\" \"$USER_DIR\"\n  sudo chmod 700 \"$USER_DIR\"\n  echo \"✅ Персональная директория $USER_DIR создана.\"\nelse\n  echo \"ℹ️ Директория $USER_DIR уже существует.\"\nfi\n\n# --- Samba ---\nPASSWORD=$(\u003C /dev/urandom tr -dc 'A-Za-z0-9!@#$%&_+=' | head -c 10)\necho -e \"$PASSWORD\\n$PASSWORD\" | sudo smbpasswd -a \"$USERNAME\"\nsudo smbpasswd -e \"$USERNAME\"\n\n# --- Перезапуск Samba ---\necho \"♻️ Перезапуск Samba (smbd)...\"\nsudo systemctl restart smbd\necho \"✅ Samba перезапущена.\"\n\n# --- Итоговый вывод ---\necho \"==============================\"\necho \"✅ Пользователь $USERNAME успешно создан!\"\necho \"🔐 Логин: $USERNAME\"\necho \"🔐 Пароль: $PASSWORD\"\necho \"🏠 Личная папка: $USER_DIR\"\necho \"🗂️ Общая папка: $COMMON_BASE\"\nif [ \"$USERGROUP\" != \"common\" ]; then\n  echo \"🗂️ Групповая папка: $SAMBA_BASE/$USERGROUP\"\n  echo \"🛡️ Раздел [$USERGROUP] добавлен в $SMBCONF (valid users = @$USERGROUP, @admins)\"\nfi\necho \"🗂️ Доступ к папке common есть у всех пользователей (группа common)\"\necho \"==============================\"\n```\n\nДелаем скрипт исполняемым:\n\n```\nchmod +x add_samba_user.sh\n```\n\n\nРезультат создания пользователя admin1, который входит в группу admins:\n\n```\nsudo ./add_samba_user.sh admin1 admins\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Результат создания пользователя admin1\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_14.png width=1024>\u003C/p>\n\nСоздадим пользователя ivan, который относится к отделу it:\nsudo ./add_samba_user.sh ivan it\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Результат создания пользователя ivan\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_15.png width=1024>\u003C/p>\n\nПроверяем правильность работы скрипта.\nПользователь admin1 имеет доступ ко всем ресурсам:\n\n```\nsmbclient //10.10.10.1/admins -U admin1\nsmbclient //10.10.10.1/common -U admin1\nsmbclient //10.10.10.1/personal -U admin1\nsmbclient //10.10.10.1/it -U admin1\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Пользователь admin1 имеет доступ ко всем ресурсам\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_16.png width=1024>\u003C/p>\n\nПользователь ivan имеет доступ к common, it, personal. К директории admins пользователю ivan нет доступа:\n\n```\nsmbclient //10.10.10.1/common -U ivan\nsmbclient //10.10.10.1/it -U ivan\nsmbclient //10.10.10.1/personal -U ivan\nsmbclient //10.10.10.1/admins -U ivan\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Пользователь admin1 имеет доступ ко всем ресурсам\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_17.png width=1024>\u003C/p>\n\nПроверим доступность сервера с компьютера клиента.  \nДля этого заходим в Проводник, «Мой компьютер» – «Подключить сетевой диск».  \nУказываем IP-адрес сервера Samba.\n\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Подключение к Samba с клиента\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_18.png width=800>\u003C/p>\n\nПри подключении вводим логин пользователя admin и его пароль:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Ввод данных пользователя\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_19.png width=600>\u003C/p>\n\nПроверим, что пользователь admin может зайти в другие директории и создать там файлы:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Проверка корректности настройки пользователя admin\" src=/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_20.png width=1024>\u003C/p>\n\n## Краткие итоги\n\nМы настроили сервер Samba на HostVDS.com. Для защиты корпоративной сети создали туннель WireGuard и настроили ufw. Затем добавили пользователей и директории, указали нужные права. После этого с помощью скрипта мы автоматизировали процесс работы с Samba. Проверили корректность настроек с удаленного клиента.\n",["Date","2025-08-02T11:12:48.270Z"],"\n\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"создание-сервера\"\n>Создание сервера\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создадим сервер на \u003Ca   href=\"https://hostvds.com/control/servers/new\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>HostVDS\u003C/a>. \u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Выбирайте сервер исходя из Ваших требований к системе\u003C/p>\n\u003C/blockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В качестве примера мы остановились на тарифном плане Burstable, 8 Gb, 3 CPU:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_01.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Создадим сервер на HostVDS\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_01.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Выбрали образ Ubuntu 24.04:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_02.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Создадим сервер на HostVDS\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_02.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После создания сервера и подключения к нему по SSH приступаем к настройке системы.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"подготовка-системы\"\n>Подготовка системы\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Обновим систему до последних версий пакетов:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt update &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt upgrade -y\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Установим WireGuard (WG) и ufw:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install wireguard qrencode ufw -y\t\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Включим маршрутизацию для корректной работы WG и Samba.\u003Cbr>\nОткрываем файл:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/sysctl.conf\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Найдём строку:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-selector-id\">#net\u003C/span>\u003Cspan class=\"hljs-selector-class\">.ipv4\u003C/span>.ip_forward=\u003Cspan class=\"hljs-number\">1\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Снимем комментарий.\nРезультат:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_03.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Настройка маршрутизации\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_03.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Сохраняем Ctrl+O, выходим из файла Ctrl+Z. Применим изменения:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> sysctl -p\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Результат:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_04.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Результат настройки маршрутизации\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_04.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Настроим ufw. Разрешим порт управления:\u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Замените порт 22 на Ваш реальный порт управления сервером:\u003C/p>\n\u003C/blockquote>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw allow 22\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Разрешим порт WireGuard:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw allow 51820/udp\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Разрешим форвардинг для VPN-сети\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw route allow \u003Cspan class=\"hljs-keyword\">in\u003C/span> on wg0 out on eth0 &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw route allow \u003Cspan class=\"hljs-keyword\">in\u003C/span> on eth0 out on wg0\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Открываем порты для Samba только внутри сети 10.10.10.0:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw allow from 10.10.10.0/24 to any port 445 &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw allow from 10.10.10.0/24 to any port 139\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Включаем и проверяем правильность настройки:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl start ufw &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw \u003Cspan class=\"hljs-built_in\">enable\u003C/span> &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw status verbose\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_05.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Результат настройки ufw\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_05.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"настройка-wireguard\"\n>Настройка Wireguard\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Протокол SMB/Samba предназначен только для локальных сетей. Если Вы откроете его порты наружу, сервер станет мишенью для взломщиков. Для защиты подключений мы настроили ufw и дополнительно будем использовать туннели через WireGuard.\u003Cbr>\nСоздаем директорию, в которой будем хранить ключи WG:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">cd\u003C/span> &amp;&amp; \u003Cspan class=\"hljs-built_in\">mkdir\u003C/span> wg &amp;&amp; \u003Cspan class=\"hljs-built_in\">cd\u003C/span> wg\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Зададим маску прав доступа по умолчанию для всех новых файлов и папок, создаваемых в текущей сессии:\u003Cbr>\n•\tТолько владелец сможет читать, писать и (для папок) выполнять (rwx------).\u003Cbr>\n•\tДля всех остальных — никаких прав.\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">umask\u003C/span> \u003Cspan class=\"hljs-number\">077\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Генерируем публичный и приватный ключи для WG:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>wg genkey | \u003Cspan class=\"hljs-type\">tee\u003C/span> server_private.key | \u003Cspan class=\"hljs-type\">wg\u003C/span> pubkey &gt; server_public.key\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">где\u003Cbr>\n•\tserver_private.key — приватный ключ сервера;\u003Cbr>\n•\tserver_public.key — публичный ключ сервера, который будет использоваться клиентами.\u003Cbr>\nСоздаем файл конфигурации WireGuard сервера:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/wireguard/wg0.conf\u003C/code>\u003C/pre>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-section\">[Interface]\u003C/span>\n\u003Cspan class=\"hljs-attr\">Address\u003C/span> = \u003Cspan class=\"hljs-number\">10.10\u003C/span>.\u003Cspan class=\"hljs-number\">10.1\u003C/span>/\u003Cspan class=\"hljs-number\">24\u003C/span>\n\u003Cspan class=\"hljs-attr\">ListenPort\u003C/span> = \u003Cspan class=\"hljs-number\">51820\u003C/span>\n\u003Cspan class=\"hljs-attr\">PrivateKey\u003C/span> = \n\u003Cspan class=\"hljs-attr\">SaveConfig\u003C/span> = \u003Cspan class=\"hljs-literal\">true\u003C/span>\n\n\u003Cspan class=\"hljs-attr\">PostUp\u003C/span> = ufw route allow in \u003Cspan class=\"hljs-literal\">on\u003C/span> wg0 out \u003Cspan class=\"hljs-literal\">on\u003C/span> eth0\n\u003Cspan class=\"hljs-attr\">PostUp\u003C/span> = iptables -A FORWARD -i wg0 -j ACCEPT\n\u003Cspan class=\"hljs-attr\">PostUp\u003C/span> = iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n\u003Cspan class=\"hljs-attr\">PostDown\u003C/span> = ufw route delete allow in \u003Cspan class=\"hljs-literal\">on\u003C/span> wg0 out \u003Cspan class=\"hljs-literal\">on\u003C/span> eth0\n\u003Cspan class=\"hljs-attr\">PostDown\u003C/span> = iptables -D FORWARD -i wg0 -j ACCEPT\n\u003Cspan class=\"hljs-attr\">PostDown\u003C/span> = iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Вставляем содержимое server_private.key в конфиг:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> sed -i \u003Cspan class=\"hljs-string\">&quot;s|^PrivateKey *=.*|PrivateKey = \u003Cspan class=\"hljs-subst\">$(cat ~/wg/server_private.key)\u003C/span>|&quot;\u003C/span> /etc/wireguard/wg0.conf\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Результат на скриншоте:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_06.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Результат настройки /etc/wireguard/wg0.conf\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_06.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создадим ключ для сотрудника:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>wg genkey | \u003Cspan class=\"hljs-type\">tee\u003C/span> client1_private.key | \u003Cspan class=\"hljs-type\">wg\u003C/span> pubkey &gt; client1_public.key\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Добавим клиента в серверный конфиг. Открываем файл:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/wireguard/wg0.conf\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Вставим в конфиг строчки:\u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Замените \u003CСодержимое client1_public.key> на ключ из client1_public.key\u003C/p>\n\u003C/blockquote>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-section\">[Peer]\u003C/span>\n\u003Cspan class=\"hljs-attr\">PublicKey\u003C/span> = &lt;Содержимое client1_public.key&gt;\n\u003Cspan class=\"hljs-attr\">AllowedIPs\u003C/span> = \u003Cspan class=\"hljs-number\">10.10\u003C/span>.\u003Cspan class=\"hljs-number\">10.2\u003C/span>/\u003Cspan class=\"hljs-number\">32\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_07.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"добавляем peer в /etc/wireguard/wg0.conf\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_07.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Включаем wireguard и интерфейс wg0:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl start wg-quick@wg0 &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl \u003Cspan class=\"hljs-built_in\">enable\u003C/span> wg-quick@wg0 &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl status wg-quick@wg0\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_08.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"включаем wireguard\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_08.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создадим клиентский конфиг:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">nano\u003C/span> client1.conf\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Вставьте в него конфигурацию:\u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Замените \u003CСодержимое client1_private.key> на Ваши данные\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Замените \u003CСодержимое server_public.key> на Ваши данные\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp class=\"mt-2 mb-2 text-md\">Замените \u003CВнешний\u003Cem>IP\u003C/em>Сервера> на Ваш IP-адрес\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для каждого следующего клиента изменяйте параметры Address и client1_private.key\u003C/p>\n\u003C/blockquote>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-section\">[Interface]\u003C/span>\n\u003Cspan class=\"hljs-attr\">PrivateKey\u003C/span> = &lt;Содержимое client1_private.key&gt;\n\u003Cspan class=\"hljs-attr\">Address\u003C/span> = \u003Cspan class=\"hljs-number\">10.10\u003C/span>.\u003Cspan class=\"hljs-number\">10.2\u003C/span>/\u003Cspan class=\"hljs-number\">32\u003C/span>\n\u003Cspan class=\"hljs-attr\">DNS\u003C/span> = \u003Cspan class=\"hljs-number\">8.8\u003C/span>.\u003Cspan class=\"hljs-number\">8.8\u003C/span>\n\n\u003Cspan class=\"hljs-section\">[Peer]\u003C/span>\n\u003Cspan class=\"hljs-attr\">PublicKey\u003C/span> = &lt;Содержимое server_public.key&gt;\n\u003Cspan class=\"hljs-attr\">Endpoint\u003C/span> = &lt;Внешний_IP_Сервера&gt;:\u003Cspan class=\"hljs-number\">51820\u003C/span>\n\u003Cspan class=\"hljs-attr\">AllowedIPs\u003C/span> = \u003Cspan class=\"hljs-number\">10.10\u003C/span>.\u003Cspan class=\"hljs-number\">10.0\u003C/span>/\u003Cspan class=\"hljs-number\">24\u003C/span>\n\u003Cspan class=\"hljs-attr\">PersistentKeepalive\u003C/span> = \u003Cspan class=\"hljs-number\">25\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_09.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"клиентский конфиг wireguard\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_09.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>На клиентской машине в командной строке вводим команду копирования через scp:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>scp &lt;имя пользователя&gt;@&lt;\u003Cspan class=\"hljs-variable constant_\">IP\u003C/span>-адрес сервера&gt;\u003Cspan class=\"hljs-symbol\">:/home/&lt;\u003C/span>имя пользователя&gt; &gt;\u003Cspan class=\"hljs-regexp\">/wg/client\u003C/span>1.conf \u003Cspan class=\"hljs-symbol\">C:\u003C/span>\\\u003Cspan class=\"hljs-title class_\">Users\u003C/span>\\&lt;имя пользователя&gt;\\\u003Cspan class=\"hljs-title class_\">Downloads\u003C/span>\\\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Пример:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>scp jetcry\u003Cspan class=\"hljs-variable\">@46\u003C/span>.\u003Cspan class=\"hljs-number\">8.229\u003C/span>.\u003Cspan class=\"hljs-number\">3\u003C/span>\u003Cspan class=\"hljs-symbol\">:/home/jetcry/wg/client1\u003C/span>.conf \u003Cspan class=\"hljs-symbol\">C:\u003C/span>\\\u003Cspan class=\"hljs-title class_\">Users\u003C/span>\\jetcry\\\u003Cspan class=\"hljs-title class_\">Downloads\u003C/span>\\\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">На компьютере клиента устанавливаем  \u003Ca   href=\"https://www.wireguard.com/install/\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>Wireguard\u003C/a>.\u003Cbr>\nЗапускаем приложение, нажимаем «Добавить туннель». Выбираем сохраненный конфиг, затем – «Подключить».\u003Cbr>\nРезультат:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_10.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"wireguard на клиенте\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_10.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"установка-и-первоначальная-настройка-samba\"\n>Установка и первоначальная настройка Samba\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Установим Samba на сервер:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install smbclient samba samba-common-bin acl -y\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверим версию:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>smbd \u003Cspan class=\"hljs-comment\">--version\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Результат:\u003Cbr>\n\u003Cem>Version 4.19.5-Ubuntu\u003C/em>\u003Cbr>\nПокажем логику настройки сервера на примере создания пользователя admin и группы admins.\u003Cbr>\nПеред настройкой создадим backup конфигурации Samba:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">cp\u003C/span> /etc/samba/smb.conf /etc/samba/smb.conf.backup\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Создадим общую для всех группу common и директорию для нее:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> groupadd common\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">mkdir\u003C/span> -p /srv/samba/common\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chown\u003C/span> -R root:common /srv/samba/common\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> 2775 /srv/samba/common\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> find /srv/samba/common -\u003Cspan class=\"hljs-built_in\">type\u003C/span> d -\u003Cspan class=\"hljs-built_in\">exec\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> 2775 {} \\;\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> find /srv/samba/common -\u003Cspan class=\"hljs-built_in\">type\u003C/span> f -\u003Cspan class=\"hljs-built_in\">exec\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> 0664 {} \\;\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создаем группу администраторов:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> groupadd admins\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создаем пользователя admin без домашней директории:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> useradd -M -s /usr/sbin/nologin admin\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Добавим пользователя в группу admins:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> usermod -aG admins admin\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Установим пароль Samba для пользователя:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> smbpasswd -a admin\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Включим пользователя в samba:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> smbpasswd -e admin \u003Cspan class=\"hljs-comment\"># \u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создаем личную папку пользователя на Samba\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">mkdir\u003C/span> -p /srv/samba/personal/admin\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chown\u003C/span> admin:admins /srv/samba/personal/admin\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> 700 /srv/samba/personal/admin\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>здесь 700 — сам пользователь admin имеет полный доступ.\u003Cbr>\nСоздадим директорию для группы:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">mkdir\u003C/span> -p /srv/samba/admins\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chown\u003C/span> root:admins /srv/samba/admins\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> 2770 /srv/samba/admins\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> setfacl -m g:admins:rwx /srv/samba/admins\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> setfacl -d -m g:admins:rwx /srv/samba/admins\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">где\u003Cbr>\n•\tchown root:admins — владелец root, группа-владелец admins;\u003Cbr>\n•\tchmod 2770: 2 — новые файлы/папки будут принадлежать группе admins; 770 —  только владелец и группа могут читать/писать/заходить, остальные — нет.\u003Cbr>\n•\tsetfacl -m g:admins:rwx — ACL даёт группе admins полный доступ;\u003Cbr>\n•\tsetfacl -d … — то же самое, но по умолчанию для новых файлов/папок внутри.\u003Cbr>\nПроверяем: \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">id\u003C/span> admin\n\u003Cspan class=\"hljs-built_in\">ls\u003C/span> -ld /srv/samba/personal/admin\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> pdbedit -L | grep admin\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Результат:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_11.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка пользователя admin\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_11.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Откроем файл с текущей конфигурацией Samba:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/samba/smb.conf\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Добавляем в раздел \u003Cstrong>[global]\u003C/strong> в начале файла\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>   \u003Cspan class=\"hljs-comment\"># Безопасность\u003C/span>\n   \u003Cspan class=\"hljs-attribute\">hosts\u003C/span> \u003Cspan class=\"hljs-literal\">allow\u003C/span> = \u003Cspan class=\"hljs-number\">127.0.0.1\u003C/span> \u003Cspan class=\"hljs-number\">10.10.10.0\u003C/span>/\u003Cspan class=\"hljs-number\">24\u003C/span>\n   \u003Cspan class=\"hljs-attribute\">hosts\u003C/span> \u003Cspan class=\"hljs-literal\">deny\u003C/span> = \u003Cspan class=\"hljs-literal\">ALL\u003C/span>\n   \u003Cspan class=\"hljs-attribute\">smb\u003C/span> ports = \u003Cspan class=\"hljs-number\">445\u003C/span>\n   \u003Cspan class=\"hljs-attribute\">min\u003C/span> protocol = SMB2\n   \u003Cspan class=\"hljs-attribute\">client\u003C/span> min protocol = SMB2\n   \u003Cspan class=\"hljs-attribute\">ntlm\u003C/span> auth = no\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">В конец файла добавим разделы для групп:\u003Cbr>\n•\tобщая (common)\u003Cbr>\n•\tс персональными данными (Personal)\u003Cbr>\n•\tдля пользователей admins (admins):\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>[common]\n   path = \u003Cspan class=\"hljs-regexp\">/srv/sam\u003C/span>ba/common\n   browsable = yes\n   \u003Cspan class=\"hljs-keyword\">read\u003C/span> only = \u003Cspan class=\"hljs-keyword\">no\u003C/span>\n   guest ok = \u003Cspan class=\"hljs-keyword\">no\u003C/span>\n   valid users = \u003Cspan class=\"hljs-variable\">@common\u003C/span>\n\n[Personal]\n   path = \u003Cspan class=\"hljs-regexp\">/srv/sam\u003C/span>ba/personal/\u003Cspan class=\"hljs-variable\">%U\u003C/span>\n   browsable = \u003Cspan class=\"hljs-keyword\">no\u003C/span>\n   \u003Cspan class=\"hljs-keyword\">read\u003C/span> only = \u003Cspan class=\"hljs-keyword\">no\u003C/span>\n   guest ok = \u003Cspan class=\"hljs-keyword\">no\u003C/span>\n   valid users = \u003Cspan class=\"hljs-variable\">%U\u003C/span>, \u003Cspan class=\"hljs-variable\">@admins\u003C/span>\n   create mask = \u003Cspan class=\"hljs-number\">0600\u003C/span>\n   directory mask = \u003Cspan class=\"hljs-number\">0700\u003C/span>\n   root preexec = \u003Cspan class=\"hljs-regexp\">/bin/m\u003C/span>kdir -p /srv/samba/personal/\u003Cspan class=\"hljs-variable\">%U\u003C/span>; \u003Cspan class=\"hljs-regexp\">/bin/\u003C/span>\u003Cspan class=\"hljs-keyword\">chown\u003C/span> \u003Cspan class=\"hljs-variable\">%U\u003C/span>:\u003Cspan class=\"hljs-variable\">%U\u003C/span> /srv/samba/personal/\u003Cspan class=\"hljs-variable\">%U\u003C/span>\n \n[admins]\n   path = \u003Cspan class=\"hljs-regexp\">/srv/sam\u003C/span>ba/admins\n   browsable = yes\n   \u003Cspan class=\"hljs-keyword\">read\u003C/span> only = \u003Cspan class=\"hljs-keyword\">no\u003C/span>\n   guest ok = \u003Cspan class=\"hljs-keyword\">no\u003C/span>\n   valid users = \u003Cspan class=\"hljs-variable\">@admins\u003C/span>\n   \u003Cspan class=\"hljs-keyword\">write\u003C/span> list = \u003Cspan class=\"hljs-variable\">@admins\u003C/span>\n   create mask = \u003Cspan class=\"hljs-number\">0664\u003C/span>\n   directory mask = \u003Cspan class=\"hljs-number\">2775\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_12.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"изменение /etc/samba/smb.conf\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_12.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перезапустим Samba:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart smbd\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проверим, что пользователь admin настроен корректно:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">smbclient\u003C/span> //\u003Cspan class=\"hljs-number\">10.10.10.1\u003C/span>/admins -U admin\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Вывод:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_13.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка пользователя admin\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_13.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"автоматическое-добавление-пользователей\"\n>Автоматическое добавление пользователей\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Теперь автоматизируем работу с помощью скрипта:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">cd\u003C/span> ~/wg/\u003C/code>\u003C/pre>\n\u003Cpre class=\"hljs\">\u003Ccode>nano add_samb\u003Cspan class=\"hljs-built_in\">a_user\u003C/span>.sh\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Вставляем скрипт:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-meta\">#!/bin/bash \u003C/span>\n\n\u003Cspan class=\"hljs-comment\"># Скрипт для добавления Samba-пользователя, группы, папки и раздела в smb.conf\u003C/span>\n\u003Cspan class=\"hljs-comment\"># В каждый раздел доступ имеют @&lt;group&gt; и @admins. На уровне ФС добавляется ACL для admins\u003C/span>\n\u003Cspan class=\"hljs-comment\"># Все пользователи автоматически добавляются в группу @common\u003C/span>\n\u003Cspan class=\"hljs-comment\"># Использование скрипта: ./add_samba_user.sh &lt;имя_пользователя&gt; &lt;группа&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-built_in\">set\u003C/span> -e\n\n\u003Cspan class=\"hljs-keyword\">if\u003C/span> [ \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$#\u003C/span>&quot;\u003C/span> -ne 2 ]; \u003Cspan class=\"hljs-keyword\">then\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;Использование: \u003Cspan class=\"hljs-variable\">$0\u003C/span> &lt;имя_пользователя&gt; &lt;группа&gt;&quot;\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">exit\u003C/span> 1\n\u003Cspan class=\"hljs-keyword\">fi\u003C/span>\n\nUSERNAME=\u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$1\u003C/span>&quot;\u003C/span>\nUSERGROUP_RAW=\u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$2\u003C/span>&quot;\u003C/span>\nUSERGROUP=$(\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERGROUP_RAW\u003C/span>&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">tr\u003C/span> -d \u003Cspan class=\"hljs-string\">&quot;&#x27;\\&quot;&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">tr\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;[:upper:]&#x27;\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;[:lower:]&#x27;\u003C/span> | xargs)\n\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;DEBUG: USERGROUP=[\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>]&quot;\u003C/span>\n\nSAMBA_BASE=\u003Cspan class=\"hljs-string\">&quot;/srv/samba&quot;\u003C/span>\nPERSONAL_BASE=\u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SAMBA_BASE\u003C/span>/personal&quot;\u003C/span>\nCOMMON_BASE=\u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SAMBA_BASE\u003C/span>/common&quot;\u003C/span>\nSMBCONF=\u003Cspan class=\"hljs-string\">&quot;/etc/samba/smb.conf&quot;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\"># --- Функция добавления секции в smb.conf ---\u003C/span>\n\u003Cspan class=\"hljs-function\">\u003Cspan class=\"hljs-title\">add_group_section_to_smbconf\u003C/span>\u003C/span>() {\n  \u003Cspan class=\"hljs-built_in\">local\u003C/span> groupname=\u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$1\u003C/span>&quot;\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">local\u003C/span> path=\u003Cspan class=\"hljs-string\">&quot;/srv/samba/\u003Cspan class=\"hljs-variable\">$groupname\u003C/span>&quot;\u003C/span>\n\n  \u003Cspan class=\"hljs-keyword\">if\u003C/span> grep -q \u003Cspan class=\"hljs-string\">&quot;^\\[\u003Cspan class=\"hljs-variable\">$groupname\u003C/span>\\]&quot;\u003C/span> \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span>&quot;\u003C/span>; \u003Cspan class=\"hljs-keyword\">then\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;ℹ️ Раздел [\u003Cspan class=\"hljs-variable\">$groupname\u003C/span>] уже есть в \u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span>&quot;\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">return\u003C/span>\n  \u003Cspan class=\"hljs-keyword\">fi\u003C/span>\n\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">tee\u003C/span> -a \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span>&quot;\u003C/span> &gt;/dev/null\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;[\u003Cspan class=\"hljs-variable\">$groupname\u003C/span>]&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">tee\u003C/span> -a \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span>&quot;\u003C/span> &gt;/dev/null\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;   path = \u003Cspan class=\"hljs-variable\">$path\u003C/span>&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">tee\u003C/span> -a \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span>&quot;\u003C/span> &gt;/dev/null\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;   browsable = yes&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">tee\u003C/span> -a \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span>&quot;\u003C/span> &gt;/dev/null\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;   read only = no&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">tee\u003C/span> -a \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span>&quot;\u003C/span> &gt;/dev/null\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;   guest ok = no&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">tee\u003C/span> -a \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span>&quot;\u003C/span> &gt;/dev/null\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;   valid users = @\u003Cspan class=\"hljs-variable\">$groupname\u003C/span>, @admins&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">tee\u003C/span> -a \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span>&quot;\u003C/span> &gt;/dev/null\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;   write list = @\u003Cspan class=\"hljs-variable\">$groupname\u003C/span>, @admins&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">tee\u003C/span> -a \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span>&quot;\u003C/span> &gt;/dev/null\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;   create mask = 0664&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">tee\u003C/span> -a \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span>&quot;\u003C/span> &gt;/dev/null\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;   directory mask = 2775&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">tee\u003C/span> -a \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span>&quot;\u003C/span> &gt;/dev/null\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;✅ Раздел [\u003Cspan class=\"hljs-variable\">$groupname\u003C/span>] добавлен в \u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span>&quot;\u003C/span>\n}\n\n\u003Cspan class=\"hljs-comment\"># --- Создание папок для common и personal ---\u003C/span>\n\u003Cspan class=\"hljs-keyword\">function\u003C/span> \u003Cspan class=\"hljs-function\">\u003Cspan class=\"hljs-title\">make_shared_dir\u003C/span>\u003C/span>() {\n  DIR=\u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$1\u003C/span>&quot;\u003C/span>\n  OWNER=\u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$2\u003C/span>&quot;\u003C/span>\n  DIRGRP=\u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$3\u003C/span>&quot;\u003C/span>\n  MODE=\u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$4\u003C/span>&quot;\u003C/span>\n  \u003Cspan class=\"hljs-keyword\">if\u003C/span> [ ! -d \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$DIR\u003C/span>&quot;\u003C/span> ]; \u003Cspan class=\"hljs-keyword\">then\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">mkdir\u003C/span> -p \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$DIR\u003C/span>&quot;\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chown\u003C/span> \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$OWNER\u003C/span>:\u003Cspan class=\"hljs-variable\">$DIRGRP\u003C/span>&quot;\u003C/span> \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$DIR\u003C/span>&quot;\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$MODE\u003C/span>&quot;\u003C/span> \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$DIR\u003C/span>&quot;\u003C/span>\n    \u003Cspan class=\"hljs-comment\"># Даем группе admins полный доступ через ACL (и наследование на новые файлы)\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> setfacl -m g:admins:rwx \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$DIR\u003C/span>&quot;\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> setfacl -d -m g:admins:rwx \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$DIR\u003C/span>&quot;\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;✅ Каталог \u003Cspan class=\"hljs-variable\">$DIR\u003C/span> создан с владельцем \u003Cspan class=\"hljs-variable\">$OWNER\u003C/span>:\u003Cspan class=\"hljs-variable\">$DIRGRP\u003C/span>, правами \u003Cspan class=\"hljs-variable\">$MODE\u003C/span> и доступом для группы admins (ACL)&quot;\u003C/span>\n  \u003Cspan class=\"hljs-keyword\">else\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;ℹ️ Каталог \u003Cspan class=\"hljs-variable\">$DIR\u003C/span> уже существует&quot;\u003C/span>\n    \u003Cspan class=\"hljs-comment\"># Обновим права admins на всякий случай\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> setfacl -m g:admins:rwx \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$DIR\u003C/span>&quot;\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> setfacl -d -m g:admins:rwx \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$DIR\u003C/span>&quot;\u003C/span>\n  \u003Cspan class=\"hljs-keyword\">fi\u003C/span>\n}\n\nmake_shared_dir \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$COMMON_BASE\u003C/span>&quot;\u003C/span> root common 2775\nmake_shared_dir \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$PERSONAL_BASE\u003C/span>&quot;\u003C/span> root root 0771\n\n\u003Cspan class=\"hljs-comment\"># --- Для любой группы, кроме &quot;common&quot;, создаём группу, папку, и секцию в smb.conf ---\u003C/span>\n\u003Cspan class=\"hljs-keyword\">if\u003C/span> [ -n \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>&quot;\u003C/span> ] &amp;&amp; [ \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>&quot;\u003C/span> != \u003Cspan class=\"hljs-string\">&quot;common&quot;\u003C/span> ]; \u003Cspan class=\"hljs-keyword\">then\u003C/span>\n  \u003Cspan class=\"hljs-keyword\">if\u003C/span> ! getent group \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>&quot;\u003C/span> &gt; /dev/null; \u003Cspan class=\"hljs-keyword\">then\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> groupadd \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>&quot;\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;✅ Группа \u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span> создана.&quot;\u003C/span>\n  \u003Cspan class=\"hljs-keyword\">fi\u003C/span>\n  \u003Cspan class=\"hljs-comment\"># Создать группу admins, если её нет (один раз)\u003C/span>\n  \u003Cspan class=\"hljs-keyword\">if\u003C/span> ! getent group admins &gt; /dev/null; \u003Cspan class=\"hljs-keyword\">then\u003C/span>\n    \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> groupadd admins\n    \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;✅ Группа admins создана.&quot;\u003C/span>\n  \u003Cspan class=\"hljs-keyword\">fi\u003C/span>\n  GROUP_DIR=\u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$SAMBA_BASE\u003C/span>/\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>&quot;\u003C/span>\n  make_shared_dir \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$GROUP_DIR\u003C/span>&quot;\u003C/span> root \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>&quot;\u003C/span> 2770\n  add_group_section_to_smbconf \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>&quot;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">fi\u003C/span>\n\n\u003Cspan class=\"hljs-comment\"># --- Проверка что группа common существует ---\u003C/span>\n\u003Cspan class=\"hljs-keyword\">if\u003C/span> ! getent group common &gt; /dev/null; \u003Cspan class=\"hljs-keyword\">then\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> groupadd common\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;✅ Группа common создана.&quot;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">fi\u003C/span>\n\n\u003Cspan class=\"hljs-comment\"># --- Создание пользователя ---\u003C/span>\n\u003Cspan class=\"hljs-keyword\">if\u003C/span> \u003Cspan class=\"hljs-built_in\">id\u003C/span> \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span>&quot;\u003C/span> &amp;&gt;/dev/null; \u003Cspan class=\"hljs-keyword\">then\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;ℹ️ Пользователь \u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span> уже существует.&quot;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">else\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> useradd -M -U -s /usr/sbin/nologin \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span>&quot;\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">sleep\u003C/span> 2\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;✅ Системный пользователь \u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span> создан с персональной группой.&quot;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">fi\u003C/span>\n\n\u003Cspan class=\"hljs-comment\"># --- Добавление пользователя в группы ---\u003C/span>\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;DEBUG перед usermod: USERGROUP=[\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>]&quot;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\"># Добавляем пользователя в указанную группу (кроме &quot;common&quot;), если надо\u003C/span>\n\u003Cspan class=\"hljs-keyword\">if\u003C/span> [ -n \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>&quot;\u003C/span> ] &amp;&amp; [ \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>&quot;\u003C/span> != \u003Cspan class=\"hljs-string\">&quot;common&quot;\u003C/span> ]; \u003Cspan class=\"hljs-keyword\">then\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">sleep\u003C/span> 1\n  \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> usermod -aG \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>&quot;\u003C/span> \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span>&quot;\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;✅ Пользователь \u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span> добавлен в группу \u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>.&quot;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">else\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;ℹ️ Пользователь без отдельной групповой папки (общий доступ).&quot;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">fi\u003C/span>\n\n\u003Cspan class=\"hljs-comment\"># --- Всегда добавляем пользователя в группу common ---\u003C/span>\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> usermod -aG common \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span>&quot;\u003C/span>\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;✅ Пользователь \u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span> добавлен в группу common (общая папка).&quot;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\"># --- Персональная директория пользователя ---\u003C/span>\nUSER_DIR=\u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$PERSONAL_BASE\u003C/span>/\u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span>&quot;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">if\u003C/span> [ ! -d \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USER_DIR\u003C/span>&quot;\u003C/span> ]; \u003Cspan class=\"hljs-keyword\">then\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">mkdir\u003C/span> -p \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USER_DIR\u003C/span>&quot;\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chown\u003C/span> \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span>:\u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span>&quot;\u003C/span> \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USER_DIR\u003C/span>&quot;\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> 700 \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USER_DIR\u003C/span>&quot;\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;✅ Персональная директория \u003Cspan class=\"hljs-variable\">$USER_DIR\u003C/span> создана.&quot;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">else\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;ℹ️ Директория \u003Cspan class=\"hljs-variable\">$USER_DIR\u003C/span> уже существует.&quot;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">fi\u003C/span>\n\n\u003Cspan class=\"hljs-comment\"># --- Samba ---\u003C/span>\nPASSWORD=$(&lt; /dev/urandom \u003Cspan class=\"hljs-built_in\">tr\u003C/span> -dc \u003Cspan class=\"hljs-string\">&#x27;A-Za-z0-9!@#$%&amp;_+=&#x27;\u003C/span> | \u003Cspan class=\"hljs-built_in\">head\u003C/span> -c 10)\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> -e \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$PASSWORD\u003C/span>\\n\u003Cspan class=\"hljs-variable\">$PASSWORD\u003C/span>&quot;\u003C/span> | \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> smbpasswd -a \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span>&quot;\u003C/span>\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> smbpasswd -e \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span>&quot;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\"># --- Перезапуск Samba ---\u003C/span>\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;♻️ Перезапуск Samba (smbd)...&quot;\u003C/span>\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart smbd\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;✅ Samba перезапущена.&quot;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\"># --- Итоговый вывод ---\u003C/span>\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;==============================&quot;\u003C/span>\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;✅ Пользователь \u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span> успешно создан!&quot;\u003C/span>\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;🔐 Логин: \u003Cspan class=\"hljs-variable\">$USERNAME\u003C/span>&quot;\u003C/span>\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;🔐 Пароль: \u003Cspan class=\"hljs-variable\">$PASSWORD\u003C/span>&quot;\u003C/span>\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;🏠 Личная папка: \u003Cspan class=\"hljs-variable\">$USER_DIR\u003C/span>&quot;\u003C/span>\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;🗂️ Общая папка: \u003Cspan class=\"hljs-variable\">$COMMON_BASE\u003C/span>&quot;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">if\u003C/span> [ \u003Cspan class=\"hljs-string\">&quot;\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>&quot;\u003C/span> != \u003Cspan class=\"hljs-string\">&quot;common&quot;\u003C/span> ]; \u003Cspan class=\"hljs-keyword\">then\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;🗂️ Групповая папка: \u003Cspan class=\"hljs-variable\">$SAMBA_BASE\u003C/span>/\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>&quot;\u003C/span>\n  \u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;🛡️ Раздел [\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>] добавлен в \u003Cspan class=\"hljs-variable\">$SMBCONF\u003C/span> (valid users = @\u003Cspan class=\"hljs-variable\">$USERGROUP\u003C/span>, @admins)&quot;\u003C/span>\n\u003Cspan class=\"hljs-keyword\">fi\u003C/span>\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;🗂️ Доступ к папке common есть у всех пользователей (группа common)&quot;\u003C/span>\n\u003Cspan class=\"hljs-built_in\">echo\u003C/span> \u003Cspan class=\"hljs-string\">&quot;==============================&quot;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Делаем скрипт исполняемым:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>chmod +x add_samb\u003Cspan class=\"hljs-built_in\">a_user\u003C/span>.sh\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Результат создания пользователя admin1, который входит в группу admins:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ./add_samba_user.sh admin1 admins\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_14.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Результат создания пользователя admin1\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_14.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Создадим пользователя ivan, который относится к отделу it:\nsudo ./add_samba_user.sh ivan it\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_15.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Результат создания пользователя ivan\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_15.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверяем правильность работы скрипта.\nПользователь admin1 имеет доступ ко всем ресурсам:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">smbclient\u003C/span> //\u003Cspan class=\"hljs-number\">10.10.10.1\u003C/span>/admins -U admin1\nsmbclient //\u003Cspan class=\"hljs-number\">10.10.10.1\u003C/span>/common -U admin1\nsmbclient //\u003Cspan class=\"hljs-number\">10.10.10.1\u003C/span>/personal -U admin1\nsmbclient //\u003Cspan class=\"hljs-number\">10.10.10.1\u003C/span>/it -U admin1\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_16.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Пользователь admin1 имеет доступ ко всем ресурсам\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_16.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Пользователь ivan имеет доступ к common, it, personal. К директории admins пользователю ivan нет доступа:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">smbclient\u003C/span> //\u003Cspan class=\"hljs-number\">10.10.10.1\u003C/span>/common -U ivan\nsmbclient //\u003Cspan class=\"hljs-number\">10.10.10.1\u003C/span>/it -U ivan\nsmbclient //\u003Cspan class=\"hljs-number\">10.10.10.1\u003C/span>/personal -U ivan\nsmbclient //\u003Cspan class=\"hljs-number\">10.10.10.1\u003C/span>/admins -U ivan\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_17.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Пользователь admin1 имеет доступ ко всем ресурсам\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_17.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверим доступность сервера с компьютера клиента.\u003Cbr>\nДля этого заходим в Проводник, «Мой компьютер» – «Подключить сетевой диск».\u003Cbr>\nУказываем IP-адрес сервера Samba.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_18.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Подключение к Samba с клиента\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_18.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>При подключении вводим логин пользователя admin и его пароль:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_19.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Ввод данных пользователя\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_19.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проверим, что пользователь admin может зайти в другие директории и создать там файлы:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_20.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Проверка корректности настройки пользователя admin\"\n                            src=\"/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_20.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"краткие-итоги\"\n>Краткие итоги\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Мы настроили сервер Samba на HostVDS.com. Для защиты корпоративной сети создали туннель WireGuard и настроили ufw. Затем добавили пользователей и директории, указали нужные права. После этого с помощью скрипта мы автоматизировали процесс работы с Samba. Проверили корректность настроек с удаленного клиента.\u003C/p>\n","В статье рассмотрим установку Samba на Ubuntu 24.04. Настроим сервер, обеспечим защиту корпоративной сети с помощью ufw и создания туннели wireguard. Затем покажем логику настройки пользователей и директорий на сервере Samba. После этого автоматизируем работу с помощью скрипта. Проверим корректность его выполнения на сервере и через подключение с клиентского компьютера.","/topics/installing-the-server-software/how-to-install-samba-on-ubuntu/static/ru_image_00.webp",[208,211,212,215,218,221],{"title":209,"level":41,"id":210},"Создание сервера","создание-сервера",{"title":175,"level":41,"id":176},{"title":213,"level":41,"id":214},"Настройка Wireguard","настройка-wireguard",{"title":216,"level":41,"id":217},"Установка и первоначальная настройка Samba","установка-и-первоначальная-настройка-samba",{"title":219,"level":41,"id":220},"Автоматическое добавление пользователей","автоматическое-добавление-пользователей",{"title":121,"level":41,"id":122},{"slug":223,"tags":224,"title":227,"content":228,"updatedAt":229,"markdown":230,"description":231,"cover":232,"tableOfContents":233},"how-to-install-phpmyadmin-on-ubuntu-server",[225,132,130,97,22,65,226],"phpmyadmin","ssl","Как установить phpMyAdmin на Ubuntu 24.04","\n# Как установить phpMyAdmin на Ubuntu 24.04\n\nВеб-приложение phpMyAdmin разрабатывается с открытым кодом и представляет собой веб-интерфейс для администрирования СУБД MySQL.\n\n## Установка mySQL\n\nПеред установкой и настройкой phpMyAdmin предварительно установим и настроим СУБД mySQL, если она еще не установлена на Ваш сервер.\nМы подробно расписывали установку и настройку СУБД mySQL в [этой статье](/databases/how-to-install-mysql-on-ubuntu-server), сейчас создадим только пользователя phpmyadmin, который по умолчанию будет работать с phpMyAdmin. \nУстановим и обновим все пакеты системы:\n\n```\nsudo apt update && sudo apt upgrade -y\n```\n\nУстановим mySQL:\n\n```\nsudo apt install mysql-server -y\n```\n\nЗапускаем СУБД:\n\n```\nsudo systemctl start mysql\n```\n\nУстанавливаем автоматический запуск после перезагрузки системы:\n\n```\nsudo systemctl enable mysql\n```\n\nЗащищаем нашу СУБД:\n\n```\nsudo mysql_secure_installation\n```\n\nРекомендуем согласиться со следующими параметрами:  \nУстановить утилиту для проверки надежности паролей validate password.  \nУстановим уровень 2 для максимальной сложности вводимых паролей.\n\n\u003Cp align=\"center\">\u003Cimg alt=\"validate password\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_01.png width=1024>\u003C/p>\n\nДалее предлагаем согласиться (нажать **Y**) со всеми пунктами:  \n•\tRemove anonymous users (Удалить анонимных пользователей)  \n•\tDisallow root login remotely (Запретить удаленный вход пользователя root)  \n•\tRemove the test database (Удалить тестовую базу данных)  \n•\tReload privilege tables (Перезагрузить таблицы привилегий)\n\nПереходим в mySQL:\n\n```\nsudo mysql\n```\n\nСоздаем пользователя phpmyadmin и задаем ему пароль Pmy@dm1n:\n\n```\nCREATE USER 'phpmyadmin'@'localhost' IDENTIFIED WITH 'caching_sha2_password' BY 'Pmy@dm1n';\n```\n\nРазрешаем ему выполнение всех операций:\n\n```\nGRANT ALL PRIVILEGES ON phpmyadmin.* TO 'phpmyadmin'@'localhost' WITH GRANT OPTION;\n```\n\nПрименяем изменений привилегий:\n\n```\nFLUSH PRIVILEGES;\n```\n\nПроверяем, что пользователь добавлен:\n\n```\nSELECT user,authentication_string,plugin,host FROM mysql.user;\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"пользователь phpmyadmin в mysql\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_02.png width=1024>\u003C/p>\n\nВыходим из mySQL:\n\n```\nExit\n```\n\n## Установка Apache\n\nДля корректной работы phpMyAdmin необходим веб-сервер. Мы будем использовать Apache. Установка Apache выполняется следующей командой:\n\n```\nsudo apt install apache2 -y\n```\n\nПосле установки следует убедиться в корректном запуске службы Apache:\n\n```\nsudo systemctl status apache2\n```\n\nВывод этой команды должен содержать строку active (running), что свидетельствует о работоспособности веб-сервера. Вы можете увидеть вот такую ошибку:\n\u003Cp align=\"center\">\u003Cimg alt=\"ошибка apache\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_03.png width=1024>\u003C/p>\n\nВ этом случае проверяем, кто использует порт http (80):\n\n```\nsudo ss -tap | grep http\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"проверяем порт 80\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_04.png width=1024>\u003C/p>\n\nСкорее всего это будет сервер nginx, как в моем варианте. Останавливаем его:\n\n```\nsudo systemctl stop nginx\n```\n\nМаскируем процесс, чтобы при перезагрузке системы не было конфликта.\n\n```\nsudo systemctl mask nginx\n```\n\nЗапускаем Apache:\n\n```\nsudo systemctl start apache2\n```\n\nПроверяем его статус:\n\n```\nsudo systemctl status apache2\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"проверяем статус apache\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_05.png width=1024>\u003C/p>\n\nДобавляем его в автоматический запуск при перезагрузке системы:\n\n```\nsudo systemctl enable apache2\n```\n\n## Установка php\n\nУстановим набор модулей для работы php:\n\n```\nsudo apt install php libapache2-mod-php php-mysql php-mbstring php-zip php-gd php-json php-curl -y\n```\n\nЭтот набор модулей обеспечивает поддержку основного функционала phpMyAdmin:  \n•\tphp: базовый пакет PHP.  \n•\tlibapache2-mod-php: пакет интегрирует PHP с Apache.  \n•\tphp-mysql: пакет позволяет PHP взаимодействовать с MySQL.  \n•\tmbstring, zip, gd, json, curl: расширение функционала (пакеты обработки json, работы с многобайтовыми строками, архивами, изображениями).\n\nПроверяем, что php работает корректно. Для этого создаем файл\n\n```\nsudo nano /var/www/html/info.php\n```\n\nДобавим в файл следующие строки:\n\n```\n\u003C?php\nphpinfo();\n?>\n```\n\nОткрываем страницу в браузере: http://your_server_ip/info.php  \nВместо your_server_ip указываете IP-адрес Вашего сервера или доменное имя. В моем случае 192.168.6.142.  \nПри корректной настройке Вы увидите следующий результат:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"php info\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_06.png width=1024>\u003C/p>\n\n## Установка phpMyAdmin\n\nУстановим сам phpMyAdmin:\n\n```\nsudo apt install phpmyadmin -y\n```\n\nВо время установки выберем сервер Apache.\n\n\u003Cp align=\"center\">\u003Cimg alt=\"выбор Apache\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_07.png width=1024>\u003C/p>\n\nНастроим базу данных для phpMyAdmin с помощью dbconfig-common. Выбираем “yes”.\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Настроим базу данных для phpMyAdmin с помощью dbconfig-common\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_08.png width=1024>\u003C/p>\n\nУказываем пароль для регистрации пользователя, который мы ввели при его создании в mySQL. **В моем случае: Pmy@dm1n**\n\n\u003Cp align=\"center\">\u003Cimg alt=\"устанавливаем пароль\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_09.png width=1024>\u003C/p>\n\nПодтверждаем пароль на следующем шаге.  \nУстановщик должен автоматически установить и настроить phpMyAdmin.\n\nВключим PHP-модуль mbstring для работы с многобайтовыми строками:\n\n```\nsudo phpenmod mbstring\n```\n\nПерезагружаем Apache для применения изменений:\n\n```\nsudo systemctl restart apache2\n```\n\nПроверяем корректность установки. В первую очередь нас интересует наличие символической ссылки в html-директории:\n\n```\nsudo ls /var/www/html/phpmyadmin\n```\n\nЕсли каталог не существует (ls: cannot access '/var/www/html/phpmyadmin': No such file or directory), то необходимо создать ссылку самостоятельно:\n\n```\nsudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin\n```\n\nДополнительно проверяем, что Apache подключил конфигурацию phpMyAdmin:\n\n```\nsudo ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf\n```\n\nЕсли ответа от системы нет, значит все верно.  \nВключаем конфигурационный файл Apache для phpMyAdmin, чтобы веб-сервер знал, как взаимодействовать с phpMyAdmin:\n\n```\nsudo a2enconf phpmyadmin\n```\n\nПерезагружаем Apache\n\n```\nsudo systemctl reload apache2\n```\n\nПроверяем статус Apache:\n\n```\nsudo systemctl status apache2\n```\n\nВ браузере переходим по адресу:  \nhttp://your_server_ip/phpmyadmin \n\n\u003Cp align=\"center\">\u003Cimg alt=\"открываем в браузере phpMyAdmin\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_10.png width=1024>\u003C/p>\n\nВводим имя пользователя phpmyadmin и пароль Pmy@dm1n.  \nПопадаем в рабочую область phpMyAdmin:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"рабочая область phpMyAdmin\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_11.png width=1024>\u003C/p>\n\nУстановка завершена.\n\n## Настройка базовой HTTP-аутентификации\n\nНастроим авторизацию до введения логина и пароля phpMyAdmin. Выполним ее с помощью базовой HTTP аутентификации (basic HTTP authentication).\nСоздаем файл .htaccess, который позволит управлять поведением Apache:\n\n```\nsudo nano /usr/share/phpmyadmin/.htaccess\n```\n\nСоздаем конфигурацию:\n\n```\nAuthType Basic \nAuthName \"Restricted Files\"\nAuthUserFile /etc/phpmyadmin/.htpasswd\nRequire valid-user\n```\n\nгде:  \n•\tAuthType Basic – тип аутентификации (Basic - простая HTTP-авторизация).  \n•\tAuthName \"Restricted Files\" – сообщение, отображаемое в диалоговом окне браузера при запросе логина и пароля.  \n•\tAuthUserFile /etc/phpmyadmin/.htpasswd – путь к файлу с логинами и хешами паролей.  \n•\tRequire valid-user – разрешить доступ только тем, кто прошел аутентификацию.\n\nСоздаем директорию для хранения файла паролей и сам файл с первым пользователем:\n\n```\nsudo mkdir -p /etc/phpmyadmin\n```\n\n```\nsudo htpasswd -c /etc/phpmyadmin/.htpasswd jetcry\n```\n\nгде:  \n•\t.htpasswd создаёт файл с логином jetcry и запрашивает пароль.  \n•\tОпция **-c** означает \"создать новый файл\".\n\nВ файл запишется хэш пароля, а не сам пароль в открытом виде.\n\n> Если Вы добавляете второго пользователя — не используйте **-c**, иначе файл перезапишется!\n\n\u003Cp align=\"center\">\u003Cimg alt=\"файл с паролями\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_12.png width=1024>\u003C/p>\n\nТеперь необходимо настроить Apache на чтение файлов .htaccess:\n\n```\nsudo nano /etc/apache2/conf-available/phpmyadmin.conf\n```\n\nВ блоке \u003CDirectory /usr/share/phpmyadmin> добавьте или измените строку:\n\n```\nAllowOverride All\n```\n\nДиректива AllowOverride All позволяет файлам .htaccess переопределять директивы конфигурации Apache в указанной директории.\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Директива AllowOverride All\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_13.png width=1024>\u003C/p>\n\nПроверим конфигурацию Apache на ошибки:\n\n```\nsudo apachectl configtest\n```\n\nЕсли все правильно, то ответ:\n**Syntax OK**\n\nПерезапускаем Apache:\n\n```\nsudo systemctl restart apache2\n```\n\nОткрываем браузер. Теперь браузер показывает окно авторизации:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"браузер показывает окно авторизации\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_14.png width=1024>\u003C/p>\n\nЕсли не появилось окно с вводом пароля, дополнительно измените директивы AllowOverride с none на All в файле:\n\n```\nnano /etc/apache2/apache2.conf\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"измените директивы AllowOverride с none на All\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_15.png width=1024>\u003C/p>\n\nПерезапустите Apache:\n\n```\nsudo systemctl restart apache2\n```\n\n## Подключение к phpMyAdmin по HTTPS\n\nСначала активируем модуль SSL для Apache:\n\n```\nsudo a2enmod ssl\n```\n\n```\nsudo systemctl restart apache2\n```\n\nСгенерируем самоподписанный сертификат. Замените 192.168.6.142 на ваш IP или доменное имя:\n\n```\nsudo openssl req -x509 -nodes -days 365 \\\n-newkey rsa:2048 \\\n-keyout /etc/ssl/private/apache-selfsigned.key \\\n-out /etc/ssl/certs/apache-selfsigned.crt \\\n-subj \"/C=RU/ST=Region/L=City/O=MyOrg/CN=192.168.6.142\"\n```\n\nЕсли у Вас есть домен, то используйте бесплатный сертификат Let's Encrypt:\n\n```\nsudo apt install certbot python3-certbot-apache\nsudo certbot --apache\n```\n\n\nОтредактируем конфигурационный файл SSL:\n\n```\nsudo nano /etc/apache2/sites-available/default-ssl.conf\n```\n\nДобавьте в конфигурацию следующие строки: \n\n```\n\u003CIfModule mod_ssl.c>\n  \u003CVirtualHost _default *:443>\n    ServerAdmin webmaster@localhost\n    ServerName 192.168.6.142\n\n    DocumentRoot /var/www/html\n\n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/apache-selfsigned.crt\n    SSLCertificateKeyFile /etc/ssl/private/apache-selfsigned.key\n\n    \u003CDirectory /usr/share/phpmyadmin>\n        Options Indexes FollowSymLinks\n        DirectoryIndex index.php\n        AllowOverride All\n        Require all granted\n    \u003C/Directory>\n  \u003C/VirtualHost>\n\u003C/IfModule>\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"параметры в default-ssl.comf\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_16.png width=1024>\u003C/p>\n\nПродолжение:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"параметры в default-ssl.conf\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_17.png width=1024>\u003C/p>\n\nАктивируем созданную конфигурацию и перезапустим Apache:\n\n```\nsudo a2ensite default-ssl\n```\n\n```\nsudo systemctl restart apache2\n```\n\nНастроим редирект на автоматический переход на https.\nОткрываем файл, который обрабатывает запросы на порт 80:\n\n```\nsudo nano /etc/apache2/sites-available/000-default.conf\n```\n\nДобавляем редирект в блок \u003CVirtualHost *:80>:\n\n```\n    Redirect \"/phpmyadmin\" https://192.168.6.142/phpmyadmin\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"редирект на автоматический переход на https\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_18.png width=1024>\u003C/p>\n\nСохраняем изменения в файле. Проверяем конфигурацию и перезапускаем Apache:\n\n```\nsudo apachectl configtest\n```\n\n```\nsudo systemctl restart apache2\n```\n\nПроверяем. Вводим в браузере 192.168.6.142/phpmyadmin. Автоматически переходим на https:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"автоматический переход на https\" src=/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_19.png width=1024>\u003C/p>\n\nНастройка завершена. Подключение защищено.\n\n## Краткие итоги\n\nМы установили и настроили phpMyAdmin на сервере, предварительно установив другие компоненты стека LAMP: Apache, mySQL, PHP. Дополнительно защитили взаимодействие с СУБД с помощью SSL и авторизации в браузере до введения логина и пароля от СУБД.\n",["Date","2025-08-02T11:12:48.225Z"],"\n\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Веб-приложение phpMyAdmin разрабатывается с открытым кодом и представляет собой веб-интерфейс для администрирования СУБД MySQL.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"установка-mysql\"\n>Установка mySQL\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Перед установкой и настройкой phpMyAdmin предварительно установим и настроим СУБД mySQL, если она еще не установлена на Ваш сервер.\nМы подробно расписывали установку и настройку СУБД mySQL в \u003Ca   href=\"https://github.com/HostVDS-com/tutorials/blob/main/topics/databases/how-to-install-mysql-on-ubuntu-server/ru.md\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>этой статье\u003C/a>, сейчас создадим только пользователя phpmyadmin, который по умолчанию будет работать с phpMyAdmin.\nУстановим и обновим все пакеты системы:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt update &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt upgrade -y\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Установим mySQL:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install mysql-server -y\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Запускаем СУБД:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl start mysql\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Устанавливаем автоматический запуск после перезагрузки системы:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl \u003Cspan class=\"hljs-built_in\">enable\u003C/span> mysql\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Защищаем нашу СУБД:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> mysql_secure_installation\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Рекомендуем согласиться со следующими параметрами:\u003Cbr>\nУстановить утилиту для проверки надежности паролей validate password.\u003Cbr>\nУстановим уровень 2 для максимальной сложности вводимых паролей.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_01.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"validate password\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_01.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Далее предлагаем согласиться (нажать \u003Cstrong>Y\u003C/strong>) со всеми пунктами:\u003Cbr>\n•\tRemove anonymous users (Удалить анонимных пользователей)\u003Cbr>\n•\tDisallow root login remotely (Запретить удаленный вход пользователя root)\u003Cbr>\n•\tRemove the test database (Удалить тестовую базу данных)\u003Cbr>\n•\tReload privilege tables (Перезагрузить таблицы привилегий)\u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Переходим в mySQL:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> mysql\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Создаем пользователя phpmyadmin и задаем ему пароль Pmy@dm1n:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">CREATE\u003C/span> \u003Cspan class=\"hljs-keyword\">USER\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;phpmyadmin&#x27;\u003C/span>@\u003Cspan class=\"hljs-string\">&#x27;localhost&#x27;\u003C/span> IDENTIFIED \u003Cspan class=\"hljs-keyword\">WITH\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;caching_sha2_password&#x27;\u003C/span> \u003Cspan class=\"hljs-keyword\">BY\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Pmy@dm1n&#x27;\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Разрешаем ему выполнение всех операций:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">GRANT\u003C/span> \u003Cspan class=\"hljs-keyword\">ALL\u003C/span> \u003Cspan class=\"hljs-keyword\">PRIVILEGES\u003C/span> \u003Cspan class=\"hljs-keyword\">ON\u003C/span> phpmyadmin.* \u003Cspan class=\"hljs-keyword\">TO\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;phpmyadmin&#x27;\u003C/span>@\u003Cspan class=\"hljs-string\">&#x27;localhost&#x27;\u003C/span> \u003Cspan class=\"hljs-keyword\">WITH\u003C/span> \u003Cspan class=\"hljs-keyword\">GRANT\u003C/span> \u003Cspan class=\"hljs-keyword\">OPTION\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Применяем изменений привилегий:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>FLUSH PRIVILEGES\u003Cspan class=\"hljs-comment\">;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверяем, что пользователь добавлен:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">SELECT\u003C/span> \u003Cspan class=\"hljs-keyword\">user\u003C/span>,authentication_string,plugin,host \u003Cspan class=\"hljs-keyword\">FROM\u003C/span> mysql.\u003Cspan class=\"hljs-keyword\">user\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_02.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"пользователь phpmyadmin в mysql\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_02.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Выходим из mySQL:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">Exit\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"установка-apache\"\n>Установка Apache\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для корректной работы phpMyAdmin необходим веб-сервер. Мы будем использовать Apache. Установка Apache выполняется следующей командой:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install apache2 -y\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После установки следует убедиться в корректном запуске службы Apache:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl status apache2\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Вывод этой команды должен содержать строку active (running), что свидетельствует о работоспособности веб-сервера. Вы можете увидеть вот такую ошибку:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_03.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"ошибка apache\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_03.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В этом случае проверяем, кто использует порт http (80):\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ss -tap | grep http\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_04.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверяем порт 80\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_04.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Скорее всего это будет сервер nginx, как в моем варианте. Останавливаем его:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl stop nginx\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Маскируем процесс, чтобы при перезагрузке системы не было конфликта.\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl mask nginx\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Запускаем Apache:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl start apache2\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверяем его статус:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl status apache2\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_05.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверяем статус apache\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_05.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Добавляем его в автоматический запуск при перезагрузке системы:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl \u003Cspan class=\"hljs-built_in\">enable\u003C/span> apache2\u003C/code>\u003C/pre>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"установка-php\"\n>Установка php\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Установим набор модулей для работы php:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install php libapache2-mod-php php-mysql php-mbstring php-zip php-gd php-json php-curl -y\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Этот набор модулей обеспечивает поддержку основного функционала phpMyAdmin:\u003Cbr>\n•\tphp: базовый пакет PHP.\u003Cbr>\n•\tlibapache2-mod-php: пакет интегрирует PHP с Apache.\u003Cbr>\n•\tphp-mysql: пакет позволяет PHP взаимодействовать с MySQL.\u003Cbr>\n•\tmbstring, zip, gd, json, curl: расширение функционала (пакеты обработки json, работы с многобайтовыми строками, архивами, изображениями).\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проверяем, что php работает корректно. Для этого создаем файл\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /var/www/html/info.php\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Добавим в файл следующие строки:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-meta\">&lt;?php\u003C/span>\n\u003Cspan class=\"hljs-title function_ invoke__\">phpinfo\u003C/span>();\n\u003Cspan class=\"hljs-meta\">?&gt;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Открываем страницу в браузере: http://your_server_ip/info.php\u003Cbr>\nВместо your_server_ip указываете IP-адрес Вашего сервера или доменное имя. В моем случае 192.168.6.142.\u003Cbr>\nПри корректной настройке Вы увидите следующий результат:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_06.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"php info\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_06.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"установка-phpmyadmin\"\n>Установка phpMyAdmin\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Установим сам phpMyAdmin:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install phpmyadmin -y\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Во время установки выберем сервер Apache.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_07.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"выбор Apache\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_07.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Настроим базу данных для phpMyAdmin с помощью dbconfig-common. Выбираем “yes”.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_08.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Настроим базу данных для phpMyAdmin с помощью dbconfig-common\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_08.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Указываем пароль для регистрации пользователя, который мы ввели при его создании в mySQL. \u003Cstrong>В моем случае: Pmy@dm1n\u003C/strong>\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_09.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"устанавливаем пароль\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_09.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Подтверждаем пароль на следующем шаге.\u003Cbr>\nУстановщик должен автоматически установить и настроить phpMyAdmin.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Включим PHP-модуль mbstring для работы с многобайтовыми строками:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> phpenmod mbstring\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перезагружаем Apache для применения изменений:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart apache2\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проверяем корректность установки. В первую очередь нас интересует наличие символической ссылки в html-директории:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">ls\u003C/span> /var/www/html/phpmyadmin\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если каталог не существует (ls: cannot access ‘/var/www/html/phpmyadmin’: No such file or directory), то необходимо создать ссылку самостоятельно:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">ln\u003C/span> -s /usr/share/phpmyadmin /var/www/html/phpmyadmin\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Дополнительно проверяем, что Apache подключил конфигурацию phpMyAdmin:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">ln\u003C/span> -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Если ответа от системы нет, значит все верно.\u003Cbr>\nВключаем конфигурационный файл Apache для phpMyAdmin, чтобы веб-сервер знал, как взаимодействовать с phpMyAdmin:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> a2enconf phpmyadmin\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перезагружаем Apache\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl reload apache2\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверяем статус Apache:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl status apache2\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">В браузере переходим по адресу:\u003Cbr>\nhttp://your_server_ip/phpmyadmin \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_10.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"открываем в браузере phpMyAdmin\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_10.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Вводим имя пользователя phpmyadmin и пароль Pmy@dm1n.\u003Cbr>\nПопадаем в рабочую область phpMyAdmin:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_11.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"рабочая область phpMyAdmin\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_11.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Установка завершена.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"настройка-базовой-http-аутентификации\"\n>Настройка базовой HTTP-аутентификации\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Настроим авторизацию до введения логина и пароля phpMyAdmin. Выполним ее с помощью базовой HTTP аутентификации (basic HTTP authentication).\nСоздаем файл .htaccess, который позволит управлять поведением Apache:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /usr/share/phpmyadmin/.htaccess\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создаем конфигурацию:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>AuthType Basic \nAuthName &quot;Restricted Files&quot;\nAuthUserFile /etc/phpmyadmin/.htpasswd\nRequire \u003Cspan class=\"hljs-keyword\">valid\u003C/span>-\u003Cspan class=\"hljs-keyword\">user\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">где:\u003Cbr>\n•\tAuthType Basic – тип аутентификации (Basic - простая HTTP-авторизация).\u003Cbr>\n•\tAuthName “Restricted Files” – сообщение, отображаемое в диалоговом окне браузера при запросе логина и пароля.\u003Cbr>\n•\tAuthUserFile /etc/phpmyadmin/.htpasswd – путь к файлу с логинами и хешами паролей.\u003Cbr>\n•\tRequire valid-user – разрешить доступ только тем, кто прошел аутентификацию.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Создаем директорию для хранения файла паролей и сам файл с первым пользователем:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">mkdir\u003C/span> -p /etc/phpmyadmin\u003C/code>\u003C/pre>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> htpasswd -c /etc/phpmyadmin/.htpasswd jetcry\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">где:\u003Cbr>\n•\t.htpasswd создаёт файл с логином jetcry и запрашивает пароль.\u003Cbr>\n•\tОпция \u003Cstrong>-c\u003C/strong> означает “создать новый файл”.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В файл запишется хэш пароля, а не сам пароль в открытом виде.\u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если Вы добавляете второго пользователя — не используйте \u003Cstrong>-c\u003C/strong>, иначе файл перезапишется!\u003C/p>\n\u003C/blockquote>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_12.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"файл с паролями\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_12.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Теперь необходимо настроить Apache на чтение файлов .htaccess:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/apache2/conf-available/phpmyadmin.conf\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В блоке  добавьте или измените строку:\n\u003Cpre class=\"hljs\">\u003Ccode>AllowOverride \u003Cspan class=\"hljs-keyword\">All\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Директива AllowOverride All позволяет файлам .htaccess переопределять директивы конфигурации Apache в указанной директории.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_13.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Директива AllowOverride All\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_13.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверим конфигурацию Apache на ошибки:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apachectl configtest\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Если все правильно, то ответ:\n\u003Cstrong>Syntax OK\u003C/strong>\u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перезапускаем Apache:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart apache2\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Открываем браузер. Теперь браузер показывает окно авторизации:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_14.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"браузер показывает окно авторизации\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_14.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если не появилось окно с вводом пароля, дополнительно измените директивы AllowOverride с none на All в файле:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>nano /etc/apache2/apache2.conf\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_15.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"измените директивы AllowOverride с none на All\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_15.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перезапустите Apache:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart apache2\u003C/code>\u003C/pre>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"подключение-к-phpmyadmin-по-https\"\n>Подключение к phpMyAdmin по HTTPS\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Сначала активируем модуль SSL для Apache:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> a2enmod ssl\u003C/code>\u003C/pre>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart apache2\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Сгенерируем самоподписанный сертификат. Замените 192.168.6.142 на ваш IP или доменное имя:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> openssl req -x509 -nodes -days 365 \\\n-newkey rsa:2048 \\\n-keyout /etc/ssl/private/apache-selfsigned.key \\\n-out /etc/ssl/certs/apache-selfsigned.crt \\\n-subj \u003Cspan class=\"hljs-string\">&quot;/C=RU/ST=Region/L=City/O=MyOrg/CN=192.168.6.142&quot;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если у Вас есть домен, то используйте бесплатный сертификат Let’s Encrypt:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install certbot python3-certbot-apache\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> certbot --apache\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Отредактируем конфигурационный файл SSL:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/apache2/sites-available/default-ssl.conf\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Добавьте в конфигурацию следующие строки: \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-section\">&lt;IfModule mod_ssl.c&gt;\u003C/span>\n  \u003Cspan class=\"hljs-section\">&lt;VirtualHost _default *\u003Cspan class=\"hljs-number\">:443\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-attribute\">ServerAdmin\u003C/span> webmaster@localhost\n    \u003Cspan class=\"hljs-attribute\">ServerName\u003C/span> \u003Cspan class=\"hljs-number\">192.168.6.142\u003C/span>\n\n    \u003Cspan class=\"hljs-attribute\">DocumentRoot\u003C/span> /var/www/html\n\n    \u003Cspan class=\"hljs-attribute\">SSLEngine\u003C/span> \u003Cspan class=\"hljs-literal\">on\u003C/span>\n    \u003Cspan class=\"hljs-attribute\">SSLCertificateFile\u003C/span> /etc/ssl/certs/apache-selfsigned.crt\n    \u003Cspan class=\"hljs-attribute\">SSLCertificateKeyFile\u003C/span> /etc/ssl/private/apache-selfsigned.key\n\n    \u003Cspan class=\"hljs-section\">&lt;Directory /usr/share/phpmyadmin&gt;\u003C/span>\n        \u003Cspan class=\"hljs-attribute\">Options\u003C/span> Indexes FollowSymLinks\n        \u003Cspan class=\"hljs-attribute\">DirectoryIndex\u003C/span> index.php\n        \u003Cspan class=\"hljs-attribute\">AllowOverride\u003C/span> \u003Cspan class=\"hljs-literal\">All\u003C/span>\n        \u003Cspan class=\"hljs-attribute\">Require\u003C/span> \u003Cspan class=\"hljs-literal\">all\u003C/span> granted\n    \u003Cspan class=\"hljs-section\">&lt;/Directory&gt;\u003C/span>\n  \u003Cspan class=\"hljs-section\">&lt;/VirtualHost&gt;\u003C/span>\n\u003Cspan class=\"hljs-section\">&lt;/IfModule&gt;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_16.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"параметры в default-ssl.comf\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_16.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Продолжение:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_17.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"параметры в default-ssl.conf\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_17.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Активируем созданную конфигурацию и перезапустим Apache:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> a2ensite default-ssl\u003C/code>\u003C/pre>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart apache2\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Настроим редирект на автоматический переход на https.\nОткрываем файл, который обрабатывает запросы на порт 80:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/apache2/sites-available/000-default.conf\u003C/code>\u003C/pre>\nДобавляем редирект в блок :\n\u003Cpre class=\"hljs\">\u003Ccode>    Redirect \u003Cspan class=\"hljs-string\">&quot;/phpmyadmin&quot;\u003C/span> https\u003Cspan class=\"hljs-punctuation\">:\u003C/span>\u003Cspan class=\"hljs-comment\">//192.168.6.142/phpmyadmin\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_18.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"редирект на автоматический переход на https\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_18.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Сохраняем изменения в файле. Проверяем конфигурацию и перезапускаем Apache:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apachectl configtest\u003C/code>\u003C/pre>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart apache2\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проверяем. Вводим в браузере 192.168.6.142/phpmyadmin. Автоматически переходим на https:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_19.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"автоматический переход на https\"\n                            src=\"/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_19.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Настройка завершена. Подключение защищено.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"краткие-итоги\"\n>Краткие итоги\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Мы установили и настроили phpMyAdmin на сервере, предварительно установив другие компоненты стека LAMP: Apache, mySQL, PHP. Дополнительно защитили взаимодействие с СУБД с помощью SSL и авторизации в браузере до введения логина и пароля от СУБД.\u003C/p>\n\u003C/p>","В статье рассмотрим как установить phpMyAdmin, php, mySQL на Ubuntu 24.04. Создадим безопасное подключение к СУБД. Настроим базовую HTTP-аутентификацию и подключение к phpMyAdmin по HTTPS.","/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/static/ru_image_00.webp",[234,236,239,242,245,248,251],{"title":235,"level":41,"id":110},"Установка mySQL",{"title":237,"level":41,"id":238},"Установка Apache","установка-apache",{"title":240,"level":41,"id":241},"Установка php","установка-php",{"title":243,"level":41,"id":244},"Установка phpMyAdmin","установка-phpmyadmin",{"title":246,"level":41,"id":247},"Настройка базовой HTTP-аутентификации","настройка-базовой-http-аутентификации",{"title":249,"level":41,"id":250},"Подключение к phpMyAdmin по HTTPS","подключение-к-phpmyadmin-по-https",{"title":121,"level":41,"id":122},{"slug":253,"tags":254,"title":260,"content":261,"updatedAt":262,"markdown":263,"description":264,"cover":265,"tableOfContents":266},"how-to-install-nextcloud-on-ubuntu",[255,22,65,256,97,132,226,257,258,259],"nextcloud","nginx","let's-encrypt","redis","apcu","Как установить Nextcloud на Ubuntu 24.04","# Как установить Nextcloud на Ubuntu 24.04\n\n## Создание сервера\n\nСоздадим сервер на [HostVDS](https://hostvds.com/control/servers/new). \n> Выбирайте сервер исходя из Ваших требований к системе.\n\nВ качестве примера мы выбрали Highload сервер c 16 Гб оперативной памяти и 4 CPU для Nextcloud:\n\u003Cp align=\"center\">\u003Cimg alt=\"Создадим сервер на HostVDS\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_01.png width=1024>\u003C/p>\nОбраз Ubuntu 24.04:\n\u003Cp align=\"center\">\u003Cimg alt=\"Создадим сервер на HostVDS\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_02.png width=1024>\u003C/p>\nПосле создания сервера и подключения к нему по SSH приступаем к подготовке системы.\n\n## Подготовка системы\n\nОбновим систему до последних версий пакетов:\n\n```\nsudo apt update && sudo apt upgrade -y\n```\n\nУстановим Nginx, MySQL, PHP и необходимые расширения:\n\n```\nsudo apt install -y ufw nginx mysql-server php8.3-{fpm,mysql,xml,gd,curl,mbstring,zip,bcmath,intl,imagick,gmp} redis-server php-{redis,apcu} bzip2 librsvg2-{bin,common} libmagickcore-6.q16-6-extra imagemagick-6.q16hdri\n```\n\nгде  \n\n• php8.3-fpm — PHP-FPM для работы с Nginx;  \n• php8.3-mysql — модуль для подключения к MySQL;  \n• bzip2 – пакет для распаковки архивов .tar.bz2;  \n• imagemagick —пакет для работы с изображениями;  \n• librsvg2 — пакет для поддержки SVG-графики;  \n• ufw — инструмент настройки firewall;  \n• остальные расширения являются модулями Nextcloud.  \n\nНастроим ufw:\n> Замените в первой команде порт на Ваш ssh-порт управления сервером\n\n```\nsudo ufw allow 52222\nsudo ufw allow 80/tcp\nsudo ufw allow 443/tcp\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\n```\n\nПерезагружаем и включаем ufw, проверяем его статус:\n\n```\nsudo ufw enable && sudo ufw reload  && sudo ufw status\n```\n\nРезультат:\n\u003Cp align=\"center\">\u003Cimg alt=\"статус ufw\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_03.png width=1024>\u003C/p>\n\nВключаем и перезапускаем службы:\n\n```\nsudo systemctl enable --now nginx mysql php8.3-fpm redis-server\n```\n\n## Установка и настройка базы данных\n\nМы подробно рассказывали про настройку mySQL в [этой статье](/databases/how-to-install-mysql-on-ubuntu-server). \nОстановимся только на моментах защиты СУБД:\n\n```\nsudo mysql_secure_installation\n```\n\nУстановим уровень 2 для максимальной сложности вводимых паролей.  \nДалее предлагаем согласиться (нажать Y) со всеми пунктами:  \n• Remove anonymous users (Удалить анонимных пользователей)  \n• Disallow root login remotely (Запретить удаленный вход пользователя root)  \n• Remove the test database (Удалить тестовую базу данных)  \n• Reload privilege tables (Перезагрузить таблицы привилегий)  \nПереходим в mySQL:\n\n```\nsudo mysql\n```\n\nСоздадим базу данных **nextcloud** и пользователя для неё **ncuser**. \n> Замените nextcloud и ncuser на Ваши значения\n\n\nМы явно задаем CHARACTER SET utf8mb4 и COLLATE utf8mb4_general_ci для поддержки расширенного набора символов UTF-8 (включая эмодзи):\n\n```\nCREATE DATABASE nextcloud CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;\n```\n\nСоздаем нового пользователя базы данных ncuser, указываем ему пароль ~MysqlU24. Этот пользователь будет использоваться Nextcloud для подключения к базе.\n\n```\nCREATE USER 'ncuser'@'localhost' IDENTIFIED BY '~MysqlU24';\n```\n\nЗадаем полный доступ пользователю ncuser на все таблицы базы nextcloud. Nextcloud во время установки самостоятельно создаст необходимые таблицы в этой базе.\n\n```\nGRANT ALL PRIVILEGES ON nextcloud.* TO 'ncuser'@'localhost';\n```\n\nОбновим кеш привилегий MySQL:\n\n```\nFLUSH PRIVILEGES;\n```\n\nПроверяем, что база данных создана:\n\n```\nSHOW DATABASES;\n```\n\nВыходим из базы данных:\n\n```\nExit;\n```\n\nРезультат на скриншоте:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"настройка MySQL\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_04.png width=1024>\u003C/p>\n\nБаза данных настроена. Переходим к Nginx.\n\n## Настройка Nginx\n\nДля получения доменного имени воспользуемся сервисом [Sslip.io](https://Sslip.io).  \nСервис автоматически присваивает доменное имя серверу по IP-адресу.  Вы должны придумать имя для своего Nextcloud и вставить его до IP-адреса. После IP-адреса указываем sslip.io.  \nМой IP-адрес 217.60.36.214, значит доменное имя будет таким:  \n\n**nextcloud.217.60.36.214.sslip.io**\n\nМы будем использовать этот домен для Nextcloud.  \nТеперь выполним базовую настройку nginx.  \nНастроим первоначальный конфиг для работы по 80 порту HTTP, чтобы можно было получить сертификат от Let’s Encrypt.  \nСоздаем файл:\n\n```\nsudo nano /etc/nginx/sites-available/nextcloud\n```\n\nВставляем в него конфигурацию.\n> Замените в конфигурации доменное имя nextcloud.217.60.36.214.sslip.io на свое \n\n```\nserver {\n    listen 80;\n    server_name nextcloud.217.60.36.214.sslip.io;\n\n    root /var/www/nextcloud; # сюда будем устанавливать Nextcloud\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\n```\n\nСохраняем файл CTRL+O, выходим CTRL+X.  \nНастроим логи на подозрительные запросы:\n\n```\nsudo sed -i '/http {/a\\\n    map $status $suspicious {\\n        ~^[23] 0;\\n        default 1;\\n    }\\\n' /etc/nginx/nginx.conf\n```\n\nОтключим отображение версии nginx в HTTP-заголовках и на стандартных страницах ошибок\n\n```\nsudo sed -i '/http {/a\\    server_tokens off;' /etc/nginx/nginx.conf\n```\n\nЗададим ограничение на одновременные соединения и на частоту запросов:\n\n```\nsudo sed -i '/http {/a\\\n    limit_conn_zone $binary_remote_addr zone=perip:10m;\\\n    limit_req_zone $binary_remote_addr zone=global:10m rate=20r/s;\\\n' /etc/nginx/nginx.conf\n```\n\nНастроим веб-сервер для обслуживания файлов .mjs с типом MIME text/javascript или application/javascript. Дополнительно сразу настроим обслуживание шрифтов .otf:\n\n```\nsudo nano /etc/nginx/mime.types\n```\n\nИзменим  строку: \napplication/javascript  js;\nна:\n\n```\napplication/javascript  js mjs;\n```\n\nДобавим строку:\n\n```\nfont/otf  otf;\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"конфигурация /etc/nginx/mime.types\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_05.png width=1024>\u003C/p>\n\nУдаляем дефолтный конфиг nginx:\n\n```\nsudo rm /etc/nginx/sites-enabled/default\n```\n\nВключаем сайт:\n\n```\nsudo ln -s /etc/nginx/sites-available/nextcloud /etc/nginx/sites-enabled/\n```\n\n```\nsudo nginx -t && sudo systemctl reload nginx\n```\n\nВы должны увидеть ответ:  \n_nginx: the configuration file /etc/nginx/nginx.conf syntax is ok  \nnginx: configuration file /etc/nginx/nginx.conf test is successful_\n\n\u003Cp align=\"center\">\u003Cimg alt=\"nginx: test is successful\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_06.png width=1024>\u003C/p>\n\n## Загрузка и установка Nextcloud\n\nСкачаем образ Nextcloud и файл SHA256-хеша для проверки целостности с официального сайта. Используем ссылку latest.tar.bz2, которая всегда указывает на последнюю стабильную версию Nextcloud:\n\n```\ncd /var/www\n```\n\n```\nsudo wget -4 https://download.nextcloud.com/server/releases/latest.tar.bz2\n```\n\n```\nsudo wget -4  https://download.nextcloud.com/server/releases/latest.tar.bz2.sha256\n```\n\nПроверим целостность скачанного архива:\n\n```\nsha256sum -c latest.tar.bz2.sha256\n```\n\nЕсли файл не поврежден, Вы получите сообщение **OK**.\nРаспаковываем архив:\n\n```\nsudo tar -xjf latest.tar.bz2\n```\n\nУдалим архив и контрольную сумму:\n\n```\nsudo rm latest.tar.bz2 latest.tar.bz2.sha256\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"скачивание nextcloud\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_07.png width=1024>\u003C/p>\n\n## Настройка директорий, прав и параметров PHP\n\nНазначим нужные права на файлы:\n\n```\nsudo chown -R www-data:www-data /var/www/nextcloud && sudo find /var/www/nextcloud -type d -exec chmod 755 {} \\; && sudo find /var/www/nextcloud -type f -exec chmod 644 {} \\; && sudo chmod +x /var/www/nextcloud/occ\n```\n\nСоздадим директорию для данных, чтобы файлы пользователей не были доступны через веб-браузер:\n\n```\nsudo mkdir -p /var/nextcloud-data && sudo chown www-data:www-data /var/nextcloud-data && sudo chmod 750 /var/nextcloud-data\n```\n\nСоздаем директорию для логов:\n\n```\nsudo mkdir -p /var/log/nextcloud && sudo chown www-data:www-data /var/log/nextcloud && sudo chmod 755 /var/log/nextcloud\n```\n\nОтредактируем параметры php.ini.  \nСоздадим директорию для логов:\n\n```\nsudo mkdir -p /var/log/php && sudo chown www-data:www-data /var/log/php && sudo chmod 755 /var/log/php\n```\n\nСоздаем резервную копию\n\n```\nsudo cp /etc/php/8.3/fpm/pool.d/www.conf /etc/php/8.3/fpm/pool.d/www.conf.backup\n```\n\nВыполним все изменения php одной командой:\n\n```\nsudo sed -i \\\n-e 's/^pm = .*/pm = dynamic/' \\\n-e 's/^pm.max_children = .*/pm.max_children = 50/' \\\n-e 's/^pm.start_servers = .*/pm.start_servers = 12/' \\\n-e 's/^pm.min_spare_servers = .*/pm.min_spare_servers = 6/' \\\n-e 's/^pm.max_spare_servers = .*/pm.max_spare_servers = 18/' \\\n-e 's/^;pm.max_requests = .*/pm.max_requests = 1000/' \\\n-e 's/^pm.max_requests = .*/pm.max_requests = 1000/' \\\n-e 's/^;request_terminate_timeout = .*/request_terminate_timeout = 3600/' \\\n-e 's/^request_terminate_timeout = .*/request_terminate_timeout = 3600/' \\\n-e 's/^;request_slowlog_timeout = .*/request_slowlog_timeout = 10s/' \\\n-e 's/^request_slowlog_timeout = .*/request_slowlog_timeout = 10s/' \\\n-e 's/^;slowlog = .*/slowlog = \\/var\\/log\\/php\\/fpm-slow.log/' \\\n-e 's/^slowlog = .*/slowlog = \\/var\\/log\\/php\\/fpm-slow.log/' \\\n-e 's/^;*env\\[PATH\\].*/env[PATH] = \\/usr\\/local\\/sbin:\\/usr\\/local\\/bin:\\/usr\\/sbin:\\/usr\\/bin:\\/sbin:\\/bin/' \\\n/etc/php/8.3/fpm/pool.d/www.conf && sudo sed -i \\\n-e 's/^;opcache.interned_strings_buffer=8/opcache.interned_strings_buffer=16/' \\\n-e 's/^memory_limit = .*/memory_limit = 1024M/' \\\n-e 's/^;memory_limit = .*/memory_limit = 1024M/' \\\n/etc/php/8.3/fpm/php.ini\n```\n\nДобавим переменные окружения\n\n```\ncat \u003C\u003C 'EOF' | sudo tee -a /etc/php/8.3/fpm/pool.d/www.conf\n\n; Environment variables\nenv[HOSTNAME] = $HOSTNAME\nenv[PATH] = /usr/local/bin:/usr/bin:/bin\nenv[TMP] = /tmp\nenv[TMPDIR] = /tmp\nenv[TEMP] = /tmp\nEOF\n```\n\nПроверим синтаксис:\n\n```\nsudo php-fpm8.3 -t\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"настройка php\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_08.png width=1024>\u003C/p>\n\nПерезапустим PHP-FPM:\n\n```\nsudo systemctl restart php8.3-fpm\n```\n\nПроверим статус:\n\n```\nsudo systemctl status php8.3-fpm\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"php статус\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_09.png width=1024>\u003C/p>\n\n## Установка Nextcloud через CLI\n\nУстановим Nextcloud через командную строку.\n> Замените в команде:\n\n> nextcloud – на имя своей базы данных\n\n\n> ncuser – на имя своего пользователя БД\n\n> ~MysqlU24 – на свой пароль к БД\n\n> jetcry_admin – укажите Ваш логин админа на сервере Nextcloud\n\n> jetcry – укажите свой пароль для админа сервера\n\n```\nsudo -u www-data php /var/www/nextcloud/occ maintenance:install \\\n  --database \"mysql\" \\\n  --database-name \"nextcloud\" \\\n  --database-user \"ncuser\" \\\n  --database-pass \"~MysqlU24\" \\\n  --database-host \"localhost\" \\\n  --admin-user \"jetcry_admin\" \\\n  --admin-pass \"jetcry\" \\\n  --data-dir \"/var/nextcloud-data\"\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"установка nextcloud через cli\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_10.png width=1024>\u003C/p>\n\n## Оптимизация производительности\n\nNextcloud по умолчанию защищён от атак подделки запросов (CSRF) и DNS rebinding. Он принимает соединения только с явно указанных доменов и IP-адресов.  \nВыполним необходимые настройки конфигурации, добавив оптимизацию кеширования с помощью APCu и Redis.  \nAPCu (Alternative PHP Cache User) — это встроенный в PHP кэш, работающий локально в оперативной памяти каждого процесса PHP. Он очень быстр и используется для хранения временных данных (например, конфигураций, маршрутов, промежуточных вычислений), что позволяет ускорить работу Nextcloud и снизить нагрузку на базу данных. Параметр memcache.local в конфигурации Nextcloud использует именно APCu.  \nRedis — отдельный сервер кэширования (in-memory database), который может работать по сети или через сокет. Он используется для распределённого кеша и механизма блокировок между PHP-процессами. В параметрах memcache.locking и memcache.distributed указывается Redis, чтобы обеспечить корректную работу совместного доступа к файлам и ускорить выполнение операций в многопользовательском режиме.  \nОткроем файл:\n\n```\nsudo nano /var/www/nextcloud/config/config.php\n```\n\nВ конфигурации меняем  \n_'trusted_domains' =>  \narray (  \n  0 => 'localhost',  \n),_  \nНа:\n\n> Замените nextcloud.217.60.36.214.sslip.io на Ваше доменное имя\n\n> Замените 217.60.36.214 на Ваш IP-адрес\n\n```\n'trusted_domains' =>\narray (\n  0 => 'localhost',\n  1 => 'nextcloud.217.60.36.214.sslip.io',\n  2 => '217.60.36.214',\n),\n```\n\nДобавляем весь этот блок перед закрывающей скобкой );\n\n> Замените nextcloud.217.60.36.214.sslip.io на Ваше доменное имя\n\n```\n  'appstoreenabled' => true,\n  'overwriteprotocol' => 'https',\n  'overwrite.cli.url' => 'https://nextcloud.217.60.36.214.sslip.io',\n\n// Оптимизация превью\n  'enabledPreviewProviders' =>\n  array (\n    0 => 'OC\\\\Preview\\\\PNG',\n    1 => 'OC\\\\Preview\\\\JPEG',\n    2 => 'OC\\\\Preview\\\\GIF',\n    3 => 'OC\\\\Preview\\\\BMP',\n    4 => 'OC\\\\Preview\\\\XBitmap',\n    5 => 'OC\\\\Preview\\\\MP3',\n    6 => 'OC\\\\Preview\\\\TXT',\n    7 => 'OC\\\\Preview\\\\MarkDown',\n  ),\n\n  // Кеширование\n  'filelocking.enabled' => true,\n  'filelocking.ttl' => 3600,\n  'memcache.local' => '\\\\OC\\\\Memcache\\\\APCu',\n  'memcache.locking' => '\\\\OC\\\\Memcache\\\\Redis',\n  'memcache.distributed' => '\\\\OC\\\\Memcache\\\\Redis',\n  'redis' =>\n  array (\n    'host' => '127.0.0.1',\n    'port' => 6379,\n    'timeout' => 3,\n  ),\n\n  // Настройки производительности\n  'default_phone_region' => 'RU',\n  'maintenance_window_start' => 10800,\n  'upgrade.disable-web' => true,\n  'maintenance' => false,\n  'trashbin_retention_obligation' => 'auto, 30',\n  'versions_retention_obligation' => 'auto, 30',\n  'max_chunk_size' => 1073741824,\n  'max_input_time' => 3600,\n  \n  // Безопасность\n  'htaccess.RewriteBase' => '/',\n  'check_for_working_htaccess' => true,\n  'force_ssl' => true,\n\n  // Логирование\n  'log_type' => 'file',\n  'logfile' => '/var/log/nextcloud/nextcloud.log',\n  'loglevel' => 2,\n  'log_rotate_size' => 104857600,\n\n  // Дополнительные настройки производительности\n  'jpeg_quality' => 60,\n  'enable_previews' => true,\n  'preview_max_x' => 1024,\n  'preview_max_y' => 768,\n  'preview_max_scale_factor' => 1,\n\n  // Настройки файловой системы\n  'filesystem_check_changes' => 0,\n  'part_file_in_storage' => false,\n\n  // Отключение уведомлений об обновлениях\n  'updater.release.channel' => 'stable',\n  'has_internet_connection' => true,\n  'version_hide' => true,\n\n  // Настройки сессий\n  'session_lifetime' => 86400,\n  'session_keepalive' => true,\n  'auto_logout' => false,\n  'check_data_directory_permissions' => true,\n  'config_is_read_only' => false,\n```\n\nВыглядеть должно вот так:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"установка nextcloud через cli\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_11.png width=1024>\u003C/p>\n\n\u003Cp align=\"center\">\u003Cimg alt=\"установка nextcloud через cli\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_12.png width=1024>\u003C/p>\n\nНастраиваем корректные права, ограничим доступ к файлу с паролями базы данных:\n\n```\nsudo chown www-data:www-data /var/www/nextcloud/config/config.php && sudo chmod 640 /var/www/nextcloud/config/config.php\n```\n\n## Получение SSL-сертификата Let's Encrypt\n\nУстанавливаем certbot:\n\n```\nsudo apt install certbot python3-certbot-nginx -y\n```\n\nСоздаем сертификат для нашего Nextcloud:\n\n> Замените nextcloud.217.60.36.214.sslip.io на Ваше доменное имя\n\n```\nsudo certbot --nginx -d nextcloud.217.60.36.214.sslip.io\n```\n\nCertbot задаст Вам несколько вопросов и автоматически сконфигурирует сертификат.\n\n\u003Cp align=\"center\">\u003Cimg alt=\"установка nextcloud через cli\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_13.png width=1024>\u003C/p>\n\nСертификат получен, выполним дополнительные настройки для работы Nextcloud по HTTPS.\n\n## Настройка Nginx для Nextcloud через HTTPS\n\nУдалим старый конфиг и создадим новый.\n\n```\nsudo rm /etc/nginx/sites-available/nextcloud && sudo nano /etc/nginx/sites-available/nextcloud\n```\n\nВставляем новую конфигурацию:\n\n> Вам нужно 4 раза заменить nextcloud.217.60.36.214.sslip.io на имя своего сервера\n\n```\nupstream php-handler {\n    server unix:/run/php/php8.3-fpm.sock;\n}\n\nmap $arg_v $asset_immutable {\n    \"\" \"\";\n    default \"immutable\";\n}\n\n\nserver {\n    server_name nextcloud.217.60.36.214.sslip.io;\n\n    root /var/www/nextcloud; # путь до Nextcloud\n    index index.php index.html /index.php$request_uri;\n                                                                                                                                                                                                                 \n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n\n    ssl_certificate /etc/letsencrypt/live/nextcloud.217.60.36.214.sslip.io/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/nextcloud.217.60.36.214.sslip.io/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n\n    # Защита от DoS и перегрузки\n    limit_conn perip 30;\n    limit_req zone=global burst=40 nodelay;\n\n    add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\" always;\n    add_header X-Content-Type-Options nosniff always;\n    add_header X-XSS-Protection \"1; mode=block\" always;\n    add_header X-Robots-Tag \"noindex, nofollow\" always;\n    add_header X-Frame-Options \"SAMEORIGIN\" always;\n    add_header Referrer-Policy \"no-referrer\" always;\n    add_header X-Permitted-Cross-Domain-Policies \"none\" always;\n    add_header X-Download-Options \"noopen\" always;\n\n   access_log /var/log/nginx/nextcloud_access.log combined if=$suspicious;\n    error_log /var/log/nginx/nextcloud_error.log warn;\n# Блокировка вредоносных ботов\n    if ($http_user_agent ~* \"masscan|nmap|sqlmap|nikto|acunetix|nessus|wpscan\") {\n        return 444;\n    }\n# Блокировка ненужных HTTP-методов\n    if ($request_method !~ ^(GET|POST|HEAD|PROPFIND|OPTIONS|PUT|DELETE)$ ) {\n        return 444;\n    }\n\n\n\n    client_max_body_size 10G;\n    client_body_timeout 300s;\n    client_body_buffer_size 128k;\n    fastcgi_buffers 64 4K;\n\n    gzip on;\n    gzip_vary on;\n    gzip_comp_level 4;\n    gzip_min_length 256;\n    gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;\ngzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy; \n    # Перенаправление WebDAV-клиентов на endpoint WebDAV\n    location = / {\n        if ( $http_user_agent ~ ^DavClnt ) {\n            return 302 /remote.php/webdav/$is_args$args;\n        }\n    }\n\n    # Запрет доступа к скрытым служебным файлам и директориям\n    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }\n    location ~ ^/(?:\\.|autotest|occ|issue|indie|db_|console)                { return 404; }\n\n    # Well-known URLs\n    location ^~ /.well-known {\n        location = /.well-known/carddav     { return 301 /remote.php/dav/; }\n        location = /.well-known/caldav      { return 301 /remote.php/dav/; }\n        location = /.well-known/webfinger   { return 301 /index.php/.well-known/webfinger; }\n        location = /.well-known/nodeinfo    { return 301 /index.php/.well-known/nodeinfo; }\n        location = /.well-known/acme-challenge    { try_files $uri $uri/ =404; }\n        location = /.well-known/pki-validation    { try_files $uri $uri/ =404; }\n        return 301 /remote.php/webdav/;\n    }\n\n    # OCM и OCS провайдеры\n    location ~ ^/oc[ms]-provider/? {\n        try_files $uri $uri/ /index.php$request_uri;\n    }\n\n    # Доступ к интерфейсу обновления Nextcloud\n    location ~ ^/updater(?:$|/) {\n        try_files $uri/ =404;\n        index index.php;\n    }\n\n    # Основные обработчики PHP-скриптов (API, cron, публичный доступ, обновление и провайдеры)\n    location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|oc[ms]-provider/.+)\\.php(?:$|/) {\n        fastcgi_split_path_info ^(.+?\\.php)(/.*)$;\n        set $path_info $fastcgi_path_info;\n        try_files $fastcgi_script_name =404;\n\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_param PATH_INFO $path_info;\n        fastcgi_param HTTPS on;\n        fastcgi_param modHeadersAvailable true;\n        fastcgi_param front_controller_active true;\n        fastcgi_pass php-handler;\n\n        fastcgi_intercept_errors on;\n        fastcgi_request_buffering off;\n        fastcgi_max_temp_file_size 0;\n        fastcgi_read_timeout 600;\n        fastcgi_send_timeout 600;\n        fastcgi_connect_timeout 600;\n    }\n\n    # Универсальный обработчик PHP \n    location ~ \\.php(?:$|/) {\n        rewrite ^/(?!index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|oc[ms]-provider/.+|\\.well-known/.*) /index.php$request_uri;\n\n        fastcgi_split_path_info ^(.+?\\.php)(/.*)$;\n        set $path_info $fastcgi_path_info;\n        try_files $fastcgi_script_name =404;\n\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_param PATH_INFO $path_info;\n        fastcgi_param HTTPS on;\n        fastcgi_param modHeadersAvailable true;\n        fastcgi_param front_controller_active true;\n        fastcgi_pass php-handler;\n\n        fastcgi_intercept_errors on;\n        fastcgi_request_buffering off;\n        fastcgi_max_temp_file_size 0;\n        fastcgi_read_timeout 600;\n        fastcgi_send_timeout 600;\n        fastcgi_connect_timeout 600;\n    }\n\n    # Статические ресурсы и кэширование (css, js, изображения)\n    location ~ \\.(?:css|js|mjs|svg|gif|png|jpg|ico|wasm|tflite|map|ogg|flac)$ {\n        try_files $uri /index.php$request_uri;\n        add_header Cache-Control \"public, max-age=15778463, $asset_immutable\";\n        access_log off;\n\n        location ~ \\.wasm$ {\n            default_type application/wasm;\n        }\n    }\n\n    # Шрифты\n    location ~ \\.woff2?$ {\n        try_files $uri /index.php$request_uri;\n        expires 7d;\n        access_log off;\n        add_header Cache-Control \"public, max-age=604800, immutable\";\n    }\n\n    # Обработка всех остальных запросов через index.php\n    location / {\n        try_files $uri $uri/ /index.php$request_uri;\n    }\n\n}\n\nserver {\n    listen 80;\n    listen [::]:80;\n    server_name nextcloud.217.60.36.214.sslip.io;\n\n    location ^~ /.well-known/acme-challenge/ {\n        try_files $uri $uri/ =404;\n    }\n\n    location / {\n        return 301 https://$host$request_uri;\n    }\n}\n```\n\nМы только что установили сервер и на нем еще нет файлов, поэтому сразу же выполним миграцию новых типов файлов (MIME-типы).  \nЭто нужно выполнить для того, чтобы они корректно поддерживались. При большом количестве файлов на сервере миграция может занять много времени.  \nВводим команду:\n\n```\nsudo -u www-data php /var/www/nextcloud/occ maintenance:repair --include-expensive\n```\n\nВыполним оптимизацию базы данных Nextcloud. Добавим недостающие индексы и удалим устаревшие/неэффективные:\n\n```\nsudo -u www-data php /var/www/nextcloud/occ db:add-missing-indices\n```\n\nНастроим время начала окна обслуживания. В нашем примере выберем время начала выполнения в 3 ночи. Nextcloud использует параметр maintenance_window_start в секундах от полуночи. Вычисляем наше время:  3 часа умножить на 3600 = 10 800 секунд:\n\n```\nsudo -u www-data php /var/www/nextcloud/occ config:system:set maintenance_window_start --value=10800 --type=integer\n```\n\nПерезапустим PHP и Nginx:\n\n```\nsudo systemctl restart php8.3-fpm nginx\n```\n\nРезультат: \n\n\u003Cp align=\"center\">\u003Cimg alt=\"restart php8.3 и nginx\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_14.png width=1024>\u003C/p>\n\n## Проверка Nextcloud\n\nПосле этого открываем в браузере Nextcloud:\n\n> Замените на свое доменное имя\n\n```\nnextcloud.217.60.36.214.sslip.io \n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"заходим на nextcloud\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_15.png width=1024>\u003C/p>\n\nВидим приветствие:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"приветствие nextcloud\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_16.png width=1024>\u003C/p>\n\nПереходим в меню «Параметры сервера»:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"параметры сервера\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_17.png width=1024>\u003C/p>\n\nВы должны увидеть сообщение:\n**Все проверки пройдены.**\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Все проверки пройдены\" src=/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_18.png width=1024>\u003C/p>\n\nНа этом установка и базовая настройка Nextcloud завершены.\n\n## Краткие итоги\n\nМы развернули сервер с MySQL, PHP, Nginx и Nextcloud, настроив его как платформу для облачного хранения файлов. Для ускорения работы и повышения стабильности мы использовали APCu для локального кэширования, а Redis — для распределённого кэша и блокировки файлов.\n",["Date","2025-08-02T11:12:48.152Z"],"\n\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"создание-сервера\"\n>Создание сервера\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создадим сервер на \u003Ca   href=\"https://hostvds.com/control/servers/new\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>HostVDS\u003C/a>. \u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Выбирайте сервер исходя из Ваших требований к системе.\u003C/p>\n\u003C/blockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В качестве примера мы выбрали Highload сервер c 16 Гб оперативной памяти и 4 CPU для Nextcloud:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_01.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Создадим сервер на HostVDS\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_01.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nОбраз Ubuntu 24.04:\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_02.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Создадим сервер на HostVDS\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_02.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nПосле создания сервера и подключения к нему по SSH приступаем к подготовке системы.\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"подготовка-системы\"\n>Подготовка системы\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Обновим систему до последних версий пакетов:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt update &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt upgrade -y\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Установим Nginx, MySQL, PHP и необходимые расширения:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install -y ufw nginx mysql-server php8.3-{fpm,mysql,xml,gd,curl,mbstring,zip,bcmath,intl,imagick,gmp} redis-server php-{redis,apcu} bzip2 librsvg2-{bin,common} libmagickcore-6.q16-6-extra imagemagick-6.q16hdri\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">где  \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">• php8.3-fpm — PHP-FPM для работы с Nginx;\u003Cbr>\n• php8.3-mysql — модуль для подключения к MySQL;\u003Cbr>\n• bzip2 – пакет для распаковки архивов .tar.bz2;\u003Cbr>\n• imagemagick —пакет для работы с изображениями;\u003Cbr>\n• librsvg2 — пакет для поддержки SVG-графики;\u003Cbr>\n• ufw — инструмент настройки firewall;\u003Cbr>\n• остальные расширения являются модулями Nextcloud.  \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Настроим ufw:\u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Замените в первой команде порт на Ваш ssh-порт управления сервером\u003C/p>\n\u003C/blockquote>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw allow 52222\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw allow 80/tcp\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw allow 443/tcp\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw default deny incoming\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw default allow outgoing\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перезагружаем и включаем ufw, проверяем его статус:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw \u003Cspan class=\"hljs-built_in\">enable\u003C/span> &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw reload  &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw status\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Результат:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_03.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"статус ufw\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_03.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Включаем и перезапускаем службы:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl \u003Cspan class=\"hljs-built_in\">enable\u003C/span> --now nginx mysql php8.3-fpm redis-server\u003C/code>\u003C/pre>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"установка-и-настройка-базы-данных\"\n>Установка и настройка базы данных\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Мы подробно рассказывали про настройку mySQL в \u003Ca   href=\"https://github.com/HostVDS-com/tutorials/blob/main/topics/databases/how-to-install-mysql-on-ubuntu-server/ru.md\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>этой статье\u003C/a>.\nОстановимся только на моментах защиты СУБД:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> mysql_secure_installation\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Установим уровень 2 для максимальной сложности вводимых паролей.\u003Cbr>\nДалее предлагаем согласиться (нажать Y) со всеми пунктами:\u003Cbr>\n• Remove anonymous users (Удалить анонимных пользователей)\u003Cbr>\n• Disallow root login remotely (Запретить удаленный вход пользователя root)\u003Cbr>\n• Remove the test database (Удалить тестовую базу данных)\u003Cbr>\n• Reload privilege tables (Перезагрузить таблицы привилегий)\u003Cbr>\nПереходим в mySQL:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> mysql\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создадим базу данных \u003Cstrong>nextcloud\u003C/strong> и пользователя для неё \u003Cstrong>ncuser\u003C/strong>. \u003C/p>\n\u003Cblockquote>\n\u003Cp class=\"mt-2 mb-2 text-md\">Замените nextcloud и ncuser на Ваши значения\u003C/p>\n\u003C/blockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Мы явно задаем CHARACTER SET utf8mb4 и COLLATE utf8mb4_general_ci для поддержки расширенного набора символов UTF-8 (включая эмодзи):\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">CREATE\u003C/span> \u003Cspan class=\"hljs-keyword\">DATABASE\u003C/span> nextcloud \u003Cspan class=\"hljs-type\">CHARACTER\u003C/span> \u003Cspan class=\"hljs-keyword\">SET\u003C/span> utf8mb4 \u003Cspan class=\"hljs-keyword\">COLLATE\u003C/span> utf8mb4_general_ci;\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Создаем нового пользователя базы данных ncuser, указываем ему пароль ~MysqlU24. Этот пользователь будет использоваться Nextcloud для подключения к базе.\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">CREATE\u003C/span> \u003Cspan class=\"hljs-keyword\">USER\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;ncuser&#x27;\u003C/span>@\u003Cspan class=\"hljs-string\">&#x27;localhost&#x27;\u003C/span> IDENTIFIED \u003Cspan class=\"hljs-keyword\">BY\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;~MysqlU24&#x27;\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Задаем полный доступ пользователю ncuser на все таблицы базы nextcloud. Nextcloud во время установки самостоятельно создаст необходимые таблицы в этой базе.\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-keyword\">GRANT\u003C/span> \u003Cspan class=\"hljs-keyword\">ALL\u003C/span> \u003Cspan class=\"hljs-keyword\">PRIVILEGES\u003C/span> \u003Cspan class=\"hljs-keyword\">ON\u003C/span> nextcloud.* \u003Cspan class=\"hljs-keyword\">TO\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;ncuser&#x27;\u003C/span>@\u003Cspan class=\"hljs-string\">&#x27;localhost&#x27;\u003C/span>;\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Обновим кеш привилегий MySQL:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>FLUSH PRIVILEGES\u003Cspan class=\"hljs-comment\">;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверяем, что база данных создана:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>SHOW DATABASES\u003Cspan class=\"hljs-comment\">;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Выходим из базы данных:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>Exit\u003Cspan class=\"hljs-comment\">;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Результат на скриншоте:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_04.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"настройка MySQL\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_04.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">База данных настроена. Переходим к Nginx.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"настройка-nginx\"\n>Настройка Nginx\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для получения доменного имени воспользуемся сервисом \u003Ca   href=\"https://Sslip.io\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>Sslip.io\u003C/a>.\u003Cbr>\nСервис автоматически присваивает доменное имя серверу по IP-адресу.  Вы должны придумать имя для своего Nextcloud и вставить его до IP-адреса. После IP-адреса указываем sslip.io.\u003Cbr>\nМой IP-адрес 217.60.36.214, значит доменное имя будет таким:  \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">\u003Cstrong>nextcloud.217.60.36.214.sslip.io\u003C/strong>\u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Мы будем использовать этот домен для Nextcloud.\u003Cbr>\nТеперь выполним базовую настройку nginx.\u003Cbr>\nНастроим первоначальный конфиг для работы по 80 порту HTTP, чтобы можно было получить сертификат от Let’s Encrypt.\u003Cbr>\nСоздаем файл:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/nginx/sites-available/nextcloud\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Вставляем в него конфигурацию.\u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Замените в конфигурации доменное имя nextcloud.217.60.36.214.sslip.io на свое \u003C/p>\n\u003C/blockquote>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-section\">server\u003C/span> {\n    \u003Cspan class=\"hljs-attribute\">listen\u003C/span> \u003Cspan class=\"hljs-number\">80\u003C/span>;\n    \u003Cspan class=\"hljs-attribute\">server_name\u003C/span> nextcloud.\u003Cspan class=\"hljs-number\">217.60.36.214\u003C/span>.sslip.io;\n\n    \u003Cspan class=\"hljs-attribute\">root\u003C/span> /var/www/nextcloud; \u003Cspan class=\"hljs-comment\"># сюда будем устанавливать Nextcloud\u003C/span>\n\n    \u003Cspan class=\"hljs-section\">location\u003C/span> / {\n        \u003Cspan class=\"hljs-attribute\">try_files\u003C/span> \u003Cspan class=\"hljs-variable\">$uri\u003C/span> \u003Cspan class=\"hljs-variable\">$uri\u003C/span>/ =\u003Cspan class=\"hljs-number\">404\u003C/span>;\n    }\n}\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Сохраняем файл CTRL+O, выходим CTRL+X.\u003Cbr>\nНастроим логи на подозрительные запросы:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> sed -i \u003Cspan class=\"hljs-string\">&#x27;/http {/a\\\n    map $status $suspicious {\\n        ~^[23] 0;\\n        default 1;\\n    }\\\n&#x27;\u003C/span> /etc/nginx/nginx.conf\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Отключим отображение версии nginx в HTTP-заголовках и на стандартных страницах ошибок\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> sed -i \u003Cspan class=\"hljs-string\">&#x27;/http {/a\\    server_tokens off;&#x27;\u003C/span> /etc/nginx/nginx.conf\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Зададим ограничение на одновременные соединения и на частоту запросов:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> sed -i \u003Cspan class=\"hljs-string\">&#x27;/http {/a\\\n    limit_conn_zone $binary_remote_addr zone=perip:10m;\\\n    limit_req_zone $binary_remote_addr zone=global:10m rate=20r/s;\\\n&#x27;\u003C/span> /etc/nginx/nginx.conf\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Настроим веб-сервер для обслуживания файлов .mjs с типом MIME text/javascript или application/javascript. Дополнительно сразу настроим обслуживание шрифтов .otf:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/nginx/mime.types\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Изменим  строку:\napplication/javascript  js;\nна:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>application/javascript  js mjs\u003Cspan class=\"hljs-comment\">;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Добавим строку:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>font/otf  otf\u003Cspan class=\"hljs-comment\">;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_05.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"конфигурация /etc/nginx/mime.types\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_05.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Удаляем дефолтный конфиг nginx:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">rm\u003C/span> /etc/nginx/sites-enabled/default\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Включаем сайт:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">ln\u003C/span> -s /etc/nginx/sites-available/nextcloud /etc/nginx/sites-enabled/\u003C/code>\u003C/pre>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nginx -t &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl reload nginx\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Вы должны увидеть ответ:\u003Cbr>\n\u003Cem>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\u003Cbr>\nnginx: configuration file /etc/nginx/nginx.conf test is successful\u003C/em>\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_06.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"nginx: test is successful\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_06.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"загрузка-и-установка-nextcloud\"\n>Загрузка и установка Nextcloud\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Скачаем образ Nextcloud и файл SHA256-хеша для проверки целостности с официального сайта. Используем ссылку latest.tar.bz2, которая всегда указывает на последнюю стабильную версию Nextcloud:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">cd\u003C/span> /var/www\u003C/code>\u003C/pre>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> wget -4 https://download.nextcloud.com/server/releases/latest.tar.bz2\u003C/code>\u003C/pre>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> wget -4  https://download.nextcloud.com/server/releases/latest.tar.bz2.sha256\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверим целостность скачанного архива:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>sha256sum -c latest\u003Cspan class=\"hljs-selector-class\">.tar\u003C/span>\u003Cspan class=\"hljs-selector-class\">.bz2\u003C/span>.sha256\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Если файл не поврежден, Вы получите сообщение \u003Cstrong>OK\u003C/strong>.\nРаспаковываем архив:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> tar -xjf latest.tar.bz2\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Удалим архив и контрольную сумму:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">rm\u003C/span> latest.tar.bz2 latest.tar.bz2.sha256\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_07.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"скачивание nextcloud\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_07.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"настройка-директорий-прав-и-параметров-php\"\n>Настройка директорий, прав и параметров PHP\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Назначим нужные права на файлы:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chown\u003C/span> -R www-data:www-data /var/www/nextcloud &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> find /var/www/nextcloud -\u003Cspan class=\"hljs-built_in\">type\u003C/span> d -\u003Cspan class=\"hljs-built_in\">exec\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> 755 {} \\; &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> find /var/www/nextcloud -\u003Cspan class=\"hljs-built_in\">type\u003C/span> f -\u003Cspan class=\"hljs-built_in\">exec\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> 644 {} \\; &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> +x /var/www/nextcloud/occ\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Создадим директорию для данных, чтобы файлы пользователей не были доступны через веб-браузер:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">mkdir\u003C/span> -p /var/nextcloud-data &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chown\u003C/span> www-data:www-data /var/nextcloud-data &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> 750 /var/nextcloud-data\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создаем директорию для логов:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">mkdir\u003C/span> -p /var/log/nextcloud &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chown\u003C/span> www-data:www-data /var/log/nextcloud &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> 755 /var/log/nextcloud\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Отредактируем параметры php.ini.\u003Cbr>\nСоздадим директорию для логов:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">mkdir\u003C/span> -p /var/log/php &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chown\u003C/span> www-data:www-data /var/log/php &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> 755 /var/log/php\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создаем резервную копию\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">cp\u003C/span> /etc/php/8.3/fpm/pool.d/www.conf /etc/php/8.3/fpm/pool.d/www.conf.backup\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Выполним все изменения php одной командой:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> sed -i \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^pm = .*/pm = dynamic/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^pm.max_children = .*/pm.max_children = 50/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^pm.start_servers = .*/pm.start_servers = 12/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^pm.min_spare_servers = .*/pm.min_spare_servers = 6/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^pm.max_spare_servers = .*/pm.max_spare_servers = 18/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^;pm.max_requests = .*/pm.max_requests = 1000/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^pm.max_requests = .*/pm.max_requests = 1000/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^;request_terminate_timeout = .*/request_terminate_timeout = 3600/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^request_terminate_timeout = .*/request_terminate_timeout = 3600/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^;request_slowlog_timeout = .*/request_slowlog_timeout = 10s/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^request_slowlog_timeout = .*/request_slowlog_timeout = 10s/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^;slowlog = .*/slowlog = \\/var\\/log\\/php\\/fpm-slow.log/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^slowlog = .*/slowlog = \\/var\\/log\\/php\\/fpm-slow.log/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^;*env\\[PATH\\].*/env[PATH] = \\/usr\\/local\\/sbin:\\/usr\\/local\\/bin:\\/usr\\/sbin:\\/usr\\/bin:\\/sbin:\\/bin/&#x27;\u003C/span> \\\n/etc/php/8.3/fpm/pool.d/www.conf &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> sed -i \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^;opcache.interned_strings_buffer=8/opcache.interned_strings_buffer=16/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^memory_limit = .*/memory_limit = 1024M/&#x27;\u003C/span> \\\n-e \u003Cspan class=\"hljs-string\">&#x27;s/^;memory_limit = .*/memory_limit = 1024M/&#x27;\u003C/span> \\\n/etc/php/8.3/fpm/php.ini\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Добавим переменные окружения\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">cat\u003C/span> &lt;&lt; \u003Cspan class=\"hljs-string\">&#x27;EOF&#x27;\u003C/span> | \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">tee\u003C/span> -a /etc/php/8.3/fpm/pool.d/www.conf\n\n; Environment variables\n\u003Cspan class=\"hljs-built_in\">env\u003C/span>[HOSTNAME] = \u003Cspan class=\"hljs-variable\">$HOSTNAME\u003C/span>\n\u003Cspan class=\"hljs-built_in\">env\u003C/span>[PATH] = /usr/local/bin:/usr/bin:/bin\n\u003Cspan class=\"hljs-built_in\">env\u003C/span>[TMP] = /tmp\n\u003Cspan class=\"hljs-built_in\">env\u003C/span>[TMPDIR] = /tmp\n\u003Cspan class=\"hljs-built_in\">env\u003C/span>[TEMP] = /tmp\nEOF\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверим синтаксис:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> php-fpm8.3 -t\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_08.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"настройка php\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_08.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перезапустим PHP-FPM:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart php8.3-fpm\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Проверим статус:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl status php8.3-fpm\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_09.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"php статус\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_09.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"установка-nextcloud-через-cli\"\n>Установка Nextcloud через CLI\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Установим Nextcloud через командную строку.\u003C/p>\n\u003Cblockquote>\n\u003Cp class=\"mt-2 mb-2 text-md\">Замените в команде:\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp class=\"mt-2 mb-2 text-md\">nextcloud – на имя своей базы данных\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp class=\"mt-2 mb-2 text-md\">ncuser – на имя своего пользователя БД\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp class=\"mt-2 mb-2 text-md\">~MysqlU24 – на свой пароль к БД\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>jetcry_admin – укажите Ваш логин админа на сервере Nextcloud\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp class=\"mt-2 mb-2 text-md\">jetcry – укажите свой пароль для админа сервера\u003C/p>\n\u003C/blockquote>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> -u www-data php /var/www/nextcloud/occ maintenance:install \\\n  --database \u003Cspan class=\"hljs-string\">&quot;mysql&quot;\u003C/span> \\\n  --database-name \u003Cspan class=\"hljs-string\">&quot;nextcloud&quot;\u003C/span> \\\n  --database-user \u003Cspan class=\"hljs-string\">&quot;ncuser&quot;\u003C/span> \\\n  --database-pass \u003Cspan class=\"hljs-string\">&quot;~MysqlU24&quot;\u003C/span> \\\n  --database-host \u003Cspan class=\"hljs-string\">&quot;localhost&quot;\u003C/span> \\\n  --admin-user \u003Cspan class=\"hljs-string\">&quot;jetcry_admin&quot;\u003C/span> \\\n  --admin-pass \u003Cspan class=\"hljs-string\">&quot;jetcry&quot;\u003C/span> \\\n  --data-dir \u003Cspan class=\"hljs-string\">&quot;/var/nextcloud-data&quot;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_10.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"установка nextcloud через cli\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_10.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"оптимизация-производительности\"\n>Оптимизация производительности\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Nextcloud по умолчанию защищён от атак подделки запросов (CSRF) и DNS rebinding. Он принимает соединения только с явно указанных доменов и IP-адресов.\u003Cbr>\nВыполним необходимые настройки конфигурации, добавив оптимизацию кеширования с помощью APCu и Redis.\u003Cbr>\nAPCu (Alternative PHP Cache User) — это встроенный в PHP кэш, работающий локально в оперативной памяти каждого процесса PHP. Он очень быстр и используется для хранения временных данных (например, конфигураций, маршрутов, промежуточных вычислений), что позволяет ускорить работу Nextcloud и снизить нагрузку на базу данных. Параметр memcache.local в конфигурации Nextcloud использует именно APCu.\u003Cbr>\nRedis — отдельный сервер кэширования (in-memory database), который может работать по сети или через сокет. Он используется для распределённого кеша и механизма блокировок между PHP-процессами. В параметрах memcache.locking и memcache.distributed указывается Redis, чтобы обеспечить корректную работу совместного доступа к файлам и ускорить выполнение операций в многопользовательском режиме.\u003Cbr>\nОткроем файл:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /var/www/nextcloud/config/config.php\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">В конфигурации меняем\u003Cbr>\n\u003Cem>‘trusted_domains’ =>\u003Cbr>\narray (\u003Cbr>\n0 => ‘localhost’,\u003Cbr>\n),\u003C/em>\u003Cbr>\nНа:\u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Замените nextcloud.217.60.36.214.sslip.io на Ваше доменное имя\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp class=\"mt-2 mb-2 text-md\">Замените 217.60.36.214 на Ваш IP-адрес\u003C/p>\n\u003C/blockquote>\n\u003Cpre class=\"hljs\">\u003Ccode>&#x27;trusted_domains&#x27; =&gt;\u003Cspan class=\"hljs-built_in\">\narray \u003C/span>(\n  0 =&gt; &#x27;localhost&#x27;,\n  1 =&gt; &#x27;nextcloud.217.60.36.214.sslip.io&#x27;,\n  2 =&gt; &#x27;217.60.36.214&#x27;,\n),\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Добавляем весь этот блок перед закрывающей скобкой );\u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Замените nextcloud.217.60.36.214.sslip.io на Ваше доменное имя\u003C/p>\n\u003C/blockquote>\n\u003Cpre class=\"hljs\">\u003Ccode>  \u003Cspan class=\"hljs-string\">&#x27;appstoreenabled&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">true\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;overwriteprotocol&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;https&#x27;\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;overwrite.cli.url&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;https://nextcloud.217.60.36.214.sslip.io&#x27;\u003C/span>,\n\n\u003Cspan class=\"hljs-comment\">// Оптимизация превью\u003C/span>\n  \u003Cspan class=\"hljs-string\">&#x27;enabledPreviewProviders&#x27;\u003C/span> =&gt;\n  \u003Cspan class=\"hljs-keyword\">array\u003C/span> (\n    \u003Cspan class=\"hljs-number\">0\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;OC\\\\Preview\\\\PNG&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-number\">1\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;OC\\\\Preview\\\\JPEG&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-number\">2\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;OC\\\\Preview\\\\GIF&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-number\">3\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;OC\\\\Preview\\\\BMP&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-number\">4\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;OC\\\\Preview\\\\XBitmap&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-number\">5\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;OC\\\\Preview\\\\MP3&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-number\">6\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;OC\\\\Preview\\\\TXT&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-number\">7\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;OC\\\\Preview\\\\MarkDown&#x27;\u003C/span>,\n  ),\n\n  \u003Cspan class=\"hljs-comment\">// Кеширование\u003C/span>\n  \u003Cspan class=\"hljs-string\">&#x27;filelocking.enabled&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">true\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;filelocking.ttl&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">3600\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;memcache.local&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;\\\\OC\\\\Memcache\\\\APCu&#x27;\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;memcache.locking&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;\\\\OC\\\\Memcache\\\\Redis&#x27;\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;memcache.distributed&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;\\\\OC\\\\Memcache\\\\Redis&#x27;\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;redis&#x27;\u003C/span> =&gt;\n  \u003Cspan class=\"hljs-keyword\">array\u003C/span> (\n    \u003Cspan class=\"hljs-string\">&#x27;host&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;127.0.0.1&#x27;\u003C/span>,\n    \u003Cspan class=\"hljs-string\">&#x27;port&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">6379\u003C/span>,\n    \u003Cspan class=\"hljs-string\">&#x27;timeout&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">3\u003C/span>,\n  ),\n\n  \u003Cspan class=\"hljs-comment\">// Настройки производительности\u003C/span>\n  \u003Cspan class=\"hljs-string\">&#x27;default_phone_region&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;RU&#x27;\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;maintenance_window_start&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">10800\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;upgrade.disable-web&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">true\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;maintenance&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">false\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;trashbin_retention_obligation&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;auto, 30&#x27;\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;versions_retention_obligation&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;auto, 30&#x27;\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;max_chunk_size&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">1073741824\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;max_input_time&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">3600\u003C/span>,\n  \n  \u003Cspan class=\"hljs-comment\">// Безопасность\u003C/span>\n  \u003Cspan class=\"hljs-string\">&#x27;htaccess.RewriteBase&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;/&#x27;\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;check_for_working_htaccess&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">true\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;force_ssl&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">true\u003C/span>,\n\n  \u003Cspan class=\"hljs-comment\">// Логирование\u003C/span>\n  \u003Cspan class=\"hljs-string\">&#x27;log_type&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;file&#x27;\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;logfile&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;/var/log/nextcloud/nextcloud.log&#x27;\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;loglevel&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">2\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;log_rotate_size&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">104857600\u003C/span>,\n\n  \u003Cspan class=\"hljs-comment\">// Дополнительные настройки производительности\u003C/span>\n  \u003Cspan class=\"hljs-string\">&#x27;jpeg_quality&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">60\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;enable_previews&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">true\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;preview_max_x&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">1024\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;preview_max_y&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">768\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;preview_max_scale_factor&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">1\u003C/span>,\n\n  \u003Cspan class=\"hljs-comment\">// Настройки файловой системы\u003C/span>\n  \u003Cspan class=\"hljs-string\">&#x27;filesystem_check_changes&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">0\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;part_file_in_storage&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">false\u003C/span>,\n\n  \u003Cspan class=\"hljs-comment\">// Отключение уведомлений об обновлениях\u003C/span>\n  \u003Cspan class=\"hljs-string\">&#x27;updater.release.channel&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-string\">&#x27;stable&#x27;\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;has_internet_connection&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">true\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;version_hide&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">true\u003C/span>,\n\n  \u003Cspan class=\"hljs-comment\">// Настройки сессий\u003C/span>\n  \u003Cspan class=\"hljs-string\">&#x27;session_lifetime&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-number\">86400\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;session_keepalive&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">true\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;auto_logout&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">false\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;check_data_directory_permissions&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">true\u003C/span>,\n  \u003Cspan class=\"hljs-string\">&#x27;config_is_read_only&#x27;\u003C/span> =&gt; \u003Cspan class=\"hljs-keyword\">false\u003C/span>,\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Выглядеть должно вот так:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_11.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"установка nextcloud через cli\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_11.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_12.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"установка nextcloud через cli\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_12.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Настраиваем корректные права, ограничим доступ к файлу с паролями базы данных:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chown\u003C/span> www-data:www-data /var/www/nextcloud/config/config.php &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">chmod\u003C/span> 640 /var/www/nextcloud/config/config.php\u003C/code>\u003C/pre>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"получение-ssl-сертификата-lets-encrypt\"\n>Получение SSL-сертификата Let’s Encrypt\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Устанавливаем certbot:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt install certbot python3-certbot-nginx -y\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создаем сертификат для нашего Nextcloud:\u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Замените nextcloud.217.60.36.214.sslip.io на Ваше доменное имя\u003C/p>\n\u003C/blockquote>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> certbot --nginx -d nextcloud.217.60.36.214.sslip.io\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Certbot задаст Вам несколько вопросов и автоматически сконфигурирует сертификат.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_13.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"установка nextcloud через cli\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_13.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Сертификат получен, выполним дополнительные настройки для работы Nextcloud по HTTPS.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"настройка-nginx-для-nextcloud-через-https\"\n>Настройка Nginx для Nextcloud через HTTPS\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">Удалим старый конфиг и создадим новый.\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> \u003Cspan class=\"hljs-built_in\">rm\u003C/span> /etc/nginx/sites-available/nextcloud &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/nginx/sites-available/nextcloud\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Вставляем новую конфигурацию:\u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Вам нужно 4 раза заменить nextcloud.217.60.36.214.sslip.io на имя своего сервера\u003C/p>\n\u003C/blockquote>\n\u003Cpre class=\"hljs\">\u003Ccode>upstream php-handler {\n    server unix:/run/php/php8.3-fpm.sock;\n}\n\nmap \u003Cspan class=\"hljs-variable\">$arg_v\u003C/span> \u003Cspan class=\"hljs-variable\">$asset_immutable\u003C/span> {\n    \u003Cspan class=\"hljs-string\">&quot;&quot;\u003C/span> \u003Cspan class=\"hljs-string\">&quot;&quot;\u003C/span>;\n    default \u003Cspan class=\"hljs-string\">&quot;immutable&quot;\u003C/span>;\n}\n\n\nserver {\n    server_name nextcloud.217.60.36.214.sslip.io;\n\n    root /var/www/nextcloud; \u003Cspan class=\"hljs-comment\"># путь до Nextcloud\u003C/span>\n    index index.php index.html /index.php\u003Cspan class=\"hljs-variable\">$request_uri\u003C/span>;\n                                                                                                                                                                                                                 \n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n\n    ssl_certificate /etc/letsencrypt/live/nextcloud.217.60.36.214.sslip.io/fullchain.pem; \u003Cspan class=\"hljs-comment\"># managed by Certbot\u003C/span>\n    ssl_certificate_key /etc/letsencrypt/live/nextcloud.217.60.36.214.sslip.io/privkey.pem; \u003Cspan class=\"hljs-comment\"># managed by Certbot\u003C/span>\n    include /etc/letsencrypt/options-ssl-nginx.conf; \u003Cspan class=\"hljs-comment\"># managed by Certbot\u003C/span>\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; \u003Cspan class=\"hljs-comment\"># managed by Certbot\u003C/span>\n\n    \u003Cspan class=\"hljs-comment\"># Защита от DoS и перегрузки\u003C/span>\n    limit_conn perip 30;\n    limit_req zone=global burst=40 nodelay;\n\n    add_header Strict-Transport-Security \u003Cspan class=\"hljs-string\">&quot;max-age=31536000; includeSubDomains; preload&quot;\u003C/span> always;\n    add_header X-Content-Type-Options nosniff always;\n    add_header X-XSS-Protection \u003Cspan class=\"hljs-string\">&quot;1; mode=block&quot;\u003C/span> always;\n    add_header X-Robots-Tag \u003Cspan class=\"hljs-string\">&quot;noindex, nofollow&quot;\u003C/span> always;\n    add_header X-Frame-Options \u003Cspan class=\"hljs-string\">&quot;SAMEORIGIN&quot;\u003C/span> always;\n    add_header Referrer-Policy \u003Cspan class=\"hljs-string\">&quot;no-referrer&quot;\u003C/span> always;\n    add_header X-Permitted-Cross-Domain-Policies \u003Cspan class=\"hljs-string\">&quot;none&quot;\u003C/span> always;\n    add_header X-Download-Options \u003Cspan class=\"hljs-string\">&quot;noopen&quot;\u003C/span> always;\n\n   access_log /var/log/nginx/nextcloud_access.log combined \u003Cspan class=\"hljs-keyword\">if\u003C/span>=\u003Cspan class=\"hljs-variable\">$suspicious\u003C/span>;\n    error_log /var/log/nginx/nextcloud_error.log warn;\n\u003Cspan class=\"hljs-comment\"># Блокировка вредоносных ботов\u003C/span>\n    \u003Cspan class=\"hljs-keyword\">if\u003C/span> (\u003Cspan class=\"hljs-variable\">$http_user_agent\u003C/span> ~* \u003Cspan class=\"hljs-string\">&quot;masscan|nmap|sqlmap|nikto|acunetix|nessus|wpscan&quot;\u003C/span>) {\n        \u003Cspan class=\"hljs-built_in\">return\u003C/span> 444;\n    }\n\u003Cspan class=\"hljs-comment\"># Блокировка ненужных HTTP-методов\u003C/span>\n    \u003Cspan class=\"hljs-keyword\">if\u003C/span> (\u003Cspan class=\"hljs-variable\">$request_method\u003C/span> !~ ^(GET|POST|HEAD|PROPFIND|OPTIONS|PUT|DELETE)$ ) {\n        \u003Cspan class=\"hljs-built_in\">return\u003C/span> 444;\n    }\n\n\n\n    client_max_body_size 10G;\n    client_body_timeout 300s;\n    client_body_buffer_size 128k;\n    fastcgi_buffers 64 4K;\n\n    gzip on;\n    gzip_vary on;\n    gzip_comp_level 4;\n    gzip_min_length 256;\n    gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;\ngzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy; \n    \u003Cspan class=\"hljs-comment\"># Перенаправление WebDAV-клиентов на endpoint WebDAV\u003C/span>\n    location = / {\n        \u003Cspan class=\"hljs-keyword\">if\u003C/span> ( \u003Cspan class=\"hljs-variable\">$http_user_agent\u003C/span> ~ ^DavClnt ) {\n            \u003Cspan class=\"hljs-built_in\">return\u003C/span> 302 /remote.php/webdav/$is_args\u003Cspan class=\"hljs-variable\">$args\u003C/span>;\n        }\n    }\n\n    \u003Cspan class=\"hljs-comment\"># Запрет доступа к скрытым служебным файлам и директориям\u003C/span>\n    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { \u003Cspan class=\"hljs-built_in\">return\u003C/span> 404; }\n    location ~ ^/(?:\\.|autotest|occ|issue|indie|db_|console)                { \u003Cspan class=\"hljs-built_in\">return\u003C/span> 404; }\n\n    \u003Cspan class=\"hljs-comment\"># Well-known URLs\u003C/span>\n    location ^~ /.well-known {\n        location = /.well-known/carddav     { \u003Cspan class=\"hljs-built_in\">return\u003C/span> 301 /remote.php/dav/; }\n        location = /.well-known/caldav      { \u003Cspan class=\"hljs-built_in\">return\u003C/span> 301 /remote.php/dav/; }\n        location = /.well-known/webfinger   { \u003Cspan class=\"hljs-built_in\">return\u003C/span> 301 /index.php/.well-known/webfinger; }\n        location = /.well-known/nodeinfo    { \u003Cspan class=\"hljs-built_in\">return\u003C/span> 301 /index.php/.well-known/nodeinfo; }\n        location = /.well-known/acme-challenge    { try_files \u003Cspan class=\"hljs-variable\">$uri\u003C/span> \u003Cspan class=\"hljs-variable\">$uri\u003C/span>/ =404; }\n        location = /.well-known/pki-validation    { try_files \u003Cspan class=\"hljs-variable\">$uri\u003C/span> \u003Cspan class=\"hljs-variable\">$uri\u003C/span>/ =404; }\n        \u003Cspan class=\"hljs-built_in\">return\u003C/span> 301 /remote.php/webdav/;\n    }\n\n    \u003Cspan class=\"hljs-comment\"># OCM и OCS провайдеры\u003C/span>\n    location ~ ^/oc[ms]-provider/? {\n        try_files \u003Cspan class=\"hljs-variable\">$uri\u003C/span> \u003Cspan class=\"hljs-variable\">$uri\u003C/span>/ /index.php\u003Cspan class=\"hljs-variable\">$request_uri\u003C/span>;\n    }\n\n    \u003Cspan class=\"hljs-comment\"># Доступ к интерфейсу обновления Nextcloud\u003C/span>\n    location ~ ^/updater(?:$|/) {\n        try_files \u003Cspan class=\"hljs-variable\">$uri\u003C/span>/ =404;\n        index index.php;\n    }\n\n    \u003Cspan class=\"hljs-comment\"># Основные обработчики PHP-скриптов (API, cron, публичный доступ, обновление и провайдеры)\u003C/span>\n    location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|oc[ms]-provider/.+)\\.php(?:$|/) {\n        fastcgi_split_path_info ^(.+?\\.php)(/.*)$;\n        \u003Cspan class=\"hljs-built_in\">set\u003C/span> \u003Cspan class=\"hljs-variable\">$path_info\u003C/span> \u003Cspan class=\"hljs-variable\">$fastcgi_path_info\u003C/span>;\n        try_files \u003Cspan class=\"hljs-variable\">$fastcgi_script_name\u003C/span> =404;\n\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root\u003Cspan class=\"hljs-variable\">$fastcgi_script_name\u003C/span>;\n        fastcgi_param PATH_INFO \u003Cspan class=\"hljs-variable\">$path_info\u003C/span>;\n        fastcgi_param HTTPS on;\n        fastcgi_param modHeadersAvailable \u003Cspan class=\"hljs-literal\">true\u003C/span>;\n        fastcgi_param front_controller_active \u003Cspan class=\"hljs-literal\">true\u003C/span>;\n        fastcgi_pass php-handler;\n\n        fastcgi_intercept_errors on;\n        fastcgi_request_buffering off;\n        fastcgi_max_temp_file_size 0;\n        fastcgi_read_timeout 600;\n        fastcgi_send_timeout 600;\n        fastcgi_connect_timeout 600;\n    }\n\n    \u003Cspan class=\"hljs-comment\"># Универсальный обработчик PHP \u003C/span>\n    location ~ \\.php(?:$|/) {\n        rewrite ^/(?!index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|oc[ms]-provider/.+|\\.well-known/.*) /index.php\u003Cspan class=\"hljs-variable\">$request_uri\u003C/span>;\n\n        fastcgi_split_path_info ^(.+?\\.php)(/.*)$;\n        \u003Cspan class=\"hljs-built_in\">set\u003C/span> \u003Cspan class=\"hljs-variable\">$path_info\u003C/span> \u003Cspan class=\"hljs-variable\">$fastcgi_path_info\u003C/span>;\n        try_files \u003Cspan class=\"hljs-variable\">$fastcgi_script_name\u003C/span> =404;\n\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root\u003Cspan class=\"hljs-variable\">$fastcgi_script_name\u003C/span>;\n        fastcgi_param PATH_INFO \u003Cspan class=\"hljs-variable\">$path_info\u003C/span>;\n        fastcgi_param HTTPS on;\n        fastcgi_param modHeadersAvailable \u003Cspan class=\"hljs-literal\">true\u003C/span>;\n        fastcgi_param front_controller_active \u003Cspan class=\"hljs-literal\">true\u003C/span>;\n        fastcgi_pass php-handler;\n\n        fastcgi_intercept_errors on;\n        fastcgi_request_buffering off;\n        fastcgi_max_temp_file_size 0;\n        fastcgi_read_timeout 600;\n        fastcgi_send_timeout 600;\n        fastcgi_connect_timeout 600;\n    }\n\n    \u003Cspan class=\"hljs-comment\"># Статические ресурсы и кэширование (css, js, изображения)\u003C/span>\n    location ~ \\.(?:css|js|mjs|svg|gif|png|jpg|ico|wasm|tflite|map|ogg|flac)$ {\n        try_files \u003Cspan class=\"hljs-variable\">$uri\u003C/span> /index.php\u003Cspan class=\"hljs-variable\">$request_uri\u003C/span>;\n        add_header Cache-Control \u003Cspan class=\"hljs-string\">&quot;public, max-age=15778463, \u003Cspan class=\"hljs-variable\">$asset_immutable\u003C/span>&quot;\u003C/span>;\n        access_log off;\n\n        location ~ \\.wasm$ {\n            default_type application/wasm;\n        }\n    }\n\n    \u003Cspan class=\"hljs-comment\"># Шрифты\u003C/span>\n    location ~ \\.woff2?$ {\n        try_files \u003Cspan class=\"hljs-variable\">$uri\u003C/span> /index.php\u003Cspan class=\"hljs-variable\">$request_uri\u003C/span>;\n        expires 7d;\n        access_log off;\n        add_header Cache-Control \u003Cspan class=\"hljs-string\">&quot;public, max-age=604800, immutable&quot;\u003C/span>;\n    }\n\n    \u003Cspan class=\"hljs-comment\"># Обработка всех остальных запросов через index.php\u003C/span>\n    location / {\n        try_files \u003Cspan class=\"hljs-variable\">$uri\u003C/span> \u003Cspan class=\"hljs-variable\">$uri\u003C/span>/ /index.php\u003Cspan class=\"hljs-variable\">$request_uri\u003C/span>;\n    }\n\n}\n\nserver {\n    listen 80;\n    listen [::]:80;\n    server_name nextcloud.217.60.36.214.sslip.io;\n\n    location ^~ /.well-known/acme-challenge/ {\n        try_files \u003Cspan class=\"hljs-variable\">$uri\u003C/span> \u003Cspan class=\"hljs-variable\">$uri\u003C/span>/ =404;\n    }\n\n    location / {\n        \u003Cspan class=\"hljs-built_in\">return\u003C/span> 301 https://$host\u003Cspan class=\"hljs-variable\">$request_uri\u003C/span>;\n    }\n}\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Мы только что установили сервер и на нем еще нет файлов, поэтому сразу же выполним миграцию новых типов файлов (MIME-типы).\u003Cbr>\nЭто нужно выполнить для того, чтобы они корректно поддерживались. При большом количестве файлов на сервере миграция может занять много времени.\u003Cbr>\nВводим команду:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> -u www-data php /var/www/nextcloud/occ maintenance:repair --include-expensive\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Выполним оптимизацию базы данных Nextcloud. Добавим недостающие индексы и удалим устаревшие/неэффективные:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> -u www-data php /var/www/nextcloud/occ db:add-missing-indices\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Настроим время начала окна обслуживания. В нашем примере выберем время начала выполнения в 3 ночи. Nextcloud использует параметр maintenance_window_start в секундах от полуночи. Вычисляем наше время:  3 часа умножить на 3600 = 10 800 секунд:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> -u www-data php /var/www/nextcloud/occ config:system:\u003Cspan class=\"hljs-built_in\">set\u003C/span> maintenance_window_start --value=10800 --\u003Cspan class=\"hljs-built_in\">type\u003C/span>=\u003Cspan class=\"hljs-built_in\">integer\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перезапустим PHP и Nginx:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart php8.3-fpm nginx\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Результат: \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_14.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"restart php8.3 и nginx\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_14.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"проверка-nextcloud\"\n>Проверка Nextcloud\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">После этого открываем в браузере Nextcloud:\u003C/p>\n\u003Cblockquote>\n\u003Cp class=\"mt-2 mb-2 text-md\">Замените на свое доменное имя\u003C/p>\n\u003C/blockquote>\n\u003Cpre class=\"hljs\">\u003Ccode>nextcloud.\u003Cspan class=\"hljs-number\">217.60\u003C/span>.\u003Cspan class=\"hljs-number\">36.214\u003C/span>\u003Cspan class=\"hljs-selector-class\">.sslip\u003C/span>\u003Cspan class=\"hljs-selector-class\">.io\u003C/span> \u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_15.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"заходим на nextcloud\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_15.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Видим приветствие:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_16.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"приветствие nextcloud\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_16.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Переходим в меню «Параметры сервера»:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_17.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"параметры сервера\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_17.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Вы должны увидеть сообщение:\n\u003Cstrong>Все проверки пройдены.\u003C/strong>\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_18.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Все проверки пройдены\"\n                            src=\"/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_18.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>На этом установка и базовая настройка Nextcloud завершены.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"краткие-итоги\"\n>Краткие итоги\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Мы развернули сервер с MySQL, PHP, Nginx и Nextcloud, настроив его как платформу для облачного хранения файлов. Для ускорения работы и повышения стабильности мы использовали APCu для локального кэширования, а Redis — для распределённого кэша и блокировки файлов.\u003C/p>\n","В статье рассмотрим установку Nextcloud на Ubuntu 24.04. Настроим MySQL, Nginx, PHP. Получим сертификат от Let's Encrypt. Настроим конфигурацию Nginx для HTTPS. Используем APCu для локального кэширования, а Redis — для распределённого кэша и блокировки файлов. Выполним первоначальную настройку Nextcloud.","/topics/installing-the-server-software/how-to-install-nextcloud-on-ubuntu/static/ru_image_00.webp",[267,268,269,272,275,278,281,284,287,290,293,296],{"title":209,"level":41,"id":210},{"title":175,"level":41,"id":176},{"title":270,"level":41,"id":271},"Установка и настройка базы данных","установка-и-настройка-базы-данных",{"title":273,"level":41,"id":274},"Настройка Nginx","настройка-nginx",{"title":276,"level":41,"id":277},"Загрузка и установка Nextcloud","загрузка-и-установка-nextcloud",{"title":279,"level":41,"id":280},"Настройка директорий, прав и параметров PHP","настройка-директорий-прав-и-параметров-php",{"title":282,"level":41,"id":283},"Установка Nextcloud через CLI","установка-nextcloud-через-cli",{"title":285,"level":41,"id":286},"Оптимизация производительности","оптимизация-производительности",{"title":288,"level":41,"id":289},"Получение SSL-сертификата Let’s Encrypt","получение-ssl-сертификата-lets-encrypt",{"title":291,"level":41,"id":292},"Настройка Nginx для Nextcloud через HTTPS","настройка-nginx-для-nextcloud-через-https",{"title":294,"level":41,"id":295},"Проверка Nextcloud","проверка-nextcloud",{"title":121,"level":41,"id":122},{"slug":298,"tags":299,"title":301,"content":302,"updatedAt":303,"markdown":304,"description":305,"cover":306,"tableOfContents":307},"how-to-install-netdata-on-ubuntu-server",[300,22,65],"netdata","Настройка мониторинга через NetData на Ubuntu 24.04","# Настройка мониторинга через NetData на Ubuntu 24.04\n\n## Введение\n\nNetData – инструмент с открытым исходным кодом для мониторинга производительности сервера Linux в режиме реального времени с веб-интерфейсом. Написанный на языке программирования C, NetData является сверхбыстрым и ресурсосберегающим.  \nNetData может отслеживать следующие параметры сервера:  \n• Загрузка ядер CPU  \n• Использование оперативной памяти  \n• Использование накопителей информации  \n• Пропускную способность сети  \n• Параметры брандмауэра  \n• Данные о процессах в системе  \n• Характеристики системных приложений  \n• Статус Apache и Nginx  \n• Работу базы данных MySQL  \n• Очередь сообщений почтового сервера Postfix  \n• Данные от аппаратных датчиков (температура, напряжение, влажность и др.)\n\n## Подготовка системы\n\n> Вам потребуются привилегии sudo для установки пакетов и настройки параметров системы.\n\nПеред установкой проведем обновление системы:\n```\nsudo apt-get update && sudo apt-get upgrade\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"обновление пакетов\" src=/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_01.png width=1024>\u003C/p>\n\nПосле успешной подготовки системы проведем установку необходимых зависимостей:\n```\nsudo apt-get install curl software-properties-common\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"установка зависимостей\" src=/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_02.png width=1024>\u003C/p>\n\n## Установка NetData\n\nNetdata входит в репозитории многих дистрибутивов Linux. Однако, скорее всего, это не последняя версия. Чтобы получить последнюю версию, необходимо воспользоваться официальным скриптом NetData для установки программного обеспечения. Этот метод удобен и автоматически установит все необходимые компоненты. Выполним следующую команду в нашей системе:\n```\nbash \u003C(curl -Ss https://my-netdata.io/kickstart-static64.sh)\n```\nСтоит отметить, что команда приведена для 64-битной операционной системы, для 32-битной выполните комнаду:\n```\nbash \u003C(curl -Ss https://my-netdata.io/kickstart.sh)\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"установка нетдата\" src=/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_03.png width=1024>\u003C/p>\n\nУстановка и обновление NetData успешно завершено.  \nПосле установки запустим, включим и проверим состояние Netdata:\n```\nsudo systemctl start netdata\nsudo systemctl enable netdata\nsudo systemctl status netdata\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"запуск проверка\" src=/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_04.png width=1024>\u003C/p>\n\n## Настройка NetData\n\nПроведем настройку доступа к панели мониторинга. После установки, Netdata будет доступен по адресу http://\u003Cyour_server_ip>:19999. \n\nВ случае, если на сервере используется брандмауэр, то вам необходимо открыть соответствующий TCP порт. По умолчанию Netdata прослушивает порт 19999. Проверим, что сервис корректно работает с помощью _netstat_:\n```\nsudo netstat -pnltu | grep netdata\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"проверка портов\" src=/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_05.png width=1024>\u003C/p>\n\nДля того, чтобы разрешить соответствующий порт в брандмауэре и перезапустить его выполним команды:\n\n```\nsudo ufw allow 19999/tcp\nsudo ufw reload\n```\n\nЕсли вы хотите изменить порт или ограничить доступ по IP, отредактируйте конфигурационный файл:\n```\nsudo nano /etc/netdata/netdata.conf\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"редактирование файла\" src=/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_06.png width=1024>\u003C/p>\n\nЕсли конфигурационный файл после проведенной установки не содержит никакой информации по настройкам NetData, то необходимо выполнить запрос файла конфигурации с помощью команды:\n```\nsudo wget –O /etc/netdata/netdata.conf http://localhost:19999/netdata.conf\n```\nПосле выполнения данной команды повторите открытие и редактирование файла с помощью предыдущей команды.\n\u003Cp align=\"center\">\u003Cimg alt=\"редактир_файла\" src=/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_07.png width=1024>\u003C/p>\n\nВ файле netdata.conf найдите строки **bind to** и **allow connections from**:\n\nДля изменения порта на 20001 задайте следующее значение строки **bind to**: \n\n```\nbind to = 127.0.0.1:20001\n```\n\nДля ограничения доступа по IP укажите нужный IP-адрес в строке **allow connections from**.  \nНапример, если Вы хотите, чтобы подключение выполнялось только с IP-адреса **192.168.0.5**, то строка должна выглядеть вот так:\n\n```\nallow connections from = 192.168.0.5/24\n```\n\nПосле внесения изменений, сохраните файл и перезапустите Netdata:\n```\nsudo systemctl restart netdata\n```\n\nЕсли Вы измените порт, то необходимо дополнительно разрешить его в брандмауэре и запретить предыдущий:\n\n```\nsudo ufw deny 19999/tcp\nsudo ufw allow 20001/tcp\nsudo ufw reload\n```\n\nПо умолчанию Netdata отслеживает множество системных параметров и служб. Также она позволяет добавлять мониторинг дополнительных сервисов или приложений, для этого необходимо провести настройки в соответствующих конфигурационных файлах, находящихся в директории /etc/netdata/.\n\nПроверим доступность и работу NetData на нашей операционной системе. Подключимся к ней с помощью браузера.\n\u003Cp align=\"center\">\u003Cimg alt=\"дашборд нетдата\" src=/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_08.png width=1024>\u003C/p>\n\n## Обновление и удаление Netdata\n\nПосле установки с помощью скрипта Netdata добавляет задание **cron ()** для автоматического ежедневного обновления программного. Если по каким-либо причинам обновление не происходит, можно провести обновление вручную с помощью команды:\n```\nsudo /usr/libexec/netdata/netdata-updater.sh\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"обнов_нетдата\" src=/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_09.png width=1024>\u003C/p>\n\nЕсли вам потребуется удалить Netdata с сервера воспользуйтесь скриптом:\n```\nsudo /usr/libexec/netdata/netdata-uninstaller.sh\n```\n\n## Защита Netdata\n\nПо умолчанию в NetData не предусмотрено никакой аутентификации при подключении по http. \nМы рекомендуем выполнить настройку базовой http-аутентификации с вводом логина и пароля, а также подключение по https. Очень подробно механизм настройки разобран в нашей статье [Как установить phpMyAdmin на Ubuntu 24.04](/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server). Рекомендуем ознакомиться и обеспечить дополнительную защиту данных при работе с NetData.\n\n## Заключение\n\nNetdata – это мощный и простой в использовании инструмент для мониторинга производительности в режиме реального времени. Вы можете настроить веб-интерфейс в соответствии с вашими конкретными потребностями. Следуя шагам, описанным в этой статье, Вы можете легко установить и выполнить первоначальную настройку Netdata.\n",["Date","2025-08-02T11:12:48.148Z"],"\n\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"введение\"\n>Введение\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>NetData – инструмент с открытым исходным кодом для мониторинга производительности сервера Linux в режиме реального времени с веб-интерфейсом. Написанный на языке программирования C, NetData является сверхбыстрым и ресурсосберегающим.\u003Cbr>\nNetData может отслеживать следующие параметры сервера:\u003Cbr>\n• Загрузка ядер CPU\u003Cbr>\n• Использование оперативной памяти\u003Cbr>\n• Использование накопителей информации\u003Cbr>\n• Пропускную способность сети\u003Cbr>\n• Параметры брандмауэра\u003Cbr>\n• Данные о процессах в системе\u003Cbr>\n• Характеристики системных приложений\u003Cbr>\n• Статус Apache и Nginx\u003Cbr>\n• Работу базы данных MySQL\u003Cbr>\n• Очередь сообщений почтового сервера Postfix\u003Cbr>\n• Данные от аппаратных датчиков (температура, напряжение, влажность и др.)\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"подготовка-системы\"\n>Подготовка системы\u003C/h2>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Вам потребуются привилегии sudo для установки пакетов и настройки параметров системы.\u003C/p>\n\u003C/blockquote>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перед установкой проведем обновление системы:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt-get update &amp;&amp; \u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt-get upgrade\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_01.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"обновление пакетов\"\n                            src=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_01.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После успешной подготовки системы проведем установку необходимых зависимостей:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> apt-get install curl software-properties-common\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_02.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"установка зависимостей\"\n                            src=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_02.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"установка-netdata\"\n>Установка NetData\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Netdata входит в репозитории многих дистрибутивов Linux. Однако, скорее всего, это не последняя версия. Чтобы получить последнюю версию, необходимо воспользоваться официальным скриптом NetData для установки программного обеспечения. Этот метод удобен и автоматически установит все необходимые компоненты. Выполним следующую команду в нашей системе:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>bash &lt;(\u003Cspan class=\"hljs-name\">curl\u003C/span> -Ss https\u003Cspan class=\"hljs-symbol\">://my-netdata\u003C/span>.io/kickstart-static64.sh)\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Стоит отметить, что команда приведена для 64-битной операционной системы, для 32-битной выполните комнаду:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>bash &lt;(\u003Cspan class=\"hljs-name\">curl\u003C/span> -Ss https\u003Cspan class=\"hljs-symbol\">://my-netdata\u003C/span>.io/kickstart.sh)\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_03.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"установка нетдата\"\n                            src=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_03.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Установка и обновление NetData успешно завершено.\u003Cbr>\nПосле установки запустим, включим и проверим состояние Netdata:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl start netdata\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl \u003Cspan class=\"hljs-built_in\">enable\u003C/span> netdata\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl status netdata\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_04.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"запуск проверка\"\n                            src=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_04.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"настройка-netdata\"\n>Настройка NetData\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проведем настройку доступа к панели мониторинга. После установки, Netdata будет доступен по адресу http://:19999. \n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В случае, если на сервере используется брандмауэр, то вам необходимо открыть соответствующий TCP порт. По умолчанию Netdata прослушивает порт 19999. Проверим, что сервис корректно работает с помощью \u003Cem>netstat\u003C/em>:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> netstat -pnltu | grep netdata\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_05.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверка портов\"\n                            src=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_05.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для того, чтобы разрешить соответствующий порт в брандмауэре и перезапустить его выполним команды:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw allow 19999/tcp\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw reload\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если вы хотите изменить порт или ограничить доступ по IP, отредактируйте конфигурационный файл:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/netdata/netdata.conf\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_06.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"редактирование файла\"\n                            src=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_06.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если конфигурационный файл после проведенной установки не содержит никакой информации по настройкам NetData, то необходимо выполнить запрос файла конфигурации с помощью команды:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> wget -O /etc/netdata/netdata.conf http://localhost:19999/netdata.conf\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После выполнения данной команды повторите открытие и редактирование файла с помощью предыдущей команды.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_07.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"редактир_файла\"\n                            src=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_07.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">В файле netdata.conf найдите строки \u003Cstrong>bind to\u003C/strong> и \u003Cstrong>allow connections from\u003C/strong>:\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для изменения порта на 20001 задайте следующее значение строки \u003Cstrong>bind to\u003C/strong>: \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">bind\u003C/span> to = \u003Cspan class=\"hljs-number\">127.0.0.1:20001\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для ограничения доступа по IP укажите нужный IP-адрес в строке \u003Cstrong>allow connections from\u003C/strong>.\u003Cbr>\nНапример, если Вы хотите, чтобы подключение выполнялось только с IP-адреса \u003Cstrong>192.168.0.5\u003C/strong>, то строка должна выглядеть вот так:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">allow\u003C/span> connections from = \u003Cspan class=\"hljs-number\">192.168.0.5\u003C/span>/\u003Cspan class=\"hljs-number\">24\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После внесения изменений, сохраните файл и перезапустите Netdata:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart netdata\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если Вы измените порт, то необходимо дополнительно разрешить его в брандмауэре и запретить предыдущий:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw deny 19999/tcp\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw allow 20001/tcp\n\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> ufw reload\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>По умолчанию Netdata отслеживает множество системных параметров и служб. Также она позволяет добавлять мониторинг дополнительных сервисов или приложений, для этого необходимо провести настройки в соответствующих конфигурационных файлах, находящихся в директории /etc/netdata/.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проверим доступность и работу NetData на нашей операционной системе. Подключимся к ней с помощью браузера.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_08.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"дашборд нетдата\"\n                            src=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_08.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"обновление-и-удаление-netdata\"\n>Обновление и удаление Netdata\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>После установки с помощью скрипта Netdata добавляет задание \u003Cstrong>cron ()\u003C/strong> для автоматического ежедневного обновления программного. Если по каким-либо причинам обновление не происходит, можно провести обновление вручную с помощью команды:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> /usr/libexec/netdata/netdata-updater.sh\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_09.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"обнов_нетдата\"\n                            src=\"/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_09.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если вам потребуется удалить Netdata с сервера воспользуйтесь скриптом:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> /usr/libexec/netdata/netdata-uninstaller.sh\u003C/code>\u003C/pre>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"защита-netdata\"\n>Защита Netdata\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>По умолчанию в NetData не предусмотрено никакой аутентификации при подключении по http.\nМы рекомендуем выполнить настройку базовой http-аутентификации с вводом логина и пароля, а также подключение по https. Очень подробно механизм настройки разобран в нашей статье \u003Ca   href=\"https://github.com/HostVDS-com/tutorials/blob/main/topics/installing-the-server-software/how-to-install-phpmyadmin-on-ubuntu-server/ru.md\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>Как установить phpMyAdmin на Ubuntu 24.04\u003C/a>. Рекомендуем ознакомиться и обеспечить дополнительную защиту данных при работе с NetData.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"заключение\"\n>Заключение\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Netdata – это мощный и простой в использовании инструмент для мониторинга производительности в режиме реального времени. Вы можете настроить веб-интерфейс в соответствии с вашими конкретными потребностями. Следуя шагам, описанным в этой статье, Вы можете легко установить и выполнить первоначальную настройку Netdata.\u003C/p>\n\u003C/p>","В статье рассмотрим как установить NetData на Ubuntu 24.04. Настроим NetData для удаленного мониторинга состояния сервера.","/topics/installing-the-server-software/how-to-install-netdata-on-ubuntu-server/static/ru_image_00.webp",[308,309,310,313,316,319,322],{"title":106,"level":41,"id":107},{"title":175,"level":41,"id":176},{"title":311,"level":41,"id":312},"Установка NetData","установка-netdata",{"title":314,"level":41,"id":315},"Настройка NetData","настройка-netdata",{"title":317,"level":41,"id":318},"Обновление и удаление Netdata","обновление-и-удаление-netdata",{"title":320,"level":41,"id":321},"Защита Netdata","защита-netdata",{"title":92,"level":41,"id":93},{"slug":14,"title":324,"description":325,"tutorials":326},"Основы Linux","Linux — это свободная и открытая операционная система, основанная на ядре Linux.",[327,348],{"slug":19,"tags":328,"title":329,"content":330,"updatedAt":331,"markdown":332,"description":333,"cover":37,"tableOfContents":334},[21,22,23,24,25,26,27,28,29,30,31],"Генерация SSH-ключей","# Генерация SSH-ключей\n\n## Преимущества использования ключей SSH\n\nSSH (Secure Shell) — это сетевой протокол, используемый для защищённого обмена данными и удалённого управления хостами. Протокол применяется в различных сферах, от администрирования серверов и работы с облачными хостингами до взаимодействия с базами данных и корпоративными системами. Одной из ключевых особенностей SSH является механизм аутентификации, использующий пару ключей — приватный и публичный. В статье мы рассмотрим, как происходит генерация ключей, подробно объяснив процесс создания и настройки дополнительных параметров ключей на разных операционных системах. \n\nИспользование SSH-ключей значительно безопаснее, чем использование пароля. В первую очередь, это связано с тем, что пароли можно угадать с помощью атак грубой силы, тогда как приватный ключ — это длинная и случайная последовательность данных, которая практически невозможна для подбора. Кроме того, в отличие от пароля, приватный ключ не передаётся по сети — только сам факт его использования проверяется сервером. \nТакже важным преимуществом является возможность настройки дополнительных параметров безопасности, таких как использование фраз-паролей для защиты приватных ключей.\n\n## Алгоритмы шифрования ключей\n\nSSH обеспечивает поддержку различных алгоритмов шифрования для обеспечения безопасной связи и аутентификации. Наиболее распространенными являются RSA, Ed25519, ECDSA и DSA.  \nПредпочтительнее сегодня использовать современный алгоритм Ed25519, разработанный для обеспечения высокой производительности, небольших размеров ключей и надежной безопасности. Он основан на эллиптической кривой Curve25519 и использует детерминированную генерацию ключей для устранения уязвимостей случайности.\n\nАлгоритм RSA является примером надежного алгоритма шифрования, его безопасность основана на вычислительной сложности разложения на множители больших целых чисел, в частности, произведения двух больших простых чисел. RSA с 2048-битным ключом считается безопасным от текущих угроз, в то время как 4096-битные ключи обеспечивают защиту от прогнозируемого будущего прогресса в вычислительной технике. Является наиболее распространенным ключом на сегодня. \n\nECDSA — это вариант алгоритма цифровой подписи (DSA) с эллиптической кривой. Он обеспечивает надежную защиту благодаря меньшим размерам ключей по сравнению с RSA, что делает его эффективным для систем с ограниченной пропускной способностью или хранилищем. Работает быстрее, чем RSA, но обеспечивает менее надежную защиту, чем Ed25519 из-за определенных проблем в реализации алгоритма. \n\nАлгоритм DSA не рекомендуется к применению в современных системах из-за низкого уровня обеспечения безопасности.  \nВ таблице покажем сравнение алгоритмов:  \n\n| Алгоритм | Размер ключа | Производительность | Безопасность | Пример использования |\n|-----:|---------------|---------------|---------------|---------------|\n|Ed25519 | 256 бит | Высокая | Надежный | Современные системы, системы с ограниченными ресурсами |\n|RSA | 2048 – 4096 бит | Средняя | Надежный (при использовании ключа от 2048 бит) | Системы общего назначения |\n|ECDSA | 256 – 521 бит | Средняя | Надежный | Современные системы, среды с ограниченными ресурсами |\n|DSA | 1024 бит | Низкая | Ненадежный | Устаревшие системы |\n\n  \nМы будем рассматривать примеры генерации ключей Ed25519 и RSA, размер которого мы выберем 2048 бит.\n\n## Генерация публичного и приватного ключей\n\nКлиент от OpenSSH уже включен в базовое программное обеспечение в Windows 10/11, Ubuntu, Debian. Рассмотрим генерацию ключей на клиентской машине c его помощью.  \nДля Windows нажмите Win+R, введите cmd. Для Ubuntu/Debian запустите терминал сочетанием клавиш Ctrl+Alt+T.  \nКоманда генерации ключа выглядит следующим образом:\n```\nssh-keygen [опции]\n```\nВ качестве опций можно использовать:  \n**–t**  [ dsa | ecdsa | ed25519 | rsa ]  \nУказывает тип криптографического алгоритма для ключа.  \n**-b** [размер_ключа]  \nОпределяет длину ключа в битах.  \n**-C** [комментарий]  \nДобавляет комментарий к ключу, помогая идентифицировать ключ.  Не влияет на безопасность ключа.  \n**-f** [путь_к_файлу]  \nУказывает путь и имя файла для сохранения сгенерированных ключей.  \n**-N** [пароль_для_ключа]  \nУстанавливает пароль для защиты приватного ключа.  \n**-q**  \nОтключает вывод сообщений о процессе генерации ключей. Полезно в автоматизированных сценариях.  \n**-v**  \nВключает режим подробного вывода. Полезно для отладки, если необходимо проследить каждый шаг выполнения команды.  \n**-P** [старый_пароль]  \nИзменяет пароль приватного ключа. В комбинации с параметром **-f** устанавливает новый пароль на существующий приватный ключ. \n\nВ качестве примера создадим ключ RSA в ОС Windows со следующими параметрами:  \n• длина ключа 2048 бит  \n• комментарий «Win-Ubuntu»  \n• пароль для приватного ключа: ssh  \n• имя ключа: id_rsa2048  \n• местоположение ключа: C:\\Users\\jetcry\\ssh_keys\\  \n\n> Директория «ssh_keys» должна быть предварительно создана. \n\nКоманда для создания ключа с указанными параметрами: \n```\nssh-keygen –t rsa –b 2048 –C Win-Ubuntu –N ssh –f C:\\Users\\jetcry\\ssh_keys\\id_rsa2048\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"ssh keygen \" src=/topics/linux-basics/ssh-key-generation/static/ru_image_01.png width=1024>\u003C/p>\n\nДавайте рассмотрим процесс создания ключа ed25519 без указания дополнительных параметров: \n```\nssh-keygen –t ed25519\n```\n\u003Cp align=\"center\">\u003Cimg alt=\"ssh keygen ed25519\" src=/topics/linux-basics/ssh-key-generation/static/ru_image_02.png width=1024>\u003C/p>\nЗдесь мы указали имя ключа, пароль (парольную фразу, passphrase).\nСозданный ключ был сохранен в корневой папке пользователя.\nДля Ububntu/Debian синтаксис команд аналогичен. Создадим ключ для Ubuntu. Проверим, что он появился в каталоге .ssh домашней директории. \n\u003Cp align=\"center\">\u003Cimg alt=\"ssh-keygen ubuntu\" src=/topics/linux-basics/ssh-key-generation/static/ru_image_03.png width=1024>\u003C/p>\nПары ключей сгенерированы и находятся в директории .ssh текущего пользователя Ubuntu.\n\n## Генерация ключа с помощью PuttyGen\n\nВ случае, если у Вас не установлен OpenSSH, например, на Windows 7 его нет в базовом наборе программного обеспечения, альтернативным способом создания ключа является использование приложения PuttyGen, доступного к скачиванию с официального сайта [Putty](https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html).\n\nВыбираем тип ключа и начинаем его генерацию. В нашем случае мы выбрали тип ключа – RSA, длина ключа – 2048 бит.\n\u003Cp align=\"center\">\u003Cimg alt=\"Puttygen\" src=/topics/linux-basics/ssh-key-generation/static/ru_image_04.png width=600>\u003C/p>\nВо время генерации необходимо хаотично двигать мышкой по экрану, это позволит создать неповторимый ключ. \n\u003Cp align=\"center\">\u003Cimg alt=\"Puttygen_move_mouse\" src=/topics/linux-basics/ssh-key-generation/static/ru_image_05.png width=600>\u003C/p>\nПосле того, как ключ будет создан, его можно защитить с помощью парольной фразы. После этого необходимо сохранить публичный и приватный ключи, желательно предварительно создать папку .ssh для текущего пользователя, например C:\\Users\\jetcry\\.ssh\n\u003Cp align=\"center\">\u003Cimg alt=\"Puttygen_save key\" src=/topics/linux-basics/ssh-key-generation/static/ru_image_06.png width=600>\u003C/p>\nВот как отображает созданные ключи ОС Windows:\n\u003Cp align=\"center\">\u003Cimg alt=\"Puttygen_end\" src=/topics/linux-basics/ssh-key-generation/static/ru_image_07.png width=600>\u003C/p>\nГенерация ключей завершена. \n\n## Краткие итоги\n\n1. Использование SSH-ключей сегодня является стандартом для обеспечения требований информационной безопасности.\n2. Чаще для генерации ключей используется OpenSSH, команда – ssh-keygen.\n3. Опции ssh-keygen позволяют широко управлять параметрами создаваемых ключей.\n4. Альтернативный вариант – PuttyGen.\n5. Предпочтительнее использовать ключи ED25519 или RSA с длиной ключа не менее 2048 бит.\n",["Date","2025-08-02T11:12:48.374Z"],"\n\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"преимущества-использования-ключей-ssh\"\n>Преимущества использования ключей SSH\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>SSH (Secure Shell) — это сетевой протокол, используемый для защищённого обмена данными и удалённого управления хостами. Протокол применяется в различных сферах, от администрирования серверов и работы с облачными хостингами до взаимодействия с базами данных и корпоративными системами. Одной из ключевых особенностей SSH является механизм аутентификации, использующий пару ключей — приватный и публичный. В статье мы рассмотрим, как происходит генерация ключей, подробно объяснив процесс создания и настройки дополнительных параметров ключей на разных операционных системах. \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Использование SSH-ключей значительно безопаснее, чем использование пароля. В первую очередь, это связано с тем, что пароли можно угадать с помощью атак грубой силы, тогда как приватный ключ — это длинная и случайная последовательность данных, которая практически невозможна для подбора. Кроме того, в отличие от пароля, приватный ключ не передаётся по сети — только сам факт его использования проверяется сервером.\nТакже важным преимуществом является возможность настройки дополнительных параметров безопасности, таких как использование фраз-паролей для защиты приватных ключей.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"алгоритмы-шифрования-ключей\"\n>Алгоритмы шифрования ключей\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>SSH обеспечивает поддержку различных алгоритмов шифрования для обеспечения безопасной связи и аутентификации. Наиболее распространенными являются RSA, Ed25519, ECDSA и DSA.\u003Cbr>\nПредпочтительнее сегодня использовать современный алгоритм Ed25519, разработанный для обеспечения высокой производительности, небольших размеров ключей и надежной безопасности. Он основан на эллиптической кривой Curve25519 и использует детерминированную генерацию ключей для устранения уязвимостей случайности.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Алгоритм RSA является примером надежного алгоритма шифрования, его безопасность основана на вычислительной сложности разложения на множители больших целых чисел, в частности, произведения двух больших простых чисел. RSA с 2048-битным ключом считается безопасным от текущих угроз, в то время как 4096-битные ключи обеспечивают защиту от прогнозируемого будущего прогресса в вычислительной технике. Является наиболее распространенным ключом на сегодня. \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>ECDSA — это вариант алгоритма цифровой подписи (DSA) с эллиптической кривой. Он обеспечивает надежную защиту благодаря меньшим размерам ключей по сравнению с RSA, что делает его эффективным для систем с ограниченной пропускной способностью или хранилищем. Работает быстрее, чем RSA, но обеспечивает менее надежную защиту, чем Ed25519 из-за определенных проблем в реализации алгоритма. \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Алгоритм DSA не рекомендуется к применению в современных системах из-за низкого уровня обеспечения безопасности.\u003Cbr>\nВ таблице покажем сравнение алгоритмов:  \u003C/p>\n\u003Ctable class=\"my-5\">\n\u003Cthead>\n\u003Ctr>\n\u003Cth align=\"right\" class=\"text-md\">Алгоритм\u003C/th>\n\u003Cth class=\"text-md\">Размер ключа\u003C/th>\n\u003Cth class=\"text-md\">Производительность\u003C/th>\n\u003Cth class=\"text-md\">Безопасность\u003C/th>\n\u003Cth class=\"text-md\">Пример использования\u003C/th>\n\u003C/tr>\n\u003C/thead>\n\u003Ctbody>\n\u003Ctr>\n\u003Ctd align=\"right\" class=\"text-sm\">Ed25519\u003C/td>\n\u003Ctd class=\"text-sm\">256 бит\u003C/td>\n\u003Ctd class=\"text-sm\">Высокая\u003C/td>\n\u003Ctd class=\"text-sm\">Надежный\u003C/td>\n\u003Ctd class=\"text-sm\">Современные системы, системы с ограниченными ресурсами\u003C/td>\n\u003C/tr>\n\u003Ctr>\n\u003Ctd align=\"right\" class=\"text-sm\">RSA\u003C/td>\n\u003Ctd class=\"text-sm\">2048 – 4096 бит\u003C/td>\n\u003Ctd class=\"text-sm\">Средняя\u003C/td>\n\u003Ctd class=\"text-sm\">Надежный (при использовании ключа от 2048 бит)\u003C/td>\n\u003Ctd class=\"text-sm\">Системы общего назначения\u003C/td>\n\u003C/tr>\n\u003Ctr>\n\u003Ctd align=\"right\" class=\"text-sm\">ECDSA\u003C/td>\n\u003Ctd class=\"text-sm\">256 – 521 бит\u003C/td>\n\u003Ctd class=\"text-sm\">Средняя\u003C/td>\n\u003Ctd class=\"text-sm\">Надежный\u003C/td>\n\u003Ctd class=\"text-sm\">Современные системы, среды с ограниченными ресурсами\u003C/td>\n\u003C/tr>\n\u003Ctr>\n\u003Ctd align=\"right\" class=\"text-sm\">DSA\u003C/td>\n\u003Ctd class=\"text-sm\">1024 бит\u003C/td>\n\u003Ctd class=\"text-sm\">Низкая\u003C/td>\n\u003Ctd class=\"text-sm\">Ненадежный\u003C/td>\n\u003Ctd class=\"text-sm\">Устаревшие системы\u003C/td>\n\u003C/tr>\n\u003C/tbody>\n\u003C/table>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Мы будем рассматривать примеры генерации ключей Ed25519 и RSA, размер которого мы выберем 2048 бит.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"генерация-публичного-и-приватного-ключей\"\n>Генерация публичного и приватного ключей\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Клиент от OpenSSH уже включен в базовое программное обеспечение в Windows 10/11, Ubuntu, Debian. Рассмотрим генерацию ключей на клиентской машине c его помощью.\u003Cbr>\nДля Windows нажмите Win+R, введите cmd. Для Ubuntu/Debian запустите терминал сочетанием клавиш Ctrl+Alt+T.\u003Cbr>\nКоманда генерации ключа выглядит следующим образом:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">ssh\u003C/span>-keygen\u003Cspan class=\"hljs-meta\"> [опции]\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">В качестве опций можно использовать:\u003Cbr>\n\u003Cstrong>–t\u003C/strong>  [ dsa | ecdsa | ed25519 | rsa ]\u003Cbr>\nУказывает тип криптографического алгоритма для ключа.\u003Cbr>\n\u003Cstrong>-b\u003C/strong> [размер_ключа]\u003Cbr>\nОпределяет длину ключа в битах.\u003Cbr>\n\u003Cstrong>-C\u003C/strong> [комментарий]\u003Cbr>\nДобавляет комментарий к ключу, помогая идентифицировать ключ.  Не влияет на безопасность ключа.\u003Cbr>\n\u003Cstrong>-f\u003C/strong> [путь\u003Cem>к\u003C/em>файлу]\u003Cbr>\nУказывает путь и имя файла для сохранения сгенерированных ключей.\u003Cbr>\n\u003Cstrong>-N\u003C/strong> [пароль\u003Cem>для\u003C/em>ключа]\u003Cbr>\nУстанавливает пароль для защиты приватного ключа.\u003Cbr>\n\u003Cstrong>-q\u003C/strong>\u003Cbr>\nОтключает вывод сообщений о процессе генерации ключей. Полезно в автоматизированных сценариях.\u003Cbr>\n\u003Cstrong>-v\u003C/strong>\u003Cbr>\nВключает режим подробного вывода. Полезно для отладки, если необходимо проследить каждый шаг выполнения команды.\u003Cbr>\n\u003Cstrong>-P\u003C/strong> [старый_пароль]\u003Cbr>\nИзменяет пароль приватного ключа. В комбинации с параметром \u003Cstrong>-f\u003C/strong> устанавливает новый пароль на существующий приватный ключ. \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В качестве примера создадим ключ RSA в ОС Windows со следующими параметрами:\u003Cbr>\n• длина ключа 2048 бит\u003Cbr>\n• комментарий «Win-Ubuntu»\u003Cbr>\n• пароль для приватного ключа: ssh\u003Cbr>\n• имя ключа: id_rsa2048\u003Cbr>\n• местоположение ключа: C:\\Users\\jetcry\\ssh_keys\\  \u003C/p>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Директория «ssh_keys» должна быть предварительно создана. \u003C/p>\n\u003C/blockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Команда для создания ключа с указанными параметрами: \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-variable\">ssh\u003C/span>\u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-variable\">keygen\u003C/span> \u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-variable\">t\u003C/span> \u003Cspan class=\"hljs-variable\">rsa\u003C/span> \u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-variable\">b\u003C/span> \u003Cspan class=\"hljs-number\">2048\u003C/span> \u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-built_in\">C\u003C/span> \u003Cspan class=\"hljs-variable\">Win\u003C/span>\u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-variable\">Ubuntu\u003C/span> \u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-built_in\">N\u003C/span> \u003Cspan class=\"hljs-variable\">ssh\u003C/span> \u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-variable\">f\u003C/span> \u003Cspan class=\"hljs-built_in\">C\u003C/span>\u003Cspan class=\"hljs-operator\">:\u003C/span>\\\u003Cspan class=\"hljs-variable\">Users\u003C/span>\\\u003Cspan class=\"hljs-variable\">jetcry\u003C/span>\\\u003Cspan class=\"hljs-type\">ssh_keys\u003C/span>\\\u003Cspan class=\"hljs-type\">id_rsa2048\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/ru_image_01.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"ssh keygen \"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/ru_image_01.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Давайте рассмотрим процесс создания ключа ed25519 без указания дополнительных параметров: \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>ssh-keygen -\u003Cspan class=\"hljs-built_in\">t\u003C/span> \u003Cspan class=\"hljs-symbol\">ed25519\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/ru_image_02.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"ssh keygen ed25519\"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/ru_image_02.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nЗдесь мы указали имя ключа, пароль (парольную фразу, passphrase).\nСозданный ключ был сохранен в корневой папке пользователя.\nДля Ububntu/Debian синтаксис команд аналогичен. Создадим ключ для Ubuntu. Проверим, что он появился в каталоге .ssh домашней директории. \n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/ru_image_03.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"ssh-keygen ubuntu\"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/ru_image_03.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nПары ключей сгенерированы и находятся в директории .ssh текущего пользователя Ubuntu.\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"генерация-ключа-с-помощью-puttygen\"\n>Генерация ключа с помощью PuttyGen\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В случае, если у Вас не установлен OpenSSH, например, на Windows 7 его нет в базовом наборе программного обеспечения, альтернативным способом создания ключа является использование приложения PuttyGen, доступного к скачиванию с официального сайта \u003Ca   href=\"https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>Putty\u003C/a>.\u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Выбираем тип ключа и начинаем его генерацию. В нашем случае мы выбрали тип ключа – RSA, длина ключа – 2048 бит.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/ru_image_04.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Puttygen\"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/ru_image_04.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nВо время генерации необходимо хаотично двигать мышкой по экрану, это позволит создать неповторимый ключ. \n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/ru_image_05.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Puttygen_move_mouse\"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/ru_image_05.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nПосле того, как ключ будет создан, его можно защитить с помощью парольной фразы. После этого необходимо сохранить публичный и приватный ключи, желательно предварительно создать папку .ssh для текущего пользователя, например C:\\Users\\jetcry\\.ssh\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/ru_image_06.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Puttygen_save key\"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/ru_image_06.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nВот как отображает созданные ключи ОС Windows:\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/ssh-key-generation/static/ru_image_07.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Puttygen_end\"\n                            src=\"/topics/linux-basics/ssh-key-generation/static/ru_image_07.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nГенерация ключей завершена.\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"краткие-итоги\"\n>Краткие итоги\u003C/h2>\n\u003Col>\n\u003Cli>Использование SSH-ключей сегодня является стандартом для обеспечения требований информационной безопасности.\u003C/li>\n\u003Cli>Чаще для генерации ключей используется OpenSSH, команда – ssh-keygen.\u003C/li>\n\u003Cli>Опции ssh-keygen позволяют широко управлять параметрами создаваемых ключей.\u003C/li>\n\u003Cli>Альтернативный вариант – PuttyGen.\u003C/li>\n\u003Cli>Предпочтительнее использовать ключи ED25519 или RSA с длиной ключа не менее 2048 бит.\u003C/li>\n\u003C/ol>\n","В статье рассмотрим алгоритмы шифрования ключей. Выполним генерацию публичного и приватного ключей с помощью ssh-keygen и PuttyGen.",[335,338,341,344,347],{"title":336,"level":41,"id":337},"Преимущества использования ключей SSH","преимущества-использования-ключей-ssh",{"title":339,"level":41,"id":340},"Алгоритмы шифрования ключей","алгоритмы-шифрования-ключей",{"title":342,"level":41,"id":343},"Генерация публичного и приватного ключей","генерация-публичного-и-приватного-ключей",{"title":345,"level":41,"id":346},"Генерация ключа с помощью PuttyGen","генерация-ключа-с-помощью-puttygen",{"title":121,"level":41,"id":122},{"slug":349,"tags":350,"title":351,"content":352,"updatedAt":353,"markdown":354,"description":355,"cover":356,"tableOfContents":357},"connect-to-the-server-using-ssh-keys",[21,22,23,24,25,26,27,28,29,30,31],"Подключение к серверу с помощью SSH-ключей","# Подключение к серверу с помощью SSH-ключей\n\n## Введение\n\nМеханизм генерации ssh-ключей был подробно описан в [этой статье](/linux-basics/ssh-key-generation). Сегодня мы рассмотрим различные способы переноса открытого ключа на сервер, а также настройку дополнительных параметров безопасности.\n\n## Предварительная настройка сервера\n\nВ качестве изначальных данных у нас готов открытый ключ на клиентской машине, так же есть доступ к root по паролю на сервере.  \nПри первом подключении необходимо подтвердить, что мы хотим установить соединение с удаленным сервером. Далее вводим пароль и вход в систему будет выполнен.\n\n\u003Cp align=\"center\">\u003Cimg alt=\"первое подключение к серверу\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_01.png width=1024>\u003C/p>\n\nМы настоятельно рекомендуем отключить возможность подключения к суперпользователю root через ssh. Поэтому нам необходимо создать нового пользователя для удаленного подключения и скопировать для него открытый ключ.\n\nСоздаем нового пользователя:\n\n```\nadduser \u003Cимя пользователя> \n```\n\nДобавляем его в группу администраторов:\n\n```\nadduser \u003Cимя пользователя> sudo\n```  \n\nПереключаемся в созданную учетную запись\n```  \nsu \u003Cимя пользователя>\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"создание нового пользователя на сервере\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_02.png width=1024>\u003C/p>\n\nЗаходим в корневую папку созданного пользователя:\n```\ncd\n```\n\nСоздаем директорию .ssh:\n```\nmkdir .ssh\n```\n\nУстанавливаем текущему пользователю права на чтение, запись и выполнение. Остальные пользователи и группы пользователей не имеют никаких прав.\n```\nchmod 700 .ssh\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"новая директория на сервере\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_03.png width=1024>\u003C/p>\n\nНовый пользователь и директория для хранения ключей созданы, переходим непосредственно к переносу ключей.\n\n## Автоматическое копирование ключа для Debian/Ubuntu\n\nНа Debian/Ubuntu для автоматической передачи ключа можно использовать команду:\n```\nssh-copy-id user@IP_server\n```\nгде  \n**user** – это имя пользователя на удаленном сервере;  \n**IP_server** – IP-адрес сервера.\n\u003Cp align=\"center\">\u003Cimg alt=\"автоматическое копирование ключа на сервер\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_04.png width=1024>\u003C/p>\n\nПосле копирования ключа вводим следующую команду:\n\n```\nssh user@IP_server\n```\nВ нашем случае она выглядит следующим образом:\n\n```\nssh admin@192.168.1.160\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"подключение на сервер после копирования ключа\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_05.png width=1024>\u003C/p>\n\nМы зашли на удаленный сервер, ввод пароля не потребовался.  \nСоздадим ключ ed25519 и скопируем его на сервер:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"создание ключа и его копирование на сервер\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_06.png width=1024>\u003C/p>\n\nПроверим на сервере созданные ключи в директории ~/.ssh \n\n\u003Cp align=\"center\">\u003Cimg alt=\"проверяем ключ в директории ~/.ssh\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_07.png width=600>\u003C/p>\n\nОткроем ключ на клиенте: \n\n\u003Cp align=\"center\">\u003Cimg alt=\"файл ключа на клиенте\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_08.png width=1024>\u003C/p>\n\nПроверим содержимое файла ssh_host_ed25519 на сервере:\n\n\u003Cp align=\"center\">\u003Cimg alt=\"файл ключа на сервере\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_09.png width=1024>\u003C/p>\n\nСодержимое ключей идентичны, копирование прошло успешно.\n\n## Ручное копирование ключа\n\nДля ручного копирования ключа будем использовать утилиту scp, входящую в стандартный пакет программ для Windows 10/11, Ubuntu/Debian. Настройки будем производить на примере ОС Windows 10.  \nСинтаксис команды выглядит следующим образом:\n```\nscp route\\ssh_key.pub user@IP-server:/home/user/.ssh/\n```\nгде  \n**route** – путь до ключа  \n**ssh_key.pub** – имя ключа, расширение .pub.  \n**user** – имя пользователя на сервере  \nВ нашем случае:\n```\nscp C:\\Users\\jetcry\\.ssh\\id_ed25519.pub admin@192.168.1.160:/home/admin/.ssh/\n```\nПоявится результат выполнения команды:\n\u003Cp align=\"center\">\u003Cimg alt=\"пример использования scp\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_10.png width=1024>\u003C/p>\n\nПереходим на сервер. Необходимо содержимое ключа скопировать в файл authorized_keys, который еще не создан. Воспользуемся следующими командами:\n\n```\ncd ~/.ssh\ncat id_ed25519.pub >> authorized_keys\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"создание файла authorized_keys и копирование в него ключа\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_11.png width=600>\u003C/p>\n\nОткрываем файл, проверяем, что все получилось:\n\n```\nnano authorized_keys\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"открываем authorized_keys с помощью текстового редактора nano\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_12.png width=1024>\u003C/p>\nВыходим из файла с помощью Сtrl+X.\n\nКлюч скопирован в ручном режиме.\n\n## Создание сервера на HostVDS и подключение к нему с помощью SSH-ключей\n\nНа сайте [hostvds.com](https://hostvds.com) выберем создать новый сервер. Укажем его местоположение, подберем тарифный план и образ системы. После этого нажмем «+» в поле “SSH-ключ”. \n\u003Cp align=\"center\">\u003Cimg alt=\"добавление ssh-ключа на hostvds\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_13.png width=600>\u003C/p>\nВставим данные нашего созданного ключа, включая его название, в открывшееся поле.\n\u003Cp align=\"center\">\u003Cimg alt=\"копирование ssh-ключа при создании сервера на hostvds\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_14.png width=600>\u003C/p>\nПосле этого создаем виртуальный сервер с заранее установленным ssh-ключом и операционной системой Ubuntu 22.04.\n\u003Cp align=\"center\">\u003Cimg alt=\"создание сервера\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_15.png width=1024>\u003C/p>\nКак только появится IP-адрес сервера, выполним подключение через терминал. Укажем протокол ssh, IP-адрес, root в качестве пользователя.\n\u003Cp align=\"center\">\u003Cimg alt=\"подключение к серверу hostvds.com\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_16.png width=1024>\u003C/p>\nПодключение выполнено. В следующем разделе разберем механизмы дополнительной защиты Вашего сервера.\n\n## Дополнительная защита подключения к серверу\n\nНастройки будем выполнять в файле /etc/ssh/sshd_config. Открываем его с помощью редактора nano\n\n```\nsudo nano /etc/ssh/sshd_config\n```\nУкажем подключение по SSH через другой порт. Расскомментируем строчку **#Port 22** и укажем любой другой номер порта из частного (динамического) диапазона операционной системы: **от 49152 до 65535**. \n\n```\nPort 59898\n```\n\n> Если Вы хотите выбрать другой порт для работы протокола ssh, необходимо убедиться, что он не занят системой. Для этого воспользуйтесь утилитой **netstat**.\n\n\u003Cp align=\"center\">\u003Cimg alt=\"изменение номера порта ssh\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_17.png width=600>\u003C/p>\n\nДалее отключим возможность подключения к суперпользователю root и вход с помощью пароля. \n\nУдаляем возможность подключения через root:\n\n```\nPermitRootLogin no\n```\n\nУдаляем возможность подключения с помощью пароля:\n\n```\nPasswordAuthentication no\nPermitEmptyPasswords no\n```\n\nУказываем, что подключение идет только с помощью ключей:\n\n```\nPubkeyAuthentication yes\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"изменения параметров в sshd_config\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_18.png width=1024>\u003C/p>\n\nСохраняем: Ctrl+O. Enter (соглашаемся с именем сохраняемого файла).\n\nВыходим из файла с помощью Сtrl+X. \n\nПереходим в директорию sshd_config:\n\n```\ncd /etc/ssh/sshd_config\n``` \n\nПроверяем наличие там дополнительных файлов конфигурации командой **ls**\n\n\u003Cp align=\"center\">\u003Cimg alt=\"дополнительные файлы конфигурации\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_19.png width=600>\u003C/p>\n\nЗапрещаем подключение с помощью пароля (меняем **“yes”** на **“no”**)\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Запрещаем подключение с помощью пароля\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_20.png width=600>\u003C/p>\n\nПерезапускаем службу ssh\n\n```\nsudo systemctl restart ssh\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"Перезапускаем службу ssh\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_21.png width=600>\u003C/p>\n\nТеперь при подключении к пользователям root и admin по ssh будет ошибка. Подключение будет доступно только при указании верного номера порта для протокола ssh. \n\n\u003Cp align=\"center\">\u003Cimg alt=\"невозможность подключения со стандартными параметрами\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_22.png width=1024>\u003C/p>\n\nЕсли на клиенте перенести ключи из папки .ssh, то подключение будет так же запрещено, даже с указанием номера порта \n\n\u003Cp align=\"center\">\u003Cimg alt=\"невозможно подключиться без ключа\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_23.png width=600>\u003C/p>\n\nУкажем с помощью параметра **-i**, какой ключ следует использовать для подключения:\n\n```\nssh admin@192.168.1.160 -i C:\\Users\\jetcry\\id_ed25519 –p 59898\n```\n\n\u003Cp align=\"center\">\u003Cimg alt=\"подключение с указанием ключа и номера порта\" src=/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_24.png width=1024>\u003C/p>\n\nВход выполнен. Мы завершили настройку дополнительной безопасности при подключении к серверу.\n\n## Краткие итоги\n1. Использование SSH-ключей для аутентификации обеспечивает максимальный уровень безопасности при подключении к удаленному серверу.\n2. Закрытый ключ остается на клиентской машине, открытый копируется на сервер.\n3. Команда ssh-copy-id – автоматическое копирование ключа в Ubuntu/Debian.\n4. Утилита scp – копирование ключа в ручном режиме.\n5. Для обеспечения дополнительной безопасности измените номер порта для протокола ssh, удалите возможность подключения к суперпользователю root и запретите использование паролей.\n",["Date","2025-08-02T11:12:48.347Z"],"\n\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"введение\"\n>Введение\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Механизм генерации ssh-ключей был подробно описан в \u003Ca   href=\"https://github.com/HostVDS-com/tutorials/blob/main/topics/linux-basics/ssh-key-generation/ru.md\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>этой статье\u003C/a>. Сегодня мы рассмотрим различные способы переноса открытого ключа на сервер, а также настройку дополнительных параметров безопасности.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"предварительная-настройка-сервера\"\n>Предварительная настройка сервера\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>В качестве изначальных данных у нас готов открытый ключ на клиентской машине, так же есть доступ к root по паролю на сервере.\u003Cbr>\nПри первом подключении необходимо подтвердить, что мы хотим установить соединение с удаленным сервером. Далее вводим пароль и вход в систему будет выполнен.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_01.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"первое подключение к серверу\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_01.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Мы настоятельно рекомендуем отключить возможность подключения к суперпользователю root через ssh. Поэтому нам необходимо создать нового пользователя для удаленного подключения и скопировать для него открытый ключ.\u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создаем нового пользователя:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>adduser \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">имя\u003C/span> \u003Cspan class=\"hljs-attr\">пользователя\u003C/span>&gt;\u003C/span> \u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Добавляем его в группу администраторов:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>adduser \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">имя\u003C/span> \u003Cspan class=\"hljs-attr\">пользователя\u003C/span>&gt;\u003C/span> sudo\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Переключаемся в созданную учетную запись\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>su \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">имя\u003C/span> \u003Cspan class=\"hljs-attr\">пользователя\u003C/span>&gt;\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_02.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"создание нового пользователя на сервере\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_02.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Заходим в корневую папку созданного пользователя:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">cd\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Создаем директорию .ssh:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>mkdir .ssh\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Устанавливаем текущему пользователю права на чтение, запись и выполнение. Остальные пользователи и группы пользователей не имеют никаких прав.\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">chmod\u003C/span> \u003Cspan class=\"hljs-number\">700\u003C/span> .ssh\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_03.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"новая директория на сервере\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_03.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Новый пользователь и директория для хранения ключей созданы, переходим непосредственно к переносу ключей.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"автоматическое-копирование-ключа-для-debianubuntu\"\n>Автоматическое копирование ключа для Debian/Ubuntu\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>На Debian/Ubuntu для автоматической передачи ключа можно использовать команду:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>ssh\u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-keyword\">copy\u003C/span>\u003Cspan class=\"hljs-operator\">-\u003C/span>id \u003Cspan class=\"hljs-keyword\">user\u003C/span>\u003Cspan class=\"hljs-variable\">@IP_server\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">где\u003Cbr>\n\u003Cstrong>user\u003C/strong> – это имя пользователя на удаленном сервере;\u003Cbr>\n\u003Cstrong>IP_server\u003C/strong> – IP-адрес сервера.\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_04.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"автоматическое копирование ключа на сервер\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_04.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">После копирования ключа вводим следующую команду:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">ssh\u003C/span> user\u003Cspan class=\"hljs-variable\">@IP_server\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">В нашем случае она выглядит следующим образом:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">ssh\u003C/span> admin@\u003Cspan class=\"hljs-number\">192.168.1.160\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_05.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"подключение на сервер после копирования ключа\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_05.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Мы зашли на удаленный сервер, ввод пароля не потребовался.\u003Cbr>\nСоздадим ключ ed25519 и скопируем его на сервер:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_06.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"создание ключа и его копирование на сервер\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_06.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проверим на сервере созданные ключи в директории ~/.ssh \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_07.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"проверяем ключ в директории ~/.ssh\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_07.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Откроем ключ на клиенте: \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_08.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"файл ключа на клиенте\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_08.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проверим содержимое файла ssh_host_ed25519 на сервере:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_09.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"файл ключа на сервере\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_09.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Содержимое ключей идентичны, копирование прошло успешно.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"ручное-копирование-ключа\"\n>Ручное копирование ключа\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Для ручного копирования ключа будем использовать утилиту scp, входящую в стандартный пакет программ для Windows 10/11, Ubuntu/Debian. Настройки будем производить на примере ОС Windows 10.\u003Cbr>\nСинтаксис команды выглядит следующим образом:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>scp route\u003Cspan class=\"hljs-string\">\\ssh_key.pub\u003C/span> user@IP-server:\u003Cspan class=\"hljs-regexp\">/home/user/\u003C/span>.ssh/\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">где\u003Cbr>\n\u003Cstrong>route\u003C/strong> – путь до ключа\u003Cbr>\n\u003Cstrong>ssh_key.pub\u003C/strong> – имя ключа, расширение .pub.\u003Cbr>\n\u003Cstrong>user\u003C/strong> – имя пользователя на сервере\u003Cbr>\nВ нашем случае:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>scp \u003Cspan class=\"hljs-symbol\">C:\u003C/span>\\\u003Cspan class=\"hljs-title class_\">Users\u003C/span>\\jetcry\\.ssh\\id_ed25519.pub admin\u003Cspan class=\"hljs-variable\">@192\u003C/span>.\u003Cspan class=\"hljs-number\">168.1\u003C/span>.\u003Cspan class=\"hljs-number\">160\u003C/span>\u003Cspan class=\"hljs-symbol\">:/home/admin/\u003C/span>.ssh/\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Появится результат выполнения команды:\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_10.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"пример использования scp\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_10.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Переходим на сервер. Необходимо содержимое ключа скопировать в файл authorized_keys, который еще не создан. Воспользуемся следующими командами:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">cd\u003C/span> ~/.ssh\n\u003Cspan class=\"hljs-built_in\">cat\u003C/span> id_ed25519.pub &gt;&gt; authorized_keys\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_11.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"создание файла authorized_keys и копирование в него ключа\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_11.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Открываем файл, проверяем, что все получилось:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">nano authorized_keys\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_12.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"открываем authorized_keys с помощью текстового редактора nano\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_12.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nВыходим из файла с помощью Сtrl+X.\n\u003Cp class=\"mt-2 mb-2 text-md\">Ключ скопирован в ручном режиме.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"создание-сервера-на-hostvds-и-подключение-к-нему-с-помощью-ssh-ключей\"\n>Создание сервера на HostVDS и подключение к нему с помощью SSH-ключей\u003C/h2>\n\u003Cp class=\"mt-2 mb-2 text-md\">На сайте \u003Ca   href=\"https://hostvds.com\"\n  rel=\"nofollow\"\n  class=\"text-sky-700 transition-opacity duration-75 hover:opacity-70\"\n  target=\"_blank\"\n>hostvds.com\u003C/a> выберем создать новый сервер. Укажем его местоположение, подберем тарифный план и образ системы. После этого нажмем «+» в поле “SSH-ключ”. \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_13.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"добавление ssh-ключа на hostvds\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_13.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nВставим данные нашего созданного ключа, включая его название, в открывшееся поле.\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_14.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"копирование ssh-ключа при создании сервера на hostvds\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_14.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nПосле этого создаем виртуальный сервер с заранее установленным ssh-ключом и операционной системой Ubuntu 22.04.\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_15.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"создание сервера\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_15.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nКак только появится IP-адрес сервера, выполним подключение через терминал. Укажем протокол ssh, IP-адрес, root в качестве пользователя.\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_16.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"подключение к серверу hostvds.com\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_16.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\nПодключение выполнено. В следующем разделе разберем механизмы дополнительной защиты Вашего сервера.\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"дополнительная-защита-подключения-к-серверу\"\n>Дополнительная защита подключения к серверу\u003C/h2>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Настройки будем выполнять в файле /etc/ssh/sshd_config. Открываем его с помощью редактора nano\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> nano /etc/ssh/sshd_config\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Укажем подключение по SSH через другой порт. Расскомментируем строчку \u003Cstrong>#Port 22\u003C/strong> и укажем любой другой номер порта из частного (динамического) диапазона операционной системы: \u003Cstrong>от 49152 до 65535\u003C/strong>. \u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">Port\u003C/span> \u003Cspan class=\"hljs-number\">59898\u003C/span>\u003C/code>\u003C/pre>\n\u003Cblockquote>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если Вы хотите выбрать другой порт для работы протокола ssh, необходимо убедиться, что он не занят системой. Для этого воспользуйтесь утилитой \u003Cstrong>netstat\u003C/strong>.\u003C/p>\n\u003C/blockquote>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_17.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"изменение номера порта ssh\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_17.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Далее отключим возможность подключения к суперпользователю root и вход с помощью пароля. \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Удаляем возможность подключения через root:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">PermitRootLogin\u003C/span> \u003Cspan class=\"hljs-literal\">no\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp class=\"mt-2 mb-2 text-md\">Удаляем возможность подключения с помощью пароля:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">PasswordAuthentication\u003C/span> \u003Cspan class=\"hljs-literal\">no\u003C/span>\nPermitEmptyPasswords \u003Cspan class=\"hljs-literal\">no\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Указываем, что подключение идет только с помощью ключей:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">PubkeyAuthentication\u003C/span> \u003Cspan class=\"hljs-literal\">yes\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_18.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"изменения параметров в sshd_config\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_18.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Сохраняем: Ctrl+O. Enter (соглашаемся с именем сохраняемого файла).\u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Выходим из файла с помощью Сtrl+X. \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Переходим в директорию sshd_config:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">cd\u003C/span> /etc/ssh/sshd_config\u003C/code>\u003C/pre>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Проверяем наличие там дополнительных файлов конфигурации командой \u003Cstrong>ls\u003C/strong>\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_19.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"дополнительные файлы конфигурации\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_19.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Запрещаем подключение с помощью пароля (меняем \u003Cstrong>“yes”\u003C/strong> на \u003Cstrong>“no”\u003C/strong>)\u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_20.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Запрещаем подключение с помощью пароля\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_20.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Перезапускаем службу ssh\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-built_in\">sudo\u003C/span> systemctl restart ssh\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_21.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"Перезапускаем службу ssh\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_21.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Теперь при подключении к пользователям root и admin по ssh будет ошибка. Подключение будет доступно только при указании верного номера порта для протокола ssh. \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_22.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"невозможность подключения со стандартными параметрами\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_22.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Если на клиенте перенести ключи из папки .ssh, то подключение будет так же запрещено, даже с указанием номера порта \u003C/p>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_23.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"невозможно подключиться без ключа\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_23.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp class=\"mt-2 mb-2 text-md\">Укажем с помощью параметра \u003Cstrong>-i\u003C/strong>, какой ключ следует использовать для подключения:\u003C/p>\n\u003Cpre class=\"hljs\">\u003Ccode>\u003Cspan class=\"hljs-attribute\">ssh\u003C/span> admin@\u003Cspan class=\"hljs-number\">192.168.1.160\u003C/span> -i C:\\Users\\jetcry\\id_ed25519 -p \u003Cspan class=\"hljs-number\">59898\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp align=\"center\">\n                        \u003Cpicture>\n                          \u003Csource srcset=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_24.webp\" type=\"image/webp\">\n                          \u003Cimg                             alt=\"подключение с указанием ключа и номера порта\"\n                            src=\"/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_24.png\"\n                            loading=\"lazy\"\n                            class=\"aspect-ratio-16/9 object-contain max-w-96\"\n                          >\n                        \u003C/picture>\n                \u003C/p>\n\u003Cp   class=\"mt-2 mb-2 text-md\"\n>Вход выполнен. Мы завершили настройку дополнительной безопасности при подключении к серверу.\u003C/p>\n\u003Ch2   class=\"text-2xl font-bold mt-10 mb-2 tracking-[-0.01em]\"\n  id=\"краткие-итоги\"\n>Краткие итоги\u003C/h2>\n\u003Col>\n\u003Cli>Использование SSH-ключей для аутентификации обеспечивает максимальный уровень безопасности при подключении к удаленному серверу.\u003C/li>\n\u003Cli>Закрытый ключ остается на клиентской машине, открытый копируется на сервер.\u003C/li>\n\u003Cli>Команда ssh-copy-id – автоматическое копирование ключа в Ubuntu/Debian.\u003C/li>\n\u003Cli>Утилита scp – копирование ключа в ручном режиме.\u003C/li>\n\u003Cli>Для обеспечения дополнительной безопасности измените номер порта для протокола ssh, удалите возможность подключения к суперпользователю root и запретите использование паролей.\u003C/li>\n\u003C/ol>\n","В статье рассмотрим как подключиться к серверу с помощью SSH-ключей. Настроим автоматическое и ручное копирование ключей на сервер. Создадим сервера на HostVDS и выполним подключение к нему с помощью SSH-ключей. Настроим дополнительную защиту подключения.","/topics/linux-basics/connect-to-the-server-using-ssh-keys/static/ru_image_00.webp",[358,359,362,365,368,371,374],{"title":106,"level":41,"id":107},{"title":360,"level":41,"id":361},"Предварительная настройка сервера","предварительная-настройка-сервера",{"title":363,"level":41,"id":364},"Автоматическое копирование ключа для Debian/Ubuntu","автоматическое-копирование-ключа-для-debianubuntu",{"title":366,"level":41,"id":367},"Ручное копирование ключа","ручное-копирование-ключа",{"title":369,"level":41,"id":370},"Создание сервера на HostVDS и подключение к нему с помощью SSH-ключей","создание-сервера-на-hostvds-и-подключение-к-нему-с-помощью-ssh-ключей",{"title":372,"level":41,"id":373},"Дополнительная защита подключения к серверу","дополнительная-защита-подключения-к-серверу",{"title":121,"level":41,"id":122}],"uses":{}},null,null]}
